"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_setup_mock-service-worker_ts"],{

/***/ "(app-pages-browser)/./node_modules/.pnpm/path-to-regexp@6.2.2/node_modules/path-to-regexp/dist.es2015/index.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/path-to-regexp@6.2.2/node_modules/path-to-regexp/dist.es2015/index.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compile: function() { return /* binding */ compile; },\n/* harmony export */   match: function() { return /* binding */ match; },\n/* harmony export */   parse: function() { return /* binding */ parse; },\n/* harmony export */   pathToRegexp: function() { return /* binding */ pathToRegexp; },\n/* harmony export */   regexpToFunction: function() { return /* binding */ regexpToFunction; },\n/* harmony export */   tokensToFunction: function() { return /* binding */ tokensToFunction; },\n/* harmony export */   tokensToRegexp: function() { return /* binding */ tokensToRegexp; }\n/* harmony export */ });\n/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n    var tokens = [];\n    var i = 0;\n    while (i < str.length) {\n        var char = str[i];\n        if (char === \"*\" || char === \"+\" || char === \"?\") {\n            tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"\\\\\") {\n            tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n            continue;\n        }\n        if (char === \"{\") {\n            tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"}\") {\n            tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \":\") {\n            var name = \"\";\n            var j = i + 1;\n            while (j < str.length) {\n                var code = str.charCodeAt(j);\n                if (\n                // `0-9`\n                (code >= 48 && code <= 57) ||\n                    // `A-Z`\n                    (code >= 65 && code <= 90) ||\n                    // `a-z`\n                    (code >= 97 && code <= 122) ||\n                    // `_`\n                    code === 95) {\n                    name += str[j++];\n                    continue;\n                }\n                break;\n            }\n            if (!name)\n                throw new TypeError(\"Missing parameter name at \".concat(i));\n            tokens.push({ type: \"NAME\", index: i, value: name });\n            i = j;\n            continue;\n        }\n        if (char === \"(\") {\n            var count = 1;\n            var pattern = \"\";\n            var j = i + 1;\n            if (str[j] === \"?\") {\n                throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \".concat(j));\n            }\n            while (j < str.length) {\n                if (str[j] === \"\\\\\") {\n                    pattern += str[j++] + str[j++];\n                    continue;\n                }\n                if (str[j] === \")\") {\n                    count--;\n                    if (count === 0) {\n                        j++;\n                        break;\n                    }\n                }\n                else if (str[j] === \"(\") {\n                    count++;\n                    if (str[j + 1] !== \"?\") {\n                        throw new TypeError(\"Capturing groups are not allowed at \".concat(j));\n                    }\n                }\n                pattern += str[j++];\n            }\n            if (count)\n                throw new TypeError(\"Unbalanced pattern at \".concat(i));\n            if (!pattern)\n                throw new TypeError(\"Missing pattern at \".concat(i));\n            tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n            i = j;\n            continue;\n        }\n        tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n    }\n    tokens.push({ type: \"END\", index: i, value: \"\" });\n    return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\nfunction parse(str, options) {\n    if (options === void 0) { options = {}; }\n    var tokens = lexer(str);\n    var _a = options.prefixes, prefixes = _a === void 0 ? \"./\" : _a;\n    var defaultPattern = \"[^\".concat(escapeString(options.delimiter || \"/#?\"), \"]+?\");\n    var result = [];\n    var key = 0;\n    var i = 0;\n    var path = \"\";\n    var tryConsume = function (type) {\n        if (i < tokens.length && tokens[i].type === type)\n            return tokens[i++].value;\n    };\n    var mustConsume = function (type) {\n        var value = tryConsume(type);\n        if (value !== undefined)\n            return value;\n        var _a = tokens[i], nextType = _a.type, index = _a.index;\n        throw new TypeError(\"Unexpected \".concat(nextType, \" at \").concat(index, \", expected \").concat(type));\n    };\n    var consumeText = function () {\n        var result = \"\";\n        var value;\n        while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n            result += value;\n        }\n        return result;\n    };\n    while (i < tokens.length) {\n        var char = tryConsume(\"CHAR\");\n        var name = tryConsume(\"NAME\");\n        var pattern = tryConsume(\"PATTERN\");\n        if (name || pattern) {\n            var prefix = char || \"\";\n            if (prefixes.indexOf(prefix) === -1) {\n                path += prefix;\n                prefix = \"\";\n            }\n            if (path) {\n                result.push(path);\n                path = \"\";\n            }\n            result.push({\n                name: name || key++,\n                prefix: prefix,\n                suffix: \"\",\n                pattern: pattern || defaultPattern,\n                modifier: tryConsume(\"MODIFIER\") || \"\",\n            });\n            continue;\n        }\n        var value = char || tryConsume(\"ESCAPED_CHAR\");\n        if (value) {\n            path += value;\n            continue;\n        }\n        if (path) {\n            result.push(path);\n            path = \"\";\n        }\n        var open = tryConsume(\"OPEN\");\n        if (open) {\n            var prefix = consumeText();\n            var name_1 = tryConsume(\"NAME\") || \"\";\n            var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n            var suffix = consumeText();\n            mustConsume(\"CLOSE\");\n            result.push({\n                name: name_1 || (pattern_1 ? key++ : \"\"),\n                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n                prefix: prefix,\n                suffix: suffix,\n                modifier: tryConsume(\"MODIFIER\") || \"\",\n            });\n            continue;\n        }\n        mustConsume(\"END\");\n    }\n    return result;\n}\n/**\n * Compile a string to a template function for the path.\n */\nfunction compile(str, options) {\n    return tokensToFunction(parse(str, options), options);\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction(tokens, options) {\n    if (options === void 0) { options = {}; }\n    var reFlags = flags(options);\n    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;\n    // Compile all the tokens into regexps.\n    var matches = tokens.map(function (token) {\n        if (typeof token === \"object\") {\n            return new RegExp(\"^(?:\".concat(token.pattern, \")$\"), reFlags);\n        }\n    });\n    return function (data) {\n        var path = \"\";\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (typeof token === \"string\") {\n                path += token;\n                continue;\n            }\n            var value = data ? data[token.name] : undefined;\n            var optional = token.modifier === \"?\" || token.modifier === \"*\";\n            var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n            if (Array.isArray(value)) {\n                if (!repeat) {\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not repeat, but got an array\"));\n                }\n                if (value.length === 0) {\n                    if (optional)\n                        continue;\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not be empty\"));\n                }\n                for (var j = 0; j < value.length; j++) {\n                    var segment = encode(value[j], token);\n                    if (validate && !matches[i].test(segment)) {\n                        throw new TypeError(\"Expected all \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n                    }\n                    path += token.prefix + segment + token.suffix;\n                }\n                continue;\n            }\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                var segment = encode(String(value), token);\n                if (validate && !matches[i].test(segment)) {\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n                }\n                path += token.prefix + segment + token.suffix;\n                continue;\n            }\n            if (optional)\n                continue;\n            var typeOfMessage = repeat ? \"an array\" : \"a string\";\n            throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to be \").concat(typeOfMessage));\n        }\n        return path;\n    };\n}\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nfunction match(str, options) {\n    var keys = [];\n    var re = pathToRegexp(str, keys, options);\n    return regexpToFunction(re, keys, options);\n}\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nfunction regexpToFunction(re, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.decode, decode = _a === void 0 ? function (x) { return x; } : _a;\n    return function (pathname) {\n        var m = re.exec(pathname);\n        if (!m)\n            return false;\n        var path = m[0], index = m.index;\n        var params = Object.create(null);\n        var _loop_1 = function (i) {\n            if (m[i] === undefined)\n                return \"continue\";\n            var key = keys[i - 1];\n            if (key.modifier === \"*\" || key.modifier === \"+\") {\n                params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {\n                    return decode(value, key);\n                });\n            }\n            else {\n                params[key.name] = decode(m[i], key);\n            }\n        };\n        for (var i = 1; i < m.length; i++) {\n            _loop_1(i);\n        }\n        return { path: path, index: index, params: params };\n    };\n}\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n    return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options) {\n    return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path, keys) {\n    if (!keys)\n        return path;\n    var groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n    var index = 0;\n    var execResult = groupsRegex.exec(path.source);\n    while (execResult) {\n        keys.push({\n            // Use parenthesized substring match if available, index otherwise\n            name: execResult[1] || index++,\n            prefix: \"\",\n            suffix: \"\",\n            modifier: \"\",\n            pattern: \"\",\n        });\n        execResult = groupsRegex.exec(path.source);\n    }\n    return path;\n}\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(paths, keys, options) {\n    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });\n    return new RegExp(\"(?:\".concat(parts.join(\"|\"), \")\"), flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(path, keys, options) {\n    return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nfunction tokensToRegexp(tokens, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d, _e = options.delimiter, delimiter = _e === void 0 ? \"/#?\" : _e, _f = options.endsWith, endsWith = _f === void 0 ? \"\" : _f;\n    var endsWithRe = \"[\".concat(escapeString(endsWith), \"]|$\");\n    var delimiterRe = \"[\".concat(escapeString(delimiter), \"]\");\n    var route = start ? \"^\" : \"\";\n    // Iterate over the tokens and create our regexp string.\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        if (typeof token === \"string\") {\n            route += escapeString(encode(token));\n        }\n        else {\n            var prefix = escapeString(encode(token.prefix));\n            var suffix = escapeString(encode(token.suffix));\n            if (token.pattern) {\n                if (keys)\n                    keys.push(token);\n                if (prefix || suffix) {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        var mod = token.modifier === \"*\" ? \"?\" : \"\";\n                        route += \"(?:\".concat(prefix, \"((?:\").concat(token.pattern, \")(?:\").concat(suffix).concat(prefix, \"(?:\").concat(token.pattern, \"))*)\").concat(suffix, \")\").concat(mod);\n                    }\n                    else {\n                        route += \"(?:\".concat(prefix, \"(\").concat(token.pattern, \")\").concat(suffix, \")\").concat(token.modifier);\n                    }\n                }\n                else {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        route += \"((?:\".concat(token.pattern, \")\").concat(token.modifier, \")\");\n                    }\n                    else {\n                        route += \"(\".concat(token.pattern, \")\").concat(token.modifier);\n                    }\n                }\n            }\n            else {\n                route += \"(?:\".concat(prefix).concat(suffix, \")\").concat(token.modifier);\n            }\n        }\n    }\n    if (end) {\n        if (!strict)\n            route += \"\".concat(delimiterRe, \"?\");\n        route += !options.endsWith ? \"$\" : \"(?=\".concat(endsWithRe, \")\");\n    }\n    else {\n        var endToken = tokens[tokens.length - 1];\n        var isEndDelimited = typeof endToken === \"string\"\n            ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n            : endToken === undefined;\n        if (!strict) {\n            route += \"(?:\".concat(delimiterRe, \"(?=\").concat(endsWithRe, \"))?\");\n        }\n        if (!isEndDelimited) {\n            route += \"(?=\".concat(delimiterRe, \"|\").concat(endsWithRe, \")\");\n        }\n    }\n    return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nfunction pathToRegexp(path, keys, options) {\n    if (path instanceof RegExp)\n        return regexpToRegexp(path, keys);\n    if (Array.isArray(path))\n        return arrayToRegexp(path, keys, options);\n    return stringToRegexp(path, keys, options);\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/path-to-regexp@6.2.2/node_modules/path-to-regexp/dist.es2015/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/mocks/absence.ts":
/*!******************************!*\
  !*** ./src/mocks/absence.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   absenceList: function() { return /* binding */ absenceList; },\n/* harmony export */   compiledConflictResponses: function() { return /* binding */ compiledConflictResponses; },\n/* harmony export */   handlers: function() { return /* binding */ handlers; }\n/* harmony export */ });\n/* harmony import */ var msw__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! msw */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/http.mjs\");\n/* harmony import */ var msw__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! msw */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/HttpResponse.mjs\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"(app-pages-browser)/./src/constants.ts\");\n\n\nconst absenceList = [\n    {\n        \"id\": 0,\n        \"startDate\": \"2022-05-28T04:39:06.470Z\",\n        \"days\": 9,\n        \"absenceType\": \"SICKNESS\",\n        \"employee\": {\n            \"firstName\": \"Rahaf\",\n            \"lastName\": \"Deckard\",\n            \"id\": \"2ea05a52-4e31-450d-bbc4-5a6c73167d17\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 1,\n        \"startDate\": \"2022-02-08T08:02:47.543Z\",\n        \"days\": 5,\n        \"absenceType\": \"ANNUAL_LEAVE\",\n        \"employee\": {\n            \"firstName\": \"Enya\",\n            \"lastName\": \"Behm\",\n            \"id\": \"84502153-69e6-4561-b2de-8f21f97530d3\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 2,\n        \"startDate\": \"2020-12-31T03:08:19.146Z\",\n        \"days\": 18,\n        \"absenceType\": \"ANNUAL_LEAVE\",\n        \"employee\": {\n            \"firstName\": \"Amiah\",\n            \"lastName\": \"Fenton\",\n            \"id\": \"6ebff517-f398-4d23-9ed3-a0f14bfa3858\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 3,\n        \"startDate\": \"2022-01-01T13:12:13.562Z\",\n        \"days\": 14,\n        \"absenceType\": \"ANNUAL_LEAVE\",\n        \"employee\": {\n            \"firstName\": \"Jabez\",\n            \"lastName\": \"Nasser\",\n            \"id\": \"24a9352b-cf35-4e00-b4c9-403546d7bea8\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 4,\n        \"startDate\": \"2023-05-08T07:46:20.745Z\",\n        \"days\": 1,\n        \"absenceType\": \"ANNUAL_LEAVE\",\n        \"employee\": {\n            \"firstName\": \"Jabez\",\n            \"lastName\": \"Nasser\",\n            \"id\": \"24a9352b-cf35-4e00-b4c9-403546d7bea8\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 5,\n        \"startDate\": \"2020-03-31T06:15:23.316Z\",\n        \"days\": 3,\n        \"absenceType\": \"ANNUAL_LEAVE\",\n        \"employee\": {\n            \"firstName\": \"Alexi\",\n            \"lastName\": \"Schramm\",\n            \"id\": \"8be1c549-fb91-4c8f-9cfe-5b5c017f26bf\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 6,\n        \"startDate\": \"2020-09-09T18:07:33.524Z\",\n        \"days\": 17,\n        \"absenceType\": \"ANNUAL_LEAVE\",\n        \"employee\": {\n            \"firstName\": \"Josemaria\",\n            \"lastName\": \"Embrey\",\n            \"id\": \"6dc958b7-0aea-45d6-b4cc-ce384815dc17\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 7,\n        \"startDate\": \"2021-10-19T06:48:24.862Z\",\n        \"days\": 0,\n        \"absenceType\": \"ANNUAL_LEAVE\",\n        \"employee\": {\n            \"firstName\": \"Alexi\",\n            \"lastName\": \"Schramm\",\n            \"id\": \"8be1c549-fb91-4c8f-9cfe-5b5c017f26bf\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 8,\n        \"startDate\": \"2020-12-24T04:37:16.129Z\",\n        \"days\": 13,\n        \"absenceType\": \"ANNUAL_LEAVE\",\n        \"employee\": {\n            \"firstName\": \"Amiah\",\n            \"lastName\": \"Fenton\",\n            \"id\": \"6ebff517-f398-4d23-9ed3-a0f14bfa3858\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 9,\n        \"startDate\": \"2023-06-08T13:11:47.739Z\",\n        \"days\": 10,\n        \"absenceType\": \"ANNUAL_LEAVE\",\n        \"employee\": {\n            \"firstName\": \"Amiah\",\n            \"lastName\": \"Fenton\",\n            \"id\": \"6ebff517-f398-4d23-9ed3-a0f14bfa3858\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 10,\n        \"startDate\": \"2020-04-19T03:02:11.615Z\",\n        \"days\": 13,\n        \"absenceType\": \"ANNUAL_LEAVE\",\n        \"employee\": {\n            \"firstName\": \"Raniya\",\n            \"lastName\": \"Otte\",\n            \"id\": \"e10058e4-3383-466b-91d8-1ea5bf1acf0f\"\n        },\n        \"approved\": false\n    },\n    {\n        \"id\": 11,\n        \"startDate\": \"2020-05-08T12:26:41.895Z\",\n        \"days\": 19,\n        \"absenceType\": \"ANNUAL_LEAVE\",\n        \"employee\": {\n            \"firstName\": \"Shrey\",\n            \"lastName\": \"Frederickson\",\n            \"id\": \"303aacc8-e587-4801-929a-ad7ce933ee03\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 12,\n        \"startDate\": \"2020-06-11T02:01:41.069Z\",\n        \"days\": 0,\n        \"absenceType\": \"ANNUAL_LEAVE\",\n        \"employee\": {\n            \"firstName\": \"Wesley\",\n            \"lastName\": \"Alvey\",\n            \"id\": \"3c2d82f1-660e-44ec-b25a-756baa6d0155\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 13,\n        \"startDate\": \"2023-08-07T05:25:37.579Z\",\n        \"days\": 1,\n        \"absenceType\": \"ANNUAL_LEAVE\",\n        \"employee\": {\n            \"firstName\": \"Shrey\",\n            \"lastName\": \"Frederickson\",\n            \"id\": \"303aacc8-e587-4801-929a-ad7ce933ee03\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 14,\n        \"startDate\": \"2022-10-29T07:10:52.050Z\",\n        \"days\": 3,\n        \"absenceType\": \"ANNUAL_LEAVE\",\n        \"employee\": {\n            \"firstName\": \"Josemaria\",\n            \"lastName\": \"Embrey\",\n            \"id\": \"6dc958b7-0aea-45d6-b4cc-ce384815dc17\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 15,\n        \"startDate\": \"2023-12-25T14:19:38.910Z\",\n        \"days\": 11,\n        \"absenceType\": \"MEDICAL\",\n        \"employee\": {\n            \"firstName\": \"Reuben\",\n            \"lastName\": \"Keene\",\n            \"id\": \"8c6d90a5-6636-46f9-93de-daa172b7496f\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 16,\n        \"startDate\": \"2021-05-07T06:59:09.969Z\",\n        \"days\": 12,\n        \"absenceType\": \"ANNUAL_LEAVE\",\n        \"employee\": {\n            \"firstName\": \"Raniya\",\n            \"lastName\": \"Otte\",\n            \"id\": \"e10058e4-3383-466b-91d8-1ea5bf1acf0f\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 17,\n        \"startDate\": \"2021-10-19T02:08:37.566Z\",\n        \"days\": 17,\n        \"absenceType\": \"ANNUAL_LEAVE\",\n        \"employee\": {\n            \"firstName\": \"Ryland\",\n            \"lastName\": \"Sears\",\n            \"id\": \"6ed7cc5b-4a79-4802-a002-7918efc2d416\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 18,\n        \"startDate\": \"2021-09-22T23:31:08.633Z\",\n        \"days\": 11,\n        \"absenceType\": \"ANNUAL_LEAVE\",\n        \"employee\": {\n            \"firstName\": \"Isla\",\n            \"lastName\": \"Watts\",\n            \"id\": \"08335a8f-1b4f-4d9b-82a8-46fa20d48f2d\"\n        },\n        \"approved\": true\n    },\n    {\n        \"id\": 19,\n        \"startDate\": \"2021-04-02T17:30:46.989Z\",\n        \"days\": 16,\n        \"absenceType\": \"SICKNESS\",\n        \"employee\": {\n            \"firstName\": \"Isla\",\n            \"lastName\": \"Watts\",\n            \"id\": \"08335a8f-1b4f-4d9b-82a8-46fa20d48f2d\"\n        },\n        \"approved\": true\n    }\n];\nconst compiledConflictResponses = [\n    {\n        conflicts: false\n    },\n    {\n        conflicts: false\n    },\n    {\n        conflicts: false\n    },\n    {\n        conflicts: false\n    },\n    {\n        conflicts: true\n    },\n    {\n        conflicts: false\n    },\n    {\n        conflicts: false\n    },\n    {\n        conflicts: false\n    },\n    {\n        conflicts: false\n    },\n    {\n        conflicts: false\n    },\n    {\n        conflicts: false\n    },\n    {\n        conflicts: false\n    },\n    {\n        conflicts: false\n    },\n    {\n        conflicts: false\n    },\n    {\n        conflicts: false\n    },\n    {\n        conflicts: false\n    },\n    {\n        conflicts: false\n    },\n    {\n        conflicts: false\n    },\n    {\n        conflicts: false\n    },\n    {\n        conflicts: false\n    }\n];\nconst conflictHandlers = compiledConflictResponses.map((response, index)=>msw__WEBPACK_IMPORTED_MODULE_1__.http.get(\"\".concat(_constants__WEBPACK_IMPORTED_MODULE_0__.BASE_API_URL, \"/conflict/\").concat(index), ()=>msw__WEBPACK_IMPORTED_MODULE_2__.HttpResponse.json(response)));\nconst handlers = [\n    msw__WEBPACK_IMPORTED_MODULE_1__.http.get(\"\".concat(_constants__WEBPACK_IMPORTED_MODULE_0__.BASE_API_URL, \"/absences\"), ()=>msw__WEBPACK_IMPORTED_MODULE_2__.HttpResponse.json(absenceList)),\n    ...conflictHandlers\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/mocks/absence.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/mocks/index.ts":
/*!****************************!*\
  !*** ./src/mocks/index.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handlers: function() { return /* binding */ handlers; }\n/* harmony export */ });\n/* harmony import */ var _absence__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./absence */ \"(app-pages-browser)/./src/mocks/absence.ts\");\n\nconst handlers = [\n    ..._absence__WEBPACK_IMPORTED_MODULE_0__.handlers\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9tb2Nrcy9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1RDtBQUVoRCxNQUFNQSxXQUFXO09BQ25CQyw4Q0FBZUE7Q0FDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL21vY2tzL2luZGV4LnRzPzkyY2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGFuZGxlcnMgYXMgYWJzZW5jZUhhbmRsZXJzIH0gZnJvbSBcIi4vYWJzZW5jZVwiXG5cbmV4cG9ydCBjb25zdCBoYW5kbGVycyA9IFtcbiAgLi4uYWJzZW5jZUhhbmRsZXJzLFxuXVxuIl0sIm5hbWVzIjpbImhhbmRsZXJzIiwiYWJzZW5jZUhhbmRsZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/mocks/index.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/setup/mock-service-worker.ts":
/*!******************************************!*\
  !*** ./src/setup/mock-service-worker.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mockServiceWorker: function() { return /* binding */ mockServiceWorker; }\n/* harmony export */ });\n/* harmony import */ var msw_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! msw/browser */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/browser/index.mjs\");\n/* harmony import */ var _mocks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mocks */ \"(app-pages-browser)/./src/mocks/index.ts\");\n\n\nconst mockServiceWorker = (0,msw_browser__WEBPACK_IMPORTED_MODULE_1__.setupWorker)(..._mocks__WEBPACK_IMPORTED_MODULE_0__.handlers);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXR1cC9tb2NrLXNlcnZpY2Utd29ya2VyLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5QztBQUNOO0FBRTVCLE1BQU1FLG9CQUFvQkYsd0RBQVdBLElBQUlDLDRDQUFRQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9zZXR1cC9tb2NrLXNlcnZpY2Utd29ya2VyLnRzPzE3MDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2V0dXBXb3JrZXIgfSBmcm9tICdtc3cvYnJvd3NlcidcbmltcG9ydCB7IGhhbmRsZXJzIH0gZnJvbSAnLi4vbW9ja3MnXG4gXG5leHBvcnQgY29uc3QgbW9ja1NlcnZpY2VXb3JrZXIgPSBzZXR1cFdvcmtlciguLi5oYW5kbGVycylcbiJdLCJuYW1lcyI6WyJzZXR1cFdvcmtlciIsImhhbmRsZXJzIiwibW9ja1NlcnZpY2VXb3JrZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/setup/mock-service-worker.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@bundled-es-modules+cookie@2.0.0/node_modules/@bundled-es-modules/cookie/index-esm.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@bundled-es-modules+cookie@2.0.0/node_modules/@bundled-es-modules/cookie/index-esm.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ source_default; }\n/* harmony export */ });\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/cookie/index.js\nvar require_cookie = __commonJS({\n  \"node_modules/cookie/index.js\"(exports) {\n    \"use strict\";\n    exports.parse = parse;\n    exports.serialize = serialize;\n    var __toString = Object.prototype.toString;\n    var fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n    function parse(str, options) {\n      if (typeof str !== \"string\") {\n        throw new TypeError(\"argument str must be a string\");\n      }\n      var obj = {};\n      var opt = options || {};\n      var dec = opt.decode || decode;\n      var index = 0;\n      while (index < str.length) {\n        var eqIdx = str.indexOf(\"=\", index);\n        if (eqIdx === -1) {\n          break;\n        }\n        var endIdx = str.indexOf(\";\", index);\n        if (endIdx === -1) {\n          endIdx = str.length;\n        } else if (endIdx < eqIdx) {\n          index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n          continue;\n        }\n        var key = str.slice(index, eqIdx).trim();\n        if (void 0 === obj[key]) {\n          var val = str.slice(eqIdx + 1, endIdx).trim();\n          if (val.charCodeAt(0) === 34) {\n            val = val.slice(1, -1);\n          }\n          obj[key] = tryDecode(val, dec);\n        }\n        index = endIdx + 1;\n      }\n      return obj;\n    }\n    function serialize(name, val, options) {\n      var opt = options || {};\n      var enc = opt.encode || encode;\n      if (typeof enc !== \"function\") {\n        throw new TypeError(\"option encode is invalid\");\n      }\n      if (!fieldContentRegExp.test(name)) {\n        throw new TypeError(\"argument name is invalid\");\n      }\n      var value = enc(val);\n      if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError(\"argument val is invalid\");\n      }\n      var str = name + \"=\" + value;\n      if (null != opt.maxAge) {\n        var maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n          throw new TypeError(\"option maxAge is invalid\");\n        }\n        str += \"; Max-Age=\" + Math.floor(maxAge);\n      }\n      if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n          throw new TypeError(\"option domain is invalid\");\n        }\n        str += \"; Domain=\" + opt.domain;\n      }\n      if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n          throw new TypeError(\"option path is invalid\");\n        }\n        str += \"; Path=\" + opt.path;\n      }\n      if (opt.expires) {\n        var expires = opt.expires;\n        if (!isDate(expires) || isNaN(expires.valueOf())) {\n          throw new TypeError(\"option expires is invalid\");\n        }\n        str += \"; Expires=\" + expires.toUTCString();\n      }\n      if (opt.httpOnly) {\n        str += \"; HttpOnly\";\n      }\n      if (opt.secure) {\n        str += \"; Secure\";\n      }\n      if (opt.priority) {\n        var priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\n        switch (priority) {\n          case \"low\":\n            str += \"; Priority=Low\";\n            break;\n          case \"medium\":\n            str += \"; Priority=Medium\";\n            break;\n          case \"high\":\n            str += \"; Priority=High\";\n            break;\n          default:\n            throw new TypeError(\"option priority is invalid\");\n        }\n      }\n      if (opt.sameSite) {\n        var sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch (sameSite) {\n          case true:\n            str += \"; SameSite=Strict\";\n            break;\n          case \"lax\":\n            str += \"; SameSite=Lax\";\n            break;\n          case \"strict\":\n            str += \"; SameSite=Strict\";\n            break;\n          case \"none\":\n            str += \"; SameSite=None\";\n            break;\n          default:\n            throw new TypeError(\"option sameSite is invalid\");\n        }\n      }\n      return str;\n    }\n    function decode(str) {\n      return str.indexOf(\"%\") !== -1 ? decodeURIComponent(str) : str;\n    }\n    function encode(val) {\n      return encodeURIComponent(val);\n    }\n    function isDate(val) {\n      return __toString.call(val) === \"[object Date]\" || val instanceof Date;\n    }\n    function tryDecode(str, decode2) {\n      try {\n        return decode2(str);\n      } catch (e) {\n        return str;\n      }\n    }\n  }\n});\n\n// source.js\nvar import_cookie = __toESM(require_cookie(), 1);\nvar source_default = import_cookie.default;\n\n/*! Bundled license information:\n\ncookie/index.js:\n  (*!\n   * cookie\n   * Copyright(c) 2012-2014 Roman Shtylman\n   * Copyright(c) 2015 Douglas Christopher Wilson\n   * MIT Licensed\n   *)\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@bundled-es-modules+cookie@2.0.0/node_modules/@bundled-es-modules/cookie/index-esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@bundled-es-modules+statuses@1.0.1/node_modules/@bundled-es-modules/statuses/index-esm.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@bundled-es-modules+statuses@1.0.1/node_modules/@bundled-es-modules/statuses/index-esm.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ source_default; }\n/* harmony export */ });\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/statuses/codes.json\nvar require_codes = __commonJS({\n  \"node_modules/statuses/codes.json\"(exports, module) {\n    module.exports = {\n      \"100\": \"Continue\",\n      \"101\": \"Switching Protocols\",\n      \"102\": \"Processing\",\n      \"103\": \"Early Hints\",\n      \"200\": \"OK\",\n      \"201\": \"Created\",\n      \"202\": \"Accepted\",\n      \"203\": \"Non-Authoritative Information\",\n      \"204\": \"No Content\",\n      \"205\": \"Reset Content\",\n      \"206\": \"Partial Content\",\n      \"207\": \"Multi-Status\",\n      \"208\": \"Already Reported\",\n      \"226\": \"IM Used\",\n      \"300\": \"Multiple Choices\",\n      \"301\": \"Moved Permanently\",\n      \"302\": \"Found\",\n      \"303\": \"See Other\",\n      \"304\": \"Not Modified\",\n      \"305\": \"Use Proxy\",\n      \"307\": \"Temporary Redirect\",\n      \"308\": \"Permanent Redirect\",\n      \"400\": \"Bad Request\",\n      \"401\": \"Unauthorized\",\n      \"402\": \"Payment Required\",\n      \"403\": \"Forbidden\",\n      \"404\": \"Not Found\",\n      \"405\": \"Method Not Allowed\",\n      \"406\": \"Not Acceptable\",\n      \"407\": \"Proxy Authentication Required\",\n      \"408\": \"Request Timeout\",\n      \"409\": \"Conflict\",\n      \"410\": \"Gone\",\n      \"411\": \"Length Required\",\n      \"412\": \"Precondition Failed\",\n      \"413\": \"Payload Too Large\",\n      \"414\": \"URI Too Long\",\n      \"415\": \"Unsupported Media Type\",\n      \"416\": \"Range Not Satisfiable\",\n      \"417\": \"Expectation Failed\",\n      \"418\": \"I'm a Teapot\",\n      \"421\": \"Misdirected Request\",\n      \"422\": \"Unprocessable Entity\",\n      \"423\": \"Locked\",\n      \"424\": \"Failed Dependency\",\n      \"425\": \"Too Early\",\n      \"426\": \"Upgrade Required\",\n      \"428\": \"Precondition Required\",\n      \"429\": \"Too Many Requests\",\n      \"431\": \"Request Header Fields Too Large\",\n      \"451\": \"Unavailable For Legal Reasons\",\n      \"500\": \"Internal Server Error\",\n      \"501\": \"Not Implemented\",\n      \"502\": \"Bad Gateway\",\n      \"503\": \"Service Unavailable\",\n      \"504\": \"Gateway Timeout\",\n      \"505\": \"HTTP Version Not Supported\",\n      \"506\": \"Variant Also Negotiates\",\n      \"507\": \"Insufficient Storage\",\n      \"508\": \"Loop Detected\",\n      \"509\": \"Bandwidth Limit Exceeded\",\n      \"510\": \"Not Extended\",\n      \"511\": \"Network Authentication Required\"\n    };\n  }\n});\n\n// node_modules/statuses/index.js\nvar require_statuses = __commonJS({\n  \"node_modules/statuses/index.js\"(exports, module) {\n    \"use strict\";\n    var codes = require_codes();\n    module.exports = status2;\n    status2.message = codes;\n    status2.code = createMessageToStatusCodeMap(codes);\n    status2.codes = createStatusCodeList(codes);\n    status2.redirect = {\n      300: true,\n      301: true,\n      302: true,\n      303: true,\n      305: true,\n      307: true,\n      308: true\n    };\n    status2.empty = {\n      204: true,\n      205: true,\n      304: true\n    };\n    status2.retry = {\n      502: true,\n      503: true,\n      504: true\n    };\n    function createMessageToStatusCodeMap(codes2) {\n      var map = {};\n      Object.keys(codes2).forEach(function forEachCode(code) {\n        var message = codes2[code];\n        var status3 = Number(code);\n        map[message.toLowerCase()] = status3;\n      });\n      return map;\n    }\n    function createStatusCodeList(codes2) {\n      return Object.keys(codes2).map(function mapCode(code) {\n        return Number(code);\n      });\n    }\n    function getStatusCode(message) {\n      var msg = message.toLowerCase();\n      if (!Object.prototype.hasOwnProperty.call(status2.code, msg)) {\n        throw new Error('invalid status message: \"' + message + '\"');\n      }\n      return status2.code[msg];\n    }\n    function getStatusMessage(code) {\n      if (!Object.prototype.hasOwnProperty.call(status2.message, code)) {\n        throw new Error(\"invalid status code: \" + code);\n      }\n      return status2.message[code];\n    }\n    function status2(code) {\n      if (typeof code === \"number\") {\n        return getStatusMessage(code);\n      }\n      if (typeof code !== \"string\") {\n        throw new TypeError(\"code must be a number or string\");\n      }\n      var n = parseInt(code, 10);\n      if (!isNaN(n)) {\n        return getStatusMessage(n);\n      }\n      return getStatusCode(code);\n    }\n  }\n});\n\n// source.js\nvar import_statuses = __toESM(require_statuses(), 1);\nvar source_default = import_statuses.default;\n\n/*! Bundled license information:\n\nstatuses/index.js:\n  (*!\n   * statuses\n   * Copyright(c) 2014 Jonathan Ong\n   * Copyright(c) 2016 Douglas Christopher Wilson\n   * MIT Licensed\n   *)\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@bundled-es-modules+statuses@1.0.1/node_modules/@bundled-es-modules/statuses/index-esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@mswjs+cookies@1.1.1/node_modules/@mswjs/cookies/lib/index.mjs":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/@mswjs+cookies@1.1.1/node_modules/@mswjs/cookies/lib/index.mjs ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PERSISTENCY_KEY: function() { return /* binding */ PERSISTENCY_KEY; },\n/* harmony export */   store: function() { return /* binding */ store; }\n/* harmony export */ });\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/set-cookie-parser/lib/set-cookie.js\nvar require_set_cookie = __commonJS({\n  \"node_modules/set-cookie-parser/lib/set-cookie.js\"(exports, module) {\n    \"use strict\";\n    var defaultParseOptions = {\n      decodeValues: true,\n      map: false,\n      silent: false\n    };\n    function isNonEmptyString(str) {\n      return typeof str === \"string\" && !!str.trim();\n    }\n    function parseString(setCookieValue, options) {\n      var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n      var nameValuePairStr = parts.shift();\n      var parsed = parseNameValuePair(nameValuePairStr);\n      var name = parsed.name;\n      var value = parsed.value;\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      try {\n        value = options.decodeValues ? decodeURIComponent(value) : value;\n      } catch (e) {\n        console.error(\n          \"set-cookie-parser encountered an error while decoding a cookie with value '\" + value + \"'. Set options.decodeValues to false to disable this feature.\",\n          e\n        );\n      }\n      var cookie = {\n        name,\n        value\n      };\n      parts.forEach(function(part) {\n        var sides = part.split(\"=\");\n        var key = sides.shift().trimLeft().toLowerCase();\n        var value2 = sides.join(\"=\");\n        if (key === \"expires\") {\n          cookie.expires = new Date(value2);\n        } else if (key === \"max-age\") {\n          cookie.maxAge = parseInt(value2, 10);\n        } else if (key === \"secure\") {\n          cookie.secure = true;\n        } else if (key === \"httponly\") {\n          cookie.httpOnly = true;\n        } else if (key === \"samesite\") {\n          cookie.sameSite = value2;\n        } else {\n          cookie[key] = value2;\n        }\n      });\n      return cookie;\n    }\n    function parseNameValuePair(nameValuePairStr) {\n      var name = \"\";\n      var value = \"\";\n      var nameValueArr = nameValuePairStr.split(\"=\");\n      if (nameValueArr.length > 1) {\n        name = nameValueArr.shift();\n        value = nameValueArr.join(\"=\");\n      } else {\n        value = nameValuePairStr;\n      }\n      return { name, value };\n    }\n    function parse(input, options) {\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      if (!input) {\n        if (!options.map) {\n          return [];\n        } else {\n          return {};\n        }\n      }\n      if (input.headers) {\n        if (typeof input.headers.getSetCookie === \"function\") {\n          input = input.headers.getSetCookie();\n        } else if (input.headers[\"set-cookie\"]) {\n          input = input.headers[\"set-cookie\"];\n        } else {\n          var sch = input.headers[Object.keys(input.headers).find(function(key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })];\n          if (!sch && input.headers.cookie && !options.silent) {\n            console.warn(\n              \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n            );\n          }\n          input = sch;\n        }\n      }\n      if (!Array.isArray(input)) {\n        input = [input];\n      }\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      if (!options.map) {\n        return input.filter(isNonEmptyString).map(function(str) {\n          return parseString(str, options);\n        });\n      } else {\n        var cookies = {};\n        return input.filter(isNonEmptyString).reduce(function(cookies2, str) {\n          var cookie = parseString(str, options);\n          cookies2[cookie.name] = cookie;\n          return cookies2;\n        }, cookies);\n      }\n    }\n    function splitCookiesString(cookiesString) {\n      if (Array.isArray(cookiesString)) {\n        return cookiesString;\n      }\n      if (typeof cookiesString !== \"string\") {\n        return [];\n      }\n      var cookiesStrings = [];\n      var pos = 0;\n      var start;\n      var ch;\n      var lastComma;\n      var nextStart;\n      var cookiesSeparatorFound;\n      function skipWhitespace() {\n        while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n          pos += 1;\n        }\n        return pos < cookiesString.length;\n      }\n      function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n      }\n      while (pos < cookiesString.length) {\n        start = pos;\n        cookiesSeparatorFound = false;\n        while (skipWhitespace()) {\n          ch = cookiesString.charAt(pos);\n          if (ch === \",\") {\n            lastComma = pos;\n            pos += 1;\n            skipWhitespace();\n            nextStart = pos;\n            while (pos < cookiesString.length && notSpecialChar()) {\n              pos += 1;\n            }\n            if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n              cookiesSeparatorFound = true;\n              pos = nextStart;\n              cookiesStrings.push(cookiesString.substring(start, lastComma));\n              start = pos;\n            } else {\n              pos = lastComma + 1;\n            }\n          } else {\n            pos += 1;\n          }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n          cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n      }\n      return cookiesStrings;\n    }\n    module.exports = parse;\n    module.exports.parse = parse;\n    module.exports.parseString = parseString;\n    module.exports.splitCookiesString = splitCookiesString;\n  }\n});\n\n// src/store.ts\nvar import_set_cookie_parser = __toESM(require_set_cookie());\nvar PERSISTENCY_KEY = \"MSW_COOKIE_STORE\";\nfunction supportsLocalStorage() {\n  try {\n    if (localStorage == null) {\n      return false;\n    }\n    const testKey = PERSISTENCY_KEY + \"_test\";\n    localStorage.setItem(testKey, \"test\");\n    localStorage.getItem(testKey);\n    localStorage.removeItem(testKey);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\nvar hasLocalStorageSupport = supportsLocalStorage();\nfunction isPropertyAccessible(object, method) {\n  try {\n    object[method];\n    return true;\n  } catch {\n    return false;\n  }\n}\nvar CookieStore = class {\n  constructor() {\n    this.store = /* @__PURE__ */ new Map();\n  }\n  add(request, response) {\n    if (isPropertyAccessible(request, \"credentials\") && request.credentials === \"omit\") {\n      return;\n    }\n    const requestUrl = new URL(request.url);\n    const responseCookies = response.headers.get(\"set-cookie\");\n    if (!responseCookies) {\n      return;\n    }\n    const now = Date.now();\n    const parsedResponseCookies = (0, import_set_cookie_parser.parse)(responseCookies).map(\n      ({ maxAge, ...cookie }) => ({\n        ...cookie,\n        expires: maxAge === void 0 ? cookie.expires : new Date(now + maxAge * 1e3),\n        maxAge\n      })\n    );\n    const prevCookies = this.store.get(requestUrl.origin) || /* @__PURE__ */ new Map();\n    parsedResponseCookies.forEach((cookie) => {\n      this.store.set(requestUrl.origin, prevCookies.set(cookie.name, cookie));\n    });\n  }\n  get(request) {\n    this.deleteExpiredCookies();\n    const requestUrl = new URL(request.url);\n    const originCookies = this.store.get(requestUrl.origin) || /* @__PURE__ */ new Map();\n    if (!isPropertyAccessible(request, \"credentials\")) {\n      return originCookies;\n    }\n    switch (request.credentials) {\n      case \"include\": {\n        if (typeof document === \"undefined\") {\n          return originCookies;\n        }\n        const documentCookies = (0, import_set_cookie_parser.parse)(document.cookie);\n        documentCookies.forEach((cookie) => {\n          originCookies.set(cookie.name, cookie);\n        });\n        return originCookies;\n      }\n      case \"same-origin\": {\n        return originCookies;\n      }\n      default:\n        return /* @__PURE__ */ new Map();\n    }\n  }\n  getAll() {\n    this.deleteExpiredCookies();\n    return this.store;\n  }\n  deleteAll(request) {\n    const requestUrl = new URL(request.url);\n    this.store.delete(requestUrl.origin);\n  }\n  clear() {\n    this.store.clear();\n  }\n  hydrate() {\n    if (!hasLocalStorageSupport) {\n      return;\n    }\n    const persistedCookies = localStorage.getItem(PERSISTENCY_KEY);\n    if (!persistedCookies) {\n      return;\n    }\n    try {\n      const parsedCookies = JSON.parse(persistedCookies);\n      parsedCookies.forEach(([origin, cookies]) => {\n        this.store.set(\n          origin,\n          new Map(\n            cookies.map(([token, { expires, ...cookie }]) => [\n              token,\n              expires === void 0 ? cookie : { ...cookie, expires: new Date(expires) }\n            ])\n          )\n        );\n      });\n    } catch (error) {\n      console.warn(`\n[virtual-cookie] Failed to parse a stored cookie from the localStorage (key \"${PERSISTENCY_KEY}\").\n\nStored value:\n${localStorage.getItem(PERSISTENCY_KEY)}\n\nThrown exception:\n${error}\n\nInvalid value has been removed from localStorage to prevent subsequent failed parsing attempts.`);\n      localStorage.removeItem(PERSISTENCY_KEY);\n    }\n  }\n  persist() {\n    if (!hasLocalStorageSupport) {\n      return;\n    }\n    const serializedCookies = Array.from(this.store.entries()).map(\n      ([origin, cookies]) => {\n        return [origin, Array.from(cookies.entries())];\n      }\n    );\n    localStorage.setItem(PERSISTENCY_KEY, JSON.stringify(serializedCookies));\n  }\n  deleteExpiredCookies() {\n    const now = Date.now();\n    this.store.forEach((originCookies, origin) => {\n      originCookies.forEach(({ expires, name }) => {\n        if (expires !== void 0 && expires.getTime() <= now) {\n          originCookies.delete(name);\n        }\n      });\n      if (originCookies.size === 0) {\n        this.store.delete(origin);\n      }\n    });\n  }\n};\nvar store = new CookieStore();\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@mswjs+cookies@1.1.1/node_modules/@mswjs/cookies/lib/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@mswjs+interceptors@0.29.1/node_modules/@mswjs/interceptors/lib/browser/chunk-6HYIRFX2.mjs":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@mswjs+interceptors@0.29.1/node_modules/@mswjs/interceptors/lib/browser/chunk-6HYIRFX2.mjs ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBuffer: function() { return /* binding */ decodeBuffer; },\n/* harmony export */   encodeBuffer: function() { return /* binding */ encodeBuffer; },\n/* harmony export */   toArrayBuffer: function() { return /* binding */ toArrayBuffer; }\n/* harmony export */ });\n// src/utils/bufferUtils.ts\nvar encoder = new TextEncoder();\nfunction encodeBuffer(text) {\n  return encoder.encode(text);\n}\nfunction decodeBuffer(buffer, encoding) {\n  const decoder = new TextDecoder(encoding);\n  return decoder.decode(buffer);\n}\nfunction toArrayBuffer(array) {\n  return array.buffer.slice(\n    array.byteOffset,\n    array.byteOffset + array.byteLength\n  );\n}\n\n\n//# sourceMappingURL=chunk-6HYIRFX2.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AbXN3anMraW50ZXJjZXB0b3JzQDAuMjkuMS9ub2RlX21vZHVsZXMvQG1zd2pzL2ludGVyY2VwdG9ycy9saWIvYnJvd3Nlci9jaHVuay02SFlJUkZYMi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQU1FO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0Btc3dqcytpbnRlcmNlcHRvcnNAMC4yOS4xL25vZGVfbW9kdWxlcy9AbXN3anMvaW50ZXJjZXB0b3JzL2xpYi9icm93c2VyL2NodW5rLTZIWUlSRlgyLm1qcz8xMzA2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91dGlscy9idWZmZXJVdGlscy50c1xudmFyIGVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbmZ1bmN0aW9uIGVuY29kZUJ1ZmZlcih0ZXh0KSB7XG4gIHJldHVybiBlbmNvZGVyLmVuY29kZSh0ZXh0KTtcbn1cbmZ1bmN0aW9uIGRlY29kZUJ1ZmZlcihidWZmZXIsIGVuY29kaW5nKSB7XG4gIGNvbnN0IGRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoZW5jb2RpbmcpO1xuICByZXR1cm4gZGVjb2Rlci5kZWNvZGUoYnVmZmVyKTtcbn1cbmZ1bmN0aW9uIHRvQXJyYXlCdWZmZXIoYXJyYXkpIHtcbiAgcmV0dXJuIGFycmF5LmJ1ZmZlci5zbGljZShcbiAgICBhcnJheS5ieXRlT2Zmc2V0LFxuICAgIGFycmF5LmJ5dGVPZmZzZXQgKyBhcnJheS5ieXRlTGVuZ3RoXG4gICk7XG59XG5cbmV4cG9ydCB7XG4gIGVuY29kZUJ1ZmZlcixcbiAgZGVjb2RlQnVmZmVyLFxuICB0b0FycmF5QnVmZmVyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstNkhZSVJGWDIubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@mswjs+interceptors@0.29.1/node_modules/@mswjs/interceptors/lib/browser/chunk-6HYIRFX2.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@mswjs+interceptors@0.29.1/node_modules/@mswjs/interceptors/lib/browser/chunk-OMISYKWR.mjs":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@mswjs+interceptors@0.29.1/node_modules/@mswjs/interceptors/lib/browser/chunk-OMISYKWR.mjs ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IS_PATCHED_MODULE: function() { return /* binding */ IS_PATCHED_MODULE; },\n/* harmony export */   createServerErrorResponse: function() { return /* binding */ createServerErrorResponse; },\n/* harmony export */   isResponseError: function() { return /* binding */ isResponseError; },\n/* harmony export */   isResponseWithoutBody: function() { return /* binding */ isResponseWithoutBody; }\n/* harmony export */ });\n// src/glossary.ts\nvar IS_PATCHED_MODULE = Symbol(\"isPatchedModule\");\n\n// src/utils/isPropertyAccessible.ts\nfunction isPropertyAccessible(obj, key) {\n  try {\n    obj[key];\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n// src/utils/responseUtils.ts\nvar RESPONSE_STATUS_CODES_WITHOUT_BODY = /* @__PURE__ */ new Set([\n  101,\n  103,\n  204,\n  205,\n  304\n]);\nfunction isResponseWithoutBody(status) {\n  return RESPONSE_STATUS_CODES_WITHOUT_BODY.has(status);\n}\nfunction createServerErrorResponse(body) {\n  return new Response(\n    JSON.stringify(\n      body instanceof Error ? {\n        name: body.name,\n        message: body.message,\n        stack: body.stack\n      } : body\n    ),\n    {\n      status: 500,\n      statusText: \"Unhandled Exception\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n  );\n}\nfunction isResponseError(response) {\n  return isPropertyAccessible(response, \"type\") && response.type === \"error\";\n}\n\n\n//# sourceMappingURL=chunk-OMISYKWR.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AbXN3anMraW50ZXJjZXB0b3JzQDAuMjkuMS9ub2RlX21vZHVsZXMvQG1zd2pzL2ludGVyY2VwdG9ycy9saWIvYnJvd3Nlci9jaHVuay1PTUlTWUtXUi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQU9FO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0Btc3dqcytpbnRlcmNlcHRvcnNAMC4yOS4xL25vZGVfbW9kdWxlcy9AbXN3anMvaW50ZXJjZXB0b3JzL2xpYi9icm93c2VyL2NodW5rLU9NSVNZS1dSLm1qcz84MTEzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9nbG9zc2FyeS50c1xudmFyIElTX1BBVENIRURfTU9EVUxFID0gU3ltYm9sKFwiaXNQYXRjaGVkTW9kdWxlXCIpO1xuXG4vLyBzcmMvdXRpbHMvaXNQcm9wZXJ0eUFjY2Vzc2libGUudHNcbmZ1bmN0aW9uIGlzUHJvcGVydHlBY2Nlc3NpYmxlKG9iaiwga2V5KSB7XG4gIHRyeSB7XG4gICAgb2JqW2tleV07XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuLy8gc3JjL3V0aWxzL3Jlc3BvbnNlVXRpbHMudHNcbnZhciBSRVNQT05TRV9TVEFUVVNfQ09ERVNfV0lUSE9VVF9CT0RZID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoW1xuICAxMDEsXG4gIDEwMyxcbiAgMjA0LFxuICAyMDUsXG4gIDMwNFxuXSk7XG5mdW5jdGlvbiBpc1Jlc3BvbnNlV2l0aG91dEJvZHkoc3RhdHVzKSB7XG4gIHJldHVybiBSRVNQT05TRV9TVEFUVVNfQ09ERVNfV0lUSE9VVF9CT0RZLmhhcyhzdGF0dXMpO1xufVxuZnVuY3Rpb24gY3JlYXRlU2VydmVyRXJyb3JSZXNwb25zZShib2R5KSB7XG4gIHJldHVybiBuZXcgUmVzcG9uc2UoXG4gICAgSlNPTi5zdHJpbmdpZnkoXG4gICAgICBib2R5IGluc3RhbmNlb2YgRXJyb3IgPyB7XG4gICAgICAgIG5hbWU6IGJvZHkubmFtZSxcbiAgICAgICAgbWVzc2FnZTogYm9keS5tZXNzYWdlLFxuICAgICAgICBzdGFjazogYm9keS5zdGFja1xuICAgICAgfSA6IGJvZHlcbiAgICApLFxuICAgIHtcbiAgICAgIHN0YXR1czogNTAwLFxuICAgICAgc3RhdHVzVGV4dDogXCJVbmhhbmRsZWQgRXhjZXB0aW9uXCIsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgICB9XG4gICAgfVxuICApO1xufVxuZnVuY3Rpb24gaXNSZXNwb25zZUVycm9yKHJlc3BvbnNlKSB7XG4gIHJldHVybiBpc1Byb3BlcnR5QWNjZXNzaWJsZShyZXNwb25zZSwgXCJ0eXBlXCIpICYmIHJlc3BvbnNlLnR5cGUgPT09IFwiZXJyb3JcIjtcbn1cblxuZXhwb3J0IHtcbiAgSVNfUEFUQ0hFRF9NT0RVTEUsXG4gIGlzUmVzcG9uc2VXaXRob3V0Qm9keSxcbiAgY3JlYXRlU2VydmVyRXJyb3JSZXNwb25zZSxcbiAgaXNSZXNwb25zZUVycm9yXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstT01JU1lLV1IubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@mswjs+interceptors@0.29.1/node_modules/@mswjs/interceptors/lib/browser/chunk-OMISYKWR.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@mswjs+interceptors@0.29.1/node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@mswjs+interceptors@0.29.1/node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INTERNAL_REQUEST_ID_HEADER_NAME: function() { return /* binding */ INTERNAL_REQUEST_ID_HEADER_NAME; },\n/* harmony export */   Interceptor: function() { return /* binding */ Interceptor; },\n/* harmony export */   InterceptorReadyState: function() { return /* binding */ InterceptorReadyState; },\n/* harmony export */   createRequestId: function() { return /* binding */ createRequestId; },\n/* harmony export */   deleteGlobalSymbol: function() { return /* binding */ deleteGlobalSymbol; },\n/* harmony export */   getGlobalSymbol: function() { return /* binding */ getGlobalSymbol; }\n/* harmony export */ });\n/* harmony import */ var _open_draft_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @open-draft/logger */ \"(app-pages-browser)/./node_modules/.pnpm/@open-draft+logger@0.3.0/node_modules/@open-draft/logger/lib/index.mjs\");\n/* harmony import */ var strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! strict-event-emitter */ \"(app-pages-browser)/./node_modules/.pnpm/strict-event-emitter@0.5.1/node_modules/strict-event-emitter/lib/index.mjs\");\n// src/Interceptor.ts\n\n\nvar INTERNAL_REQUEST_ID_HEADER_NAME = \"x-interceptors-internal-request-id\";\nfunction getGlobalSymbol(symbol) {\n  return (\n    // @ts-ignore https://github.com/Microsoft/TypeScript/issues/24587\n    globalThis[symbol] || void 0\n  );\n}\nfunction setGlobalSymbol(symbol, value) {\n  globalThis[symbol] = value;\n}\nfunction deleteGlobalSymbol(symbol) {\n  delete globalThis[symbol];\n}\nvar InterceptorReadyState = /* @__PURE__ */ ((InterceptorReadyState2) => {\n  InterceptorReadyState2[\"INACTIVE\"] = \"INACTIVE\";\n  InterceptorReadyState2[\"APPLYING\"] = \"APPLYING\";\n  InterceptorReadyState2[\"APPLIED\"] = \"APPLIED\";\n  InterceptorReadyState2[\"DISPOSING\"] = \"DISPOSING\";\n  InterceptorReadyState2[\"DISPOSED\"] = \"DISPOSED\";\n  return InterceptorReadyState2;\n})(InterceptorReadyState || {});\nvar Interceptor = class {\n  constructor(symbol) {\n    this.symbol = symbol;\n    this.readyState = \"INACTIVE\" /* INACTIVE */;\n    this.emitter = new strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__.Emitter();\n    this.subscriptions = [];\n    this.logger = new _open_draft_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(symbol.description);\n    this.emitter.setMaxListeners(0);\n    this.logger.info(\"constructing the interceptor...\");\n  }\n  /**\n   * Determine if this interceptor can be applied\n   * in the current environment.\n   */\n  checkEnvironment() {\n    return true;\n  }\n  /**\n   * Apply this interceptor to the current process.\n   * Returns an already running interceptor instance if it's present.\n   */\n  apply() {\n    const logger = this.logger.extend(\"apply\");\n    logger.info(\"applying the interceptor...\");\n    if (this.readyState === \"APPLIED\" /* APPLIED */) {\n      logger.info(\"intercepted already applied!\");\n      return;\n    }\n    const shouldApply = this.checkEnvironment();\n    if (!shouldApply) {\n      logger.info(\"the interceptor cannot be applied in this environment!\");\n      return;\n    }\n    this.readyState = \"APPLYING\" /* APPLYING */;\n    const runningInstance = this.getInstance();\n    if (runningInstance) {\n      logger.info(\"found a running instance, reusing...\");\n      this.on = (event, listener) => {\n        logger.info('proxying the \"%s\" listener', event);\n        runningInstance.emitter.addListener(event, listener);\n        this.subscriptions.push(() => {\n          runningInstance.emitter.removeListener(event, listener);\n          logger.info('removed proxied \"%s\" listener!', event);\n        });\n        return this;\n      };\n      this.readyState = \"APPLIED\" /* APPLIED */;\n      return;\n    }\n    logger.info(\"no running instance found, setting up a new instance...\");\n    this.setup();\n    this.setInstance();\n    this.readyState = \"APPLIED\" /* APPLIED */;\n  }\n  /**\n   * Setup the module augments and stubs necessary for this interceptor.\n   * This method is not run if there's a running interceptor instance\n   * to prevent instantiating an interceptor multiple times.\n   */\n  setup() {\n  }\n  /**\n   * Listen to the interceptor's public events.\n   */\n  on(event, listener) {\n    const logger = this.logger.extend(\"on\");\n    if (this.readyState === \"DISPOSING\" /* DISPOSING */ || this.readyState === \"DISPOSED\" /* DISPOSED */) {\n      logger.info(\"cannot listen to events, already disposed!\");\n      return this;\n    }\n    logger.info('adding \"%s\" event listener:', event, listener);\n    this.emitter.on(event, listener);\n    return this;\n  }\n  once(event, listener) {\n    this.emitter.once(event, listener);\n    return this;\n  }\n  off(event, listener) {\n    this.emitter.off(event, listener);\n    return this;\n  }\n  removeAllListeners(event) {\n    this.emitter.removeAllListeners(event);\n    return this;\n  }\n  /**\n   * Disposes of any side-effects this interceptor has introduced.\n   */\n  dispose() {\n    const logger = this.logger.extend(\"dispose\");\n    if (this.readyState === \"DISPOSED\" /* DISPOSED */) {\n      logger.info(\"cannot dispose, already disposed!\");\n      return;\n    }\n    logger.info(\"disposing the interceptor...\");\n    this.readyState = \"DISPOSING\" /* DISPOSING */;\n    if (!this.getInstance()) {\n      logger.info(\"no interceptors running, skipping dispose...\");\n      return;\n    }\n    this.clearInstance();\n    logger.info(\"global symbol deleted:\", getGlobalSymbol(this.symbol));\n    if (this.subscriptions.length > 0) {\n      logger.info(\"disposing of %d subscriptions...\", this.subscriptions.length);\n      for (const dispose of this.subscriptions) {\n        dispose();\n      }\n      this.subscriptions = [];\n      logger.info(\"disposed of all subscriptions!\", this.subscriptions.length);\n    }\n    this.emitter.removeAllListeners();\n    logger.info(\"destroyed the listener!\");\n    this.readyState = \"DISPOSED\" /* DISPOSED */;\n  }\n  getInstance() {\n    var _a;\n    const instance = getGlobalSymbol(this.symbol);\n    this.logger.info(\"retrieved global instance:\", (_a = instance == null ? void 0 : instance.constructor) == null ? void 0 : _a.name);\n    return instance;\n  }\n  setInstance() {\n    setGlobalSymbol(this.symbol, this);\n    this.logger.info(\"set global instance!\", this.symbol.description);\n  }\n  clearInstance() {\n    deleteGlobalSymbol(this.symbol);\n    this.logger.info(\"cleared global instance!\", this.symbol.description);\n  }\n};\n\n// src/createRequestId.ts\nfunction createRequestId() {\n  return Math.random().toString(16).slice(2);\n}\n\n\n//# sourceMappingURL=chunk-QED3Q6Z2.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@mswjs+interceptors@0.29.1/node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@mswjs+interceptors@0.29.1/node_modules/@mswjs/interceptors/lib/browser/index.mjs":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@mswjs+interceptors@0.29.1/node_modules/@mswjs/interceptors/lib/browser/index.mjs ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BatchInterceptor: function() { return /* binding */ BatchInterceptor; },\n/* harmony export */   INTERNAL_REQUEST_ID_HEADER_NAME: function() { return /* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.INTERNAL_REQUEST_ID_HEADER_NAME; },\n/* harmony export */   IS_PATCHED_MODULE: function() { return /* reexport safe */ _chunk_OMISYKWR_mjs__WEBPACK_IMPORTED_MODULE_1__.IS_PATCHED_MODULE; },\n/* harmony export */   Interceptor: function() { return /* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.Interceptor; },\n/* harmony export */   InterceptorReadyState: function() { return /* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.InterceptorReadyState; },\n/* harmony export */   createRequestId: function() { return /* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.createRequestId; },\n/* harmony export */   decodeBuffer: function() { return /* reexport safe */ _chunk_6HYIRFX2_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeBuffer; },\n/* harmony export */   deleteGlobalSymbol: function() { return /* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.deleteGlobalSymbol; },\n/* harmony export */   encodeBuffer: function() { return /* reexport safe */ _chunk_6HYIRFX2_mjs__WEBPACK_IMPORTED_MODULE_0__.encodeBuffer; },\n/* harmony export */   getCleanUrl: function() { return /* binding */ getCleanUrl; },\n/* harmony export */   getGlobalSymbol: function() { return /* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.getGlobalSymbol; },\n/* harmony export */   isResponseWithoutBody: function() { return /* reexport safe */ _chunk_OMISYKWR_mjs__WEBPACK_IMPORTED_MODULE_1__.isResponseWithoutBody; }\n/* harmony export */ });\n/* harmony import */ var _chunk_6HYIRFX2_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-6HYIRFX2.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/@mswjs+interceptors@0.29.1/node_modules/@mswjs/interceptors/lib/browser/chunk-6HYIRFX2.mjs\");\n/* harmony import */ var _chunk_OMISYKWR_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-OMISYKWR.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/@mswjs+interceptors@0.29.1/node_modules/@mswjs/interceptors/lib/browser/chunk-OMISYKWR.mjs\");\n/* harmony import */ var _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-QED3Q6Z2.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/@mswjs+interceptors@0.29.1/node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs\");\n\n\n\n\n// src/BatchInterceptor.ts\nvar BatchInterceptor = class extends _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.Interceptor {\n  constructor(options) {\n    BatchInterceptor.symbol = Symbol(options.name);\n    super(BatchInterceptor.symbol);\n    this.interceptors = options.interceptors;\n  }\n  setup() {\n    const logger = this.logger.extend(\"setup\");\n    logger.info(\"applying all %d interceptors...\", this.interceptors.length);\n    for (const interceptor of this.interceptors) {\n      logger.info('applying \"%s\" interceptor...', interceptor.constructor.name);\n      interceptor.apply();\n      logger.info(\"adding interceptor dispose subscription\");\n      this.subscriptions.push(() => interceptor.dispose());\n    }\n  }\n  on(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.on(event, listener);\n    }\n    return this;\n  }\n  once(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.once(event, listener);\n    }\n    return this;\n  }\n  off(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.off(event, listener);\n    }\n    return this;\n  }\n  removeAllListeners(event) {\n    for (const interceptors of this.interceptors) {\n      interceptors.removeAllListeners(event);\n    }\n    return this;\n  }\n};\n\n// src/utils/getCleanUrl.ts\nfunction getCleanUrl(url, isAbsolute = true) {\n  return [isAbsolute && url.origin, url.pathname].filter(Boolean).join(\"\");\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AbXN3anMraW50ZXJjZXB0b3JzQDAuMjkuMS9ub2RlX21vZHVsZXMvQG1zd2pzL2ludGVyY2VwdG9ycy9saWIvYnJvd3Nlci9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRzhCO0FBSUE7QUFRQTs7QUFFOUI7QUFDQSxxQ0FBcUMsNERBQVc7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFjRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AbXN3anMraW50ZXJjZXB0b3JzQDAuMjkuMS9ub2RlX21vZHVsZXMvQG1zd2pzL2ludGVyY2VwdG9ycy9saWIvYnJvd3Nlci9pbmRleC5tanM/YTlkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBkZWNvZGVCdWZmZXIsXG4gIGVuY29kZUJ1ZmZlclxufSBmcm9tIFwiLi9jaHVuay02SFlJUkZYMi5tanNcIjtcbmltcG9ydCB7XG4gIElTX1BBVENIRURfTU9EVUxFLFxuICBpc1Jlc3BvbnNlV2l0aG91dEJvZHlcbn0gZnJvbSBcIi4vY2h1bmstT01JU1lLV1IubWpzXCI7XG5pbXBvcnQge1xuICBJTlRFUk5BTF9SRVFVRVNUX0lEX0hFQURFUl9OQU1FLFxuICBJbnRlcmNlcHRvcixcbiAgSW50ZXJjZXB0b3JSZWFkeVN0YXRlLFxuICBjcmVhdGVSZXF1ZXN0SWQsXG4gIGRlbGV0ZUdsb2JhbFN5bWJvbCxcbiAgZ2V0R2xvYmFsU3ltYm9sXG59IGZyb20gXCIuL2NodW5rLVFFRDNRNloyLm1qc1wiO1xuXG4vLyBzcmMvQmF0Y2hJbnRlcmNlcHRvci50c1xudmFyIEJhdGNoSW50ZXJjZXB0b3IgPSBjbGFzcyBleHRlbmRzIEludGVyY2VwdG9yIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIEJhdGNoSW50ZXJjZXB0b3Iuc3ltYm9sID0gU3ltYm9sKG9wdGlvbnMubmFtZSk7XG4gICAgc3VwZXIoQmF0Y2hJbnRlcmNlcHRvci5zeW1ib2wpO1xuICAgIHRoaXMuaW50ZXJjZXB0b3JzID0gb3B0aW9ucy5pbnRlcmNlcHRvcnM7XG4gIH1cbiAgc2V0dXAoKSB7XG4gICAgY29uc3QgbG9nZ2VyID0gdGhpcy5sb2dnZXIuZXh0ZW5kKFwic2V0dXBcIik7XG4gICAgbG9nZ2VyLmluZm8oXCJhcHBseWluZyBhbGwgJWQgaW50ZXJjZXB0b3JzLi4uXCIsIHRoaXMuaW50ZXJjZXB0b3JzLmxlbmd0aCk7XG4gICAgZm9yIChjb25zdCBpbnRlcmNlcHRvciBvZiB0aGlzLmludGVyY2VwdG9ycykge1xuICAgICAgbG9nZ2VyLmluZm8oJ2FwcGx5aW5nIFwiJXNcIiBpbnRlcmNlcHRvci4uLicsIGludGVyY2VwdG9yLmNvbnN0cnVjdG9yLm5hbWUpO1xuICAgICAgaW50ZXJjZXB0b3IuYXBwbHkoKTtcbiAgICAgIGxvZ2dlci5pbmZvKFwiYWRkaW5nIGludGVyY2VwdG9yIGRpc3Bvc2Ugc3Vic2NyaXB0aW9uXCIpO1xuICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLnB1c2goKCkgPT4gaW50ZXJjZXB0b3IuZGlzcG9zZSgpKTtcbiAgICB9XG4gIH1cbiAgb24oZXZlbnQsIGxpc3RlbmVyKSB7XG4gICAgZm9yIChjb25zdCBpbnRlcmNlcHRvciBvZiB0aGlzLmludGVyY2VwdG9ycykge1xuICAgICAgaW50ZXJjZXB0b3Iub24oZXZlbnQsIGxpc3RlbmVyKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgb25jZShldmVudCwgbGlzdGVuZXIpIHtcbiAgICBmb3IgKGNvbnN0IGludGVyY2VwdG9yIG9mIHRoaXMuaW50ZXJjZXB0b3JzKSB7XG4gICAgICBpbnRlcmNlcHRvci5vbmNlKGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIG9mZihldmVudCwgbGlzdGVuZXIpIHtcbiAgICBmb3IgKGNvbnN0IGludGVyY2VwdG9yIG9mIHRoaXMuaW50ZXJjZXB0b3JzKSB7XG4gICAgICBpbnRlcmNlcHRvci5vZmYoZXZlbnQsIGxpc3RlbmVyKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgcmVtb3ZlQWxsTGlzdGVuZXJzKGV2ZW50KSB7XG4gICAgZm9yIChjb25zdCBpbnRlcmNlcHRvcnMgb2YgdGhpcy5pbnRlcmNlcHRvcnMpIHtcbiAgICAgIGludGVyY2VwdG9ycy5yZW1vdmVBbGxMaXN0ZW5lcnMoZXZlbnQpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfVxufTtcblxuLy8gc3JjL3V0aWxzL2dldENsZWFuVXJsLnRzXG5mdW5jdGlvbiBnZXRDbGVhblVybCh1cmwsIGlzQWJzb2x1dGUgPSB0cnVlKSB7XG4gIHJldHVybiBbaXNBYnNvbHV0ZSAmJiB1cmwub3JpZ2luLCB1cmwucGF0aG5hbWVdLmZpbHRlcihCb29sZWFuKS5qb2luKFwiXCIpO1xufVxuZXhwb3J0IHtcbiAgQmF0Y2hJbnRlcmNlcHRvcixcbiAgSU5URVJOQUxfUkVRVUVTVF9JRF9IRUFERVJfTkFNRSxcbiAgSVNfUEFUQ0hFRF9NT0RVTEUsXG4gIEludGVyY2VwdG9yLFxuICBJbnRlcmNlcHRvclJlYWR5U3RhdGUsXG4gIGNyZWF0ZVJlcXVlc3RJZCxcbiAgZGVjb2RlQnVmZmVyLFxuICBkZWxldGVHbG9iYWxTeW1ib2wsXG4gIGVuY29kZUJ1ZmZlcixcbiAgZ2V0Q2xlYW5VcmwsXG4gIGdldEdsb2JhbFN5bWJvbCxcbiAgaXNSZXNwb25zZVdpdGhvdXRCb2R5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@mswjs+interceptors@0.29.1/node_modules/@mswjs/interceptors/lib/browser/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@open-draft+logger@0.3.0/node_modules/@open-draft/logger/lib/index.mjs":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@open-draft+logger@0.3.0/node_modules/@open-draft/logger/lib/index.mjs ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Logger: function() { return /* binding */ Logger; }\n/* harmony export */ });\n/* harmony import */ var is_node_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-node-process */ \"(app-pages-browser)/./node_modules/.pnpm/is-node-process@1.2.0/node_modules/is-node-process/lib/index.mjs\");\n/* harmony import */ var outvariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! outvariant */ \"(app-pages-browser)/./node_modules/.pnpm/outvariant@1.4.2/node_modules/outvariant/lib/index.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js\");\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/index.ts\n\n\n\n// src/colors.ts\nvar colors_exports = {};\n__export(colors_exports, {\n  blue: () => blue,\n  gray: () => gray,\n  green: () => green,\n  red: () => red,\n  yellow: () => yellow\n});\nfunction yellow(text) {\n  return `\\x1B[33m${text}\\x1B[0m`;\n}\nfunction blue(text) {\n  return `\\x1B[34m${text}\\x1B[0m`;\n}\nfunction gray(text) {\n  return `\\x1B[90m${text}\\x1B[0m`;\n}\nfunction red(text) {\n  return `\\x1B[31m${text}\\x1B[0m`;\n}\nfunction green(text) {\n  return `\\x1B[32m${text}\\x1B[0m`;\n}\n\n// src/index.ts\nvar IS_NODE = (0,is_node_process__WEBPACK_IMPORTED_MODULE_0__.isNodeProcess)();\nvar Logger = class {\n  constructor(name) {\n    this.name = name;\n    this.prefix = `[${this.name}]`;\n    const LOGGER_NAME = getVariable(\"DEBUG\");\n    const LOGGER_LEVEL = getVariable(\"LOG_LEVEL\");\n    const isLoggingEnabled = LOGGER_NAME === \"1\" || LOGGER_NAME === \"true\" || typeof LOGGER_NAME !== \"undefined\" && this.name.startsWith(LOGGER_NAME);\n    if (isLoggingEnabled) {\n      this.debug = isDefinedAndNotEquals(LOGGER_LEVEL, \"debug\") ? noop : this.debug;\n      this.info = isDefinedAndNotEquals(LOGGER_LEVEL, \"info\") ? noop : this.info;\n      this.success = isDefinedAndNotEquals(LOGGER_LEVEL, \"success\") ? noop : this.success;\n      this.warning = isDefinedAndNotEquals(LOGGER_LEVEL, \"warning\") ? noop : this.warning;\n      this.error = isDefinedAndNotEquals(LOGGER_LEVEL, \"error\") ? noop : this.error;\n    } else {\n      this.info = noop;\n      this.success = noop;\n      this.warning = noop;\n      this.error = noop;\n      this.only = noop;\n    }\n  }\n  prefix;\n  extend(domain) {\n    return new Logger(`${this.name}:${domain}`);\n  }\n  /**\n   * Print a debug message.\n   * @example\n   * logger.debug('no duplicates found, creating a document...')\n   */\n  debug(message, ...positionals) {\n    this.logEntry({\n      level: \"debug\",\n      message: gray(message),\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"gray\"\n      }\n    });\n  }\n  /**\n   * Print an info message.\n   * @example\n   * logger.info('start parsing...')\n   */\n  info(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"blue\"\n      }\n    });\n    const performance2 = new PerformanceEntry();\n    return (message2, ...positionals2) => {\n      performance2.measure();\n      this.logEntry({\n        level: \"info\",\n        message: `${message2} ${gray(`${performance2.deltaTime}ms`)}`,\n        positionals: positionals2,\n        prefix: this.prefix,\n        colors: {\n          prefix: \"blue\"\n        }\n      });\n    };\n  }\n  /**\n   * Print a success message.\n   * @example\n   * logger.success('successfully created document')\n   */\n  success(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: `\\u2714 ${this.prefix}`,\n      colors: {\n        timestamp: \"green\",\n        prefix: \"green\"\n      }\n    });\n  }\n  /**\n   * Print a warning.\n   * @example\n   * logger.warning('found legacy document format')\n   */\n  warning(message, ...positionals) {\n    this.logEntry({\n      level: \"warning\",\n      message,\n      positionals,\n      prefix: `\\u26A0 ${this.prefix}`,\n      colors: {\n        timestamp: \"yellow\",\n        prefix: \"yellow\"\n      }\n    });\n  }\n  /**\n   * Print an error message.\n   * @example\n   * logger.error('something went wrong')\n   */\n  error(message, ...positionals) {\n    this.logEntry({\n      level: \"error\",\n      message,\n      positionals,\n      prefix: `\\u2716 ${this.prefix}`,\n      colors: {\n        timestamp: \"red\",\n        prefix: \"red\"\n      }\n    });\n  }\n  /**\n   * Execute the given callback only when the logging is enabled.\n   * This is skipped in its entirety and has no runtime cost otherwise.\n   * This executes regardless of the log level.\n   * @example\n   * logger.only(() => {\n   *   logger.info('additional info')\n   * })\n   */\n  only(callback) {\n    callback();\n  }\n  createEntry(level, message) {\n    return {\n      timestamp: /* @__PURE__ */ new Date(),\n      level,\n      message\n    };\n  }\n  logEntry(args) {\n    const {\n      level,\n      message,\n      prefix,\n      colors: customColors,\n      positionals = []\n    } = args;\n    const entry = this.createEntry(level, message);\n    const timestampColor = customColors?.timestamp || \"gray\";\n    const prefixColor = customColors?.prefix || \"gray\";\n    const colorize = {\n      timestamp: colors_exports[timestampColor],\n      prefix: colors_exports[prefixColor]\n    };\n    const write = this.getWriter(level);\n    write(\n      [colorize.timestamp(this.formatTimestamp(entry.timestamp))].concat(prefix != null ? colorize.prefix(prefix) : []).concat(serializeInput(message)).join(\" \"),\n      ...positionals.map(serializeInput)\n    );\n  }\n  formatTimestamp(timestamp) {\n    return `${timestamp.toLocaleTimeString(\n      \"en-GB\"\n    )}:${timestamp.getMilliseconds()}`;\n  }\n  getWriter(level) {\n    switch (level) {\n      case \"debug\":\n      case \"success\":\n      case \"info\": {\n        return log;\n      }\n      case \"warning\": {\n        return warn;\n      }\n      case \"error\": {\n        return error;\n      }\n    }\n  }\n};\nvar PerformanceEntry = class {\n  startTime;\n  endTime;\n  deltaTime;\n  constructor() {\n    this.startTime = performance.now();\n  }\n  measure() {\n    this.endTime = performance.now();\n    const deltaTime = this.endTime - this.startTime;\n    this.deltaTime = deltaTime.toFixed(2);\n  }\n};\nvar noop = () => void 0;\nfunction log(message, ...positionals) {\n  if (IS_NODE) {\n    process.stdout.write((0,outvariant__WEBPACK_IMPORTED_MODULE_1__.format)(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.log(message, ...positionals);\n}\nfunction warn(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write((0,outvariant__WEBPACK_IMPORTED_MODULE_1__.format)(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.warn(message, ...positionals);\n}\nfunction error(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write((0,outvariant__WEBPACK_IMPORTED_MODULE_1__.format)(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.error(message, ...positionals);\n}\nfunction getVariable(variableName) {\n  if (IS_NODE) {\n    return process.env[variableName];\n  }\n  return globalThis[variableName]?.toString();\n}\nfunction isDefinedAndNotEquals(value, expected) {\n  return value !== void 0 && value !== expected;\n}\nfunction serializeInput(message) {\n  if (typeof message === \"undefined\") {\n    return \"undefined\";\n  }\n  if (message === null) {\n    return \"null\";\n  }\n  if (typeof message === \"string\") {\n    return message;\n  }\n  if (typeof message === \"object\") {\n    return JSON.stringify(message);\n  }\n  return message.toString();\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@open-draft+logger@0.3.0/node_modules/@open-draft/logger/lib/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@open-draft+until@2.1.0/node_modules/@open-draft/until/lib/index.mjs":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@open-draft+until@2.1.0/node_modules/@open-draft/until/lib/index.mjs ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   until: function() { return /* binding */ until; }\n/* harmony export */ });\n// src/until.ts\nvar until = async (promise) => {\n  try {\n    const data = await promise().catch((error) => {\n      throw error;\n    });\n    return { error: null, data };\n  } catch (error) {\n    return { error, data: null };\n  }\n};\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3Blbi1kcmFmdCt1bnRpbEAyLjEuMC9ub2RlX21vZHVsZXMvQG9wZW4tZHJhZnQvdW50aWwvbGliL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxhQUFhO0FBQ2IsSUFBSTtBQUNKLGFBQWE7QUFDYjtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW4tZHJhZnQrdW50aWxAMi4xLjAvbm9kZV9tb2R1bGVzL0BvcGVuLWRyYWZ0L3VudGlsL2xpYi9pbmRleC5tanM/OTZlMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdW50aWwudHNcbnZhciB1bnRpbCA9IGFzeW5jIChwcm9taXNlKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHByb21pc2UoKS5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH0pO1xuICAgIHJldHVybiB7IGVycm9yOiBudWxsLCBkYXRhIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHsgZXJyb3IsIGRhdGE6IG51bGwgfTtcbiAgfVxufTtcbmV4cG9ydCB7XG4gIHVudGlsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@open-draft+until@2.1.0/node_modules/@open-draft/until/lib/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/lib/index.mjs":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/lib/index.mjs ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Headers: function() { return /* binding */ Headers; },\n/* harmony export */   flattenHeadersList: function() { return /* binding */ flattenHeadersList; },\n/* harmony export */   flattenHeadersObject: function() { return /* binding */ flattenHeadersObject; },\n/* harmony export */   getRawHeaders: function() { return /* binding */ getRawHeaders; },\n/* harmony export */   headersToList: function() { return /* binding */ headersToList; },\n/* harmony export */   headersToObject: function() { return /* binding */ headersToObject; },\n/* harmony export */   headersToString: function() { return /* binding */ headersToString; },\n/* harmony export */   listToHeaders: function() { return /* binding */ listToHeaders; },\n/* harmony export */   objectToHeaders: function() { return /* binding */ objectToHeaders; },\n/* harmony export */   reduceHeadersObject: function() { return /* binding */ reduceHeadersObject; },\n/* harmony export */   stringToHeaders: function() { return /* binding */ stringToHeaders; }\n/* harmony export */ });\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/set-cookie-parser/lib/set-cookie.js\nvar require_set_cookie = __commonJS({\n  \"node_modules/set-cookie-parser/lib/set-cookie.js\"(exports, module) {\n    \"use strict\";\n    var defaultParseOptions = {\n      decodeValues: true,\n      map: false,\n      silent: false\n    };\n    function isNonEmptyString(str) {\n      return typeof str === \"string\" && !!str.trim();\n    }\n    function parseString(setCookieValue, options) {\n      var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n      var nameValuePairStr = parts.shift();\n      var parsed = parseNameValuePair(nameValuePairStr);\n      var name = parsed.name;\n      var value = parsed.value;\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      try {\n        value = options.decodeValues ? decodeURIComponent(value) : value;\n      } catch (e) {\n        console.error(\n          \"set-cookie-parser encountered an error while decoding a cookie with value '\" + value + \"'. Set options.decodeValues to false to disable this feature.\",\n          e\n        );\n      }\n      var cookie = {\n        name,\n        value\n      };\n      parts.forEach(function(part) {\n        var sides = part.split(\"=\");\n        var key = sides.shift().trimLeft().toLowerCase();\n        var value2 = sides.join(\"=\");\n        if (key === \"expires\") {\n          cookie.expires = new Date(value2);\n        } else if (key === \"max-age\") {\n          cookie.maxAge = parseInt(value2, 10);\n        } else if (key === \"secure\") {\n          cookie.secure = true;\n        } else if (key === \"httponly\") {\n          cookie.httpOnly = true;\n        } else if (key === \"samesite\") {\n          cookie.sameSite = value2;\n        } else {\n          cookie[key] = value2;\n        }\n      });\n      return cookie;\n    }\n    function parseNameValuePair(nameValuePairStr) {\n      var name = \"\";\n      var value = \"\";\n      var nameValueArr = nameValuePairStr.split(\"=\");\n      if (nameValueArr.length > 1) {\n        name = nameValueArr.shift();\n        value = nameValueArr.join(\"=\");\n      } else {\n        value = nameValuePairStr;\n      }\n      return { name, value };\n    }\n    function parse(input, options) {\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      if (!input) {\n        if (!options.map) {\n          return [];\n        } else {\n          return {};\n        }\n      }\n      if (input.headers) {\n        if (typeof input.headers.getSetCookie === \"function\") {\n          input = input.headers.getSetCookie();\n        } else if (input.headers[\"set-cookie\"]) {\n          input = input.headers[\"set-cookie\"];\n        } else {\n          var sch = input.headers[Object.keys(input.headers).find(function(key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })];\n          if (!sch && input.headers.cookie && !options.silent) {\n            console.warn(\n              \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n            );\n          }\n          input = sch;\n        }\n      }\n      if (!Array.isArray(input)) {\n        input = [input];\n      }\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      if (!options.map) {\n        return input.filter(isNonEmptyString).map(function(str) {\n          return parseString(str, options);\n        });\n      } else {\n        var cookies = {};\n        return input.filter(isNonEmptyString).reduce(function(cookies2, str) {\n          var cookie = parseString(str, options);\n          cookies2[cookie.name] = cookie;\n          return cookies2;\n        }, cookies);\n      }\n    }\n    function splitCookiesString2(cookiesString) {\n      if (Array.isArray(cookiesString)) {\n        return cookiesString;\n      }\n      if (typeof cookiesString !== \"string\") {\n        return [];\n      }\n      var cookiesStrings = [];\n      var pos = 0;\n      var start;\n      var ch;\n      var lastComma;\n      var nextStart;\n      var cookiesSeparatorFound;\n      function skipWhitespace() {\n        while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n          pos += 1;\n        }\n        return pos < cookiesString.length;\n      }\n      function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n      }\n      while (pos < cookiesString.length) {\n        start = pos;\n        cookiesSeparatorFound = false;\n        while (skipWhitespace()) {\n          ch = cookiesString.charAt(pos);\n          if (ch === \",\") {\n            lastComma = pos;\n            pos += 1;\n            skipWhitespace();\n            nextStart = pos;\n            while (pos < cookiesString.length && notSpecialChar()) {\n              pos += 1;\n            }\n            if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n              cookiesSeparatorFound = true;\n              pos = nextStart;\n              cookiesStrings.push(cookiesString.substring(start, lastComma));\n              start = pos;\n            } else {\n              pos = lastComma + 1;\n            }\n          } else {\n            pos += 1;\n          }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n          cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n      }\n      return cookiesStrings;\n    }\n    module.exports = parse;\n    module.exports.parse = parse;\n    module.exports.parseString = parseString;\n    module.exports.splitCookiesString = splitCookiesString2;\n  }\n});\n\n// src/Headers.ts\nvar import_set_cookie_parser = __toESM(require_set_cookie());\n\n// src/utils/normalizeHeaderName.ts\nvar HEADERS_INVALID_CHARACTERS = /[^a-z0-9\\-#$%&'*+.^_`|~]/i;\nfunction normalizeHeaderName(name) {\n  if (HEADERS_INVALID_CHARACTERS.test(name) || name.trim() === \"\") {\n    throw new TypeError(\"Invalid character in header field name\");\n  }\n  return name.trim().toLowerCase();\n}\n\n// src/utils/normalizeHeaderValue.ts\nvar charCodesToRemove = [\n  String.fromCharCode(10),\n  String.fromCharCode(13),\n  String.fromCharCode(9),\n  String.fromCharCode(32)\n];\nvar HEADER_VALUE_REMOVE_REGEXP = new RegExp(\n  `(^[${charCodesToRemove.join(\"\")}]|$[${charCodesToRemove.join(\"\")}])`,\n  \"g\"\n);\nfunction normalizeHeaderValue(value) {\n  const nextValue = value.replace(HEADER_VALUE_REMOVE_REGEXP, \"\");\n  return nextValue;\n}\n\n// src/utils/isValidHeaderName.ts\nfunction isValidHeaderName(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  if (value.length === 0) {\n    return false;\n  }\n  for (let i = 0; i < value.length; i++) {\n    const character = value.charCodeAt(i);\n    if (character > 127 || !isToken(character)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isToken(value) {\n  return ![\n    127,\n    32,\n    \"(\",\n    \")\",\n    \"<\",\n    \">\",\n    \"@\",\n    \",\",\n    \";\",\n    \":\",\n    \"\\\\\",\n    '\"',\n    \"/\",\n    \"[\",\n    \"]\",\n    \"?\",\n    \"=\",\n    \"{\",\n    \"}\"\n  ].includes(value);\n}\n\n// src/utils/isValidHeaderValue.ts\nfunction isValidHeaderValue(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  if (value.trim() !== value) {\n    return false;\n  }\n  for (let i = 0; i < value.length; i++) {\n    const character = value.charCodeAt(i);\n    if (\n      // NUL.\n      character === 0 || // HTTP newline bytes.\n      character === 10 || character === 13\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// src/Headers.ts\nvar NORMALIZED_HEADERS = Symbol(\"normalizedHeaders\");\nvar RAW_HEADER_NAMES = Symbol(\"rawHeaderNames\");\nvar HEADER_VALUE_DELIMITER = \", \";\nvar _a, _b, _c;\nvar Headers = class _Headers {\n  constructor(init) {\n    // Normalized header {\"name\":\"a, b\"} storage.\n    this[_a] = {};\n    // Keeps the mapping between the raw header name\n    // and the normalized header name to ease the lookup.\n    this[_b] = /* @__PURE__ */ new Map();\n    this[_c] = \"Headers\";\n    if ([\"Headers\", \"HeadersPolyfill\"].includes(init?.constructor.name) || init instanceof _Headers || typeof globalThis.Headers !== \"undefined\" && init instanceof globalThis.Headers) {\n      const initialHeaders = init;\n      initialHeaders.forEach((value, name) => {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(init)) {\n      init.forEach(([name, value]) => {\n        this.append(\n          name,\n          Array.isArray(value) ? value.join(HEADER_VALUE_DELIMITER) : value\n        );\n      });\n    } else if (init) {\n      Object.getOwnPropertyNames(init).forEach((name) => {\n        const value = init[name];\n        this.append(\n          name,\n          Array.isArray(value) ? value.join(HEADER_VALUE_DELIMITER) : value\n        );\n      });\n    }\n  }\n  [(_a = NORMALIZED_HEADERS, _b = RAW_HEADER_NAMES, _c = Symbol.toStringTag, Symbol.iterator)]() {\n    return this.entries();\n  }\n  *keys() {\n    for (const [name] of this.entries()) {\n      yield name;\n    }\n  }\n  *values() {\n    for (const [, value] of this.entries()) {\n      yield value;\n    }\n  }\n  *entries() {\n    let sortedKeys = Object.keys(this[NORMALIZED_HEADERS]).sort(\n      (a, b) => a.localeCompare(b)\n    );\n    for (const name of sortedKeys) {\n      if (name === \"set-cookie\") {\n        for (const value of this.getSetCookie()) {\n          yield [name, value];\n        }\n      } else {\n        yield [name, this.get(name)];\n      }\n    }\n  }\n  /**\n   * Returns a boolean stating whether a `Headers` object contains a certain header.\n   */\n  has(name) {\n    if (!isValidHeaderName(name)) {\n      throw new TypeError(`Invalid header name \"${name}\"`);\n    }\n    return this[NORMALIZED_HEADERS].hasOwnProperty(normalizeHeaderName(name));\n  }\n  /**\n   * Returns a `ByteString` sequence of all the values of a header with a given name.\n   */\n  get(name) {\n    if (!isValidHeaderName(name)) {\n      throw TypeError(`Invalid header name \"${name}\"`);\n    }\n    return this[NORMALIZED_HEADERS][normalizeHeaderName(name)] ?? null;\n  }\n  /**\n   * Sets a new value for an existing header inside a `Headers` object, or adds the header if it does not already exist.\n   */\n  set(name, value) {\n    if (!isValidHeaderName(name) || !isValidHeaderValue(value)) {\n      return;\n    }\n    const normalizedName = normalizeHeaderName(name);\n    const normalizedValue = normalizeHeaderValue(value);\n    this[NORMALIZED_HEADERS][normalizedName] = normalizeHeaderValue(normalizedValue);\n    this[RAW_HEADER_NAMES].set(normalizedName, name);\n  }\n  /**\n   * Appends a new value onto an existing header inside a `Headers` object, or adds the header if it does not already exist.\n   */\n  append(name, value) {\n    if (!isValidHeaderName(name) || !isValidHeaderValue(value)) {\n      return;\n    }\n    const normalizedName = normalizeHeaderName(name);\n    const normalizedValue = normalizeHeaderValue(value);\n    let resolvedValue = this.has(normalizedName) ? `${this.get(normalizedName)}, ${normalizedValue}` : normalizedValue;\n    this.set(name, resolvedValue);\n  }\n  /**\n   * Deletes a header from the `Headers` object.\n   */\n  delete(name) {\n    if (!isValidHeaderName(name)) {\n      return;\n    }\n    if (!this.has(name)) {\n      return;\n    }\n    const normalizedName = normalizeHeaderName(name);\n    delete this[NORMALIZED_HEADERS][normalizedName];\n    this[RAW_HEADER_NAMES].delete(normalizedName);\n  }\n  /**\n   * Traverses the `Headers` object,\n   * calling the given callback for each header.\n   */\n  forEach(callback, thisArg) {\n    for (const [name, value] of this.entries()) {\n      callback.call(thisArg, value, name, this);\n    }\n  }\n  /**\n   * Returns an array containing the values\n   * of all Set-Cookie headers associated\n   * with a response\n   */\n  getSetCookie() {\n    const setCookieHeader = this.get(\"set-cookie\");\n    if (setCookieHeader === null) {\n      return [];\n    }\n    if (setCookieHeader === \"\") {\n      return [\"\"];\n    }\n    return (0, import_set_cookie_parser.splitCookiesString)(setCookieHeader);\n  }\n};\n\n// src/getRawHeaders.ts\nfunction getRawHeaders(headers) {\n  const rawHeaders = {};\n  for (const [name, value] of headers.entries()) {\n    rawHeaders[headers[RAW_HEADER_NAMES].get(name)] = value;\n  }\n  return rawHeaders;\n}\n\n// src/transformers/headersToList.ts\nfunction headersToList(headers) {\n  const headersList = [];\n  headers.forEach((value, name) => {\n    const resolvedValue = value.includes(\",\") ? value.split(\",\").map((value2) => value2.trim()) : value;\n    headersList.push([name, resolvedValue]);\n  });\n  return headersList;\n}\n\n// src/transformers/headersToString.ts\nfunction headersToString(headers) {\n  const list = headersToList(headers);\n  const lines = list.map(([name, value]) => {\n    const values = [].concat(value);\n    return `${name}: ${values.join(\", \")}`;\n  });\n  return lines.join(\"\\r\\n\");\n}\n\n// src/transformers/headersToObject.ts\nvar singleValueHeaders = [\"user-agent\"];\nfunction headersToObject(headers) {\n  const headersObject = {};\n  headers.forEach((value, name) => {\n    const isMultiValue = !singleValueHeaders.includes(name.toLowerCase()) && value.includes(\",\");\n    headersObject[name] = isMultiValue ? value.split(\",\").map((s) => s.trim()) : value;\n  });\n  return headersObject;\n}\n\n// src/transformers/stringToHeaders.ts\nfunction stringToHeaders(str) {\n  const lines = str.trim().split(/[\\r\\n]+/);\n  return lines.reduce((headers, line) => {\n    if (line.trim() === \"\") {\n      return headers;\n    }\n    const parts = line.split(\": \");\n    const name = parts.shift();\n    const value = parts.join(\": \");\n    headers.append(name, value);\n    return headers;\n  }, new Headers());\n}\n\n// src/transformers/listToHeaders.ts\nfunction listToHeaders(list) {\n  const headers = new Headers();\n  list.forEach(([name, value]) => {\n    const values = [].concat(value);\n    values.forEach((value2) => {\n      headers.append(name, value2);\n    });\n  });\n  return headers;\n}\n\n// src/transformers/reduceHeadersObject.ts\nfunction reduceHeadersObject(headers, reducer, initialState) {\n  return Object.keys(headers).reduce((nextHeaders, name) => {\n    return reducer(nextHeaders, name, headers[name]);\n  }, initialState);\n}\n\n// src/transformers/objectToHeaders.ts\nfunction objectToHeaders(headersObject) {\n  return reduceHeadersObject(\n    headersObject,\n    (headers, name, value) => {\n      const values = [].concat(value).filter(Boolean);\n      values.forEach((value2) => {\n        headers.append(name, value2);\n      });\n      return headers;\n    },\n    new Headers()\n  );\n}\n\n// src/transformers/flattenHeadersList.ts\nfunction flattenHeadersList(list) {\n  return list.map(([name, values]) => {\n    return [name, [].concat(values).join(\", \")];\n  });\n}\n\n// src/transformers/flattenHeadersObject.ts\nfunction flattenHeadersObject(headersObject) {\n  return reduceHeadersObject(\n    headersObject,\n    (headers, name, value) => {\n      headers[name] = [].concat(value).join(\", \");\n      return headers;\n    },\n    {}\n  );\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/lib/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/is-node-process@1.2.0/node_modules/is-node-process/lib/index.mjs":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/is-node-process@1.2.0/node_modules/is-node-process/lib/index.mjs ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNodeProcess: function() { return /* binding */ isNodeProcess; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js\");\n// src/index.ts\nfunction isNodeProcess() {\n  if (typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\") {\n    return true;\n  }\n  if (typeof process !== \"undefined\") {\n    const type = process.type;\n    if (type === \"renderer\" || type === \"worker\") {\n      return false;\n    }\n    return !!(process.versions && process.versions.node);\n  }\n  return false;\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9pcy1ub2RlLXByb2Nlc3NAMS4yLjAvbm9kZV9tb2R1bGVzL2lzLW5vZGUtcHJvY2Vzcy9saWIvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQixpQkFBaUIsT0FBTztBQUN4QjtBQUNBO0FBQ0E7QUFDQSxjQUFjLE9BQU8sYUFBYSxPQUFPO0FBQ3pDO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2lzLW5vZGUtcHJvY2Vzc0AxLjIuMC9ub2RlX21vZHVsZXMvaXMtbm9kZS1wcm9jZXNzL2xpYi9pbmRleC5tanM/ZGZhNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvaW5kZXgudHNcbmZ1bmN0aW9uIGlzTm9kZVByb2Nlc3MoKSB7XG4gIGlmICh0eXBlb2YgbmF2aWdhdG9yICE9PSBcInVuZGVmaW5lZFwiICYmIG5hdmlnYXRvci5wcm9kdWN0ID09PSBcIlJlYWN0TmF0aXZlXCIpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBpZiAodHlwZW9mIHByb2Nlc3MgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjb25zdCB0eXBlID0gcHJvY2Vzcy50eXBlO1xuICAgIGlmICh0eXBlID09PSBcInJlbmRlcmVyXCIgfHwgdHlwZSA9PT0gXCJ3b3JrZXJcIikge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gISEocHJvY2Vzcy52ZXJzaW9ucyAmJiBwcm9jZXNzLnZlcnNpb25zLm5vZGUpO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydCB7XG4gIGlzTm9kZVByb2Nlc3Ncbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/is-node-process@1.2.0/node_modules/is-node-process/lib/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/browser/index.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/browser/index.mjs ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetupWorkerApi: function() { return /* binding */ SetupWorkerApi; },\n/* harmony export */   setupWorker: function() { return /* binding */ setupWorker; }\n/* harmony export */ });\n/* harmony import */ var _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils/internal/devUtils.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/devUtils.mjs\");\n/* harmony import */ var _core_handlers_RequestHandler_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/handlers/RequestHandler.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/handlers/RequestHandler.mjs\");\n/* harmony import */ var _core_utils_handleRequest_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/utils/handleRequest.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/handleRequest.mjs\");\n/* harmony import */ var _core_utils_toResponseInit_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/utils/toResponseInit.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/toResponseInit.mjs\");\n/* harmony import */ var _core_SetupApi_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/SetupApi.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/SetupApi.mjs\");\n/* harmony import */ var _core_utils_internal_mergeRight_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/utils/internal/mergeRight.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/mergeRight.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js\");\n// node_modules/.pnpm/outvariant@1.4.2/node_modules/outvariant/lib/index.mjs\nvar POSITIONALS_EXP = /(%?)(%([sdijo]))/g;\nfunction serializePositional(positional, flag) {\n  switch (flag) {\n    case \"s\":\n      return positional;\n    case \"d\":\n    case \"i\":\n      return Number(positional);\n    case \"j\":\n      return JSON.stringify(positional);\n    case \"o\": {\n      if (typeof positional === \"string\") {\n        return positional;\n      }\n      const json = JSON.stringify(positional);\n      if (json === \"{}\" || json === \"[]\" || /^\\[object .+?\\]$/.test(json)) {\n        return positional;\n      }\n      return json;\n    }\n  }\n}\nfunction format(message, ...positionals) {\n  if (positionals.length === 0) {\n    return message;\n  }\n  let positionalIndex = 0;\n  let formattedMessage = message.replace(\n    POSITIONALS_EXP,\n    (match, isEscaped, _, flag) => {\n      const positional = positionals[positionalIndex];\n      const value = serializePositional(positional, flag);\n      if (!isEscaped) {\n        positionalIndex++;\n        return value;\n      }\n      return match;\n    }\n  );\n  if (positionalIndex < positionals.length) {\n    formattedMessage += ` ${positionals.slice(positionalIndex).join(\" \")}`;\n  }\n  formattedMessage = formattedMessage.replace(/%{2,2}/g, \"%\");\n  return formattedMessage;\n}\nvar STACK_FRAMES_TO_IGNORE = 2;\nfunction cleanErrorStack(error2) {\n  if (!error2.stack) {\n    return;\n  }\n  const nextStack = error2.stack.split(\"\\n\");\n  nextStack.splice(1, STACK_FRAMES_TO_IGNORE);\n  error2.stack = nextStack.join(\"\\n\");\n}\nvar InvariantError = class extends Error {\n  constructor(message, ...positionals) {\n    super(message);\n    this.message = message;\n    this.name = \"Invariant Violation\";\n    this.message = format(message, ...positionals);\n    cleanErrorStack(this);\n  }\n};\nvar invariant = (predicate, message, ...positionals) => {\n  if (!predicate) {\n    throw new InvariantError(message, ...positionals);\n  }\n};\ninvariant.as = (ErrorConstructor, predicate, message, ...positionals) => {\n  if (!predicate) {\n    const formatMessage = positionals.length === 0 ? message : format(message, positionals);\n    let error2;\n    try {\n      error2 = Reflect.construct(ErrorConstructor, [formatMessage]);\n    } catch (err) {\n      error2 = ErrorConstructor(formatMessage);\n    }\n    throw error2;\n  }\n};\n\n// node_modules/.pnpm/is-node-process@1.2.0/node_modules/is-node-process/lib/index.mjs\nfunction isNodeProcess() {\n  if (typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\") {\n    return true;\n  }\n  if (typeof process !== \"undefined\") {\n    const type = process.type;\n    if (type === \"renderer\" || type === \"worker\") {\n      return false;\n    }\n    return !!(process.versions && process.versions.node);\n  }\n  return false;\n}\n\n// src/browser/setupWorker/start/createStartHandler.ts\n\n\n// node_modules/.pnpm/@open-draft+until@2.1.0/node_modules/@open-draft/until/lib/index.mjs\nvar until = async (promise) => {\n  try {\n    const data = await promise().catch((error2) => {\n      throw error2;\n    });\n    return { error: null, data };\n  } catch (error2) {\n    return { error: error2, data: null };\n  }\n};\n\n// src/browser/setupWorker/start/utils/getWorkerInstance.ts\n\n\n// src/browser/utils/getAbsoluteWorkerUrl.ts\nfunction getAbsoluteWorkerUrl(workerUrl) {\n  return new URL(workerUrl, location.href).href;\n}\n\n// src/browser/setupWorker/start/utils/getWorkerByRegistration.ts\nfunction getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker) {\n  const allStates = [\n    registration.active,\n    registration.installing,\n    registration.waiting\n  ];\n  const relevantStates = allStates.filter((state) => {\n    return state != null;\n  });\n  const worker = relevantStates.find((worker2) => {\n    return findWorker(worker2.scriptURL, absoluteWorkerUrl);\n  });\n  return worker || null;\n}\n\n// src/browser/setupWorker/start/utils/getWorkerInstance.ts\nvar getWorkerInstance = async (url, options = {}, findWorker) => {\n  const absoluteWorkerUrl = getAbsoluteWorkerUrl(url);\n  const mockRegistrations = await navigator.serviceWorker.getRegistrations().then(\n    (registrations) => registrations.filter(\n      (registration) => getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker)\n    )\n  );\n  if (!navigator.serviceWorker.controller && mockRegistrations.length > 0) {\n    location.reload();\n  }\n  const [existingRegistration] = mockRegistrations;\n  if (existingRegistration) {\n    return existingRegistration.update().then(() => {\n      return [\n        getWorkerByRegistration(\n          existingRegistration,\n          absoluteWorkerUrl,\n          findWorker\n        ),\n        existingRegistration\n      ];\n    });\n  }\n  const registrationResult = await until(\n    async () => {\n      const registration = await navigator.serviceWorker.register(url, options);\n      return [\n        // Compare existing worker registration by its worker URL,\n        // to prevent irrelevant workers to resolve here (such as Codesandbox worker).\n        getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker),\n        registration\n      ];\n    }\n  );\n  if (registrationResult.error) {\n    const isWorkerMissing = registrationResult.error.message.includes(\"(404)\");\n    if (isWorkerMissing) {\n      const scopeUrl = new URL(options?.scope || \"/\", location.href);\n      throw new Error(\n        _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(`Failed to register a Service Worker for scope ('${scopeUrl.href}') with script ('${absoluteWorkerUrl}'): Service Worker script does not exist at the given path.\n\nDid you forget to run \"npx msw init <PUBLIC_DIR>\"?\n\nLearn more about creating the Service Worker script: https://mswjs.io/docs/cli/init`)\n      );\n    }\n    throw new Error(\n      _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(\n        \"Failed to register the Service Worker:\\n\\n%s\",\n        registrationResult.error.message\n      )\n    );\n  }\n  return registrationResult.data;\n};\n\n// src/browser/setupWorker/start/utils/enableMocking.ts\n\n\n// src/browser/setupWorker/start/utils/printStartMessage.ts\n\nfunction printStartMessage(args = {}) {\n  if (args.quiet) {\n    return;\n  }\n  const message = args.message || \"Mocking enabled.\";\n  console.groupCollapsed(\n    `%c${_core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(message)}`,\n    \"color:orangered;font-weight:bold;\"\n  );\n  console.log(\n    \"%cDocumentation: %chttps://mswjs.io/docs\",\n    \"font-weight:bold\",\n    \"font-weight:normal\"\n  );\n  console.log(\"Found an issue? https://github.com/mswjs/msw/issues\");\n  if (args.workerUrl) {\n    console.log(\"Worker script URL:\", args.workerUrl);\n  }\n  if (args.workerScope) {\n    console.log(\"Worker scope:\", args.workerScope);\n  }\n  console.groupEnd();\n}\n\n// src/browser/setupWorker/start/utils/enableMocking.ts\nasync function enableMocking(context, options) {\n  context.workerChannel.send(\"MOCK_ACTIVATE\");\n  await context.events.once(\"MOCKING_ENABLED\");\n  if (context.isMockingEnabled) {\n    _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.warn(\n      `Found a redundant \"worker.start()\" call. Note that starting the worker while mocking is already enabled will have no effect. Consider removing this \"worker.start()\" call.`\n    );\n    return;\n  }\n  context.isMockingEnabled = true;\n  printStartMessage({\n    quiet: options.quiet,\n    workerScope: context.registration?.scope,\n    workerUrl: context.worker?.scriptURL\n  });\n}\n\n// src/browser/setupWorker/start/utils/createMessageChannel.ts\nvar WorkerChannel = class {\n  constructor(port) {\n    this.port = port;\n  }\n  postMessage(event, ...rest) {\n    const [data, transfer] = rest;\n    this.port.postMessage({ type: event, data }, { transfer });\n  }\n};\n\n// src/browser/utils/pruneGetRequestBody.ts\nfunction pruneGetRequestBody(request) {\n  if ([\"HEAD\", \"GET\"].includes(request.method)) {\n    return void 0;\n  }\n  return request.body;\n}\n\n// src/browser/utils/parseWorkerRequest.ts\nfunction parseWorkerRequest(incomingRequest) {\n  return new Request(incomingRequest.url, {\n    ...incomingRequest,\n    body: pruneGetRequestBody(incomingRequest)\n  });\n}\n\n// src/browser/setupWorker/start/createRequestListener.ts\n\n\n\n\nvar createRequestListener = (context, options) => {\n  return async (event, message) => {\n    const messageChannel = new WorkerChannel(event.ports[0]);\n    const requestId = message.payload.id;\n    const request = parseWorkerRequest(message.payload);\n    const requestCloneForLogs = request.clone();\n    const requestClone = request.clone();\n    _core_handlers_RequestHandler_mjs__WEBPACK_IMPORTED_MODULE_1__.RequestHandler.cache.set(request, requestClone);\n    context.requests.set(requestId, requestClone);\n    try {\n      await (0,_core_utils_handleRequest_mjs__WEBPACK_IMPORTED_MODULE_2__.handleRequest)(\n        request,\n        requestId,\n        context.getRequestHandlers(),\n        options,\n        context.emitter,\n        {\n          onPassthroughResponse() {\n            messageChannel.postMessage(\"PASSTHROUGH\");\n          },\n          async onMockedResponse(response, { handler, parsedResult }) {\n            const responseClone = response.clone();\n            const responseCloneForLogs = response.clone();\n            const responseInit = (0,_core_utils_toResponseInit_mjs__WEBPACK_IMPORTED_MODULE_3__.toResponseInit)(response);\n            if (context.supports.readableStreamTransfer) {\n              const responseStreamOrNull = response.body;\n              messageChannel.postMessage(\n                \"MOCK_RESPONSE\",\n                {\n                  ...responseInit,\n                  body: responseStreamOrNull\n                },\n                responseStreamOrNull ? [responseStreamOrNull] : void 0\n              );\n            } else {\n              const responseBufferOrNull = response.body === null ? null : await responseClone.arrayBuffer();\n              messageChannel.postMessage(\"MOCK_RESPONSE\", {\n                ...responseInit,\n                body: responseBufferOrNull\n              });\n            }\n            if (!options.quiet) {\n              context.emitter.once(\"response:mocked\", () => {\n                handler.log({\n                  request: requestCloneForLogs,\n                  response: responseCloneForLogs,\n                  parsedResult\n                });\n              });\n            }\n          }\n        }\n      );\n    } catch (error2) {\n      if (error2 instanceof Error) {\n        _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.error(\n          `Uncaught exception in the request handler for \"%s %s\":\n\n%s\n\nThis exception has been gracefully handled as a 500 response, however, it's strongly recommended to resolve this error, as it indicates a mistake in your code. If you wish to mock an error response, please see this guide: https://mswjs.io/docs/recipes/mocking-error-responses`,\n          request.method,\n          request.url,\n          error2.stack ?? error2\n        );\n        messageChannel.postMessage(\"MOCK_RESPONSE\", {\n          status: 500,\n          statusText: \"Request Handler Error\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: error2.name,\n            message: error2.message,\n            stack: error2.stack\n          })\n        });\n      }\n    }\n  };\n};\n\n// src/browser/utils/checkWorkerIntegrity.ts\n\nasync function checkWorkerIntegrity(context) {\n  context.workerChannel.send(\"INTEGRITY_CHECK_REQUEST\");\n  const { payload } = await context.events.once(\"INTEGRITY_CHECK_RESPONSE\");\n  if (payload.checksum !== \"26357c79639bfa20d64c0efca2a87423\") {\n    _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.warn(\n      `The currently registered Service Worker has been generated by a different version of MSW (${payload.packageVersion}) and may not be fully compatible with the installed version.\n\nIt's recommended you update your worker script by running this command:\n\n  \\u2022 npx msw init <PUBLIC_DIR>\n\nYou can also automate this process and make the worker script update automatically upon the library installations. Read more: https://mswjs.io/docs/cli/init.`\n    );\n  }\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.29.0/node_modules/@mswjs/interceptors/lib/browser/chunk-6HYIRFX2.mjs\nvar encoder = new TextEncoder();\nfunction encodeBuffer(text) {\n  return encoder.encode(text);\n}\nfunction decodeBuffer(buffer, encoding) {\n  const decoder = new TextDecoder(encoding);\n  return decoder.decode(buffer);\n}\nfunction toArrayBuffer(array) {\n  return array.buffer.slice(\n    array.byteOffset,\n    array.byteOffset + array.byteLength\n  );\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.29.0/node_modules/@mswjs/interceptors/lib/browser/chunk-OMISYKWR.mjs\nvar IS_PATCHED_MODULE = Symbol(\"isPatchedModule\");\nfunction isPropertyAccessible(obj, key) {\n  try {\n    obj[key];\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar RESPONSE_STATUS_CODES_WITHOUT_BODY = /* @__PURE__ */ new Set([\n  101,\n  103,\n  204,\n  205,\n  304\n]);\nfunction isResponseWithoutBody(status) {\n  return RESPONSE_STATUS_CODES_WITHOUT_BODY.has(status);\n}\nfunction createServerErrorResponse(body) {\n  return new Response(\n    JSON.stringify(\n      body instanceof Error ? {\n        name: body.name,\n        message: body.message,\n        stack: body.stack\n      } : body\n    ),\n    {\n      status: 500,\n      statusText: \"Unhandled Exception\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n  );\n}\nfunction isResponseError(response) {\n  return isPropertyAccessible(response, \"type\") && response.type === \"error\";\n}\n\n// node_modules/.pnpm/@open-draft+logger@0.3.0/node_modules/@open-draft/logger/lib/index.mjs\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar colors_exports = {};\n__export(colors_exports, {\n  blue: () => blue,\n  gray: () => gray,\n  green: () => green,\n  red: () => red,\n  yellow: () => yellow\n});\nfunction yellow(text) {\n  return `\\x1B[33m${text}\\x1B[0m`;\n}\nfunction blue(text) {\n  return `\\x1B[34m${text}\\x1B[0m`;\n}\nfunction gray(text) {\n  return `\\x1B[90m${text}\\x1B[0m`;\n}\nfunction red(text) {\n  return `\\x1B[31m${text}\\x1B[0m`;\n}\nfunction green(text) {\n  return `\\x1B[32m${text}\\x1B[0m`;\n}\nvar IS_NODE = isNodeProcess();\nvar Logger = class {\n  constructor(name) {\n    this.name = name;\n    this.prefix = `[${this.name}]`;\n    const LOGGER_NAME = getVariable(\"DEBUG\");\n    const LOGGER_LEVEL = getVariable(\"LOG_LEVEL\");\n    const isLoggingEnabled = LOGGER_NAME === \"1\" || LOGGER_NAME === \"true\" || typeof LOGGER_NAME !== \"undefined\" && this.name.startsWith(LOGGER_NAME);\n    if (isLoggingEnabled) {\n      this.debug = isDefinedAndNotEquals(LOGGER_LEVEL, \"debug\") ? noop : this.debug;\n      this.info = isDefinedAndNotEquals(LOGGER_LEVEL, \"info\") ? noop : this.info;\n      this.success = isDefinedAndNotEquals(LOGGER_LEVEL, \"success\") ? noop : this.success;\n      this.warning = isDefinedAndNotEquals(LOGGER_LEVEL, \"warning\") ? noop : this.warning;\n      this.error = isDefinedAndNotEquals(LOGGER_LEVEL, \"error\") ? noop : this.error;\n    } else {\n      this.info = noop;\n      this.success = noop;\n      this.warning = noop;\n      this.error = noop;\n      this.only = noop;\n    }\n  }\n  prefix;\n  extend(domain) {\n    return new Logger(`${this.name}:${domain}`);\n  }\n  /**\n   * Print a debug message.\n   * @example\n   * logger.debug('no duplicates found, creating a document...')\n   */\n  debug(message, ...positionals) {\n    this.logEntry({\n      level: \"debug\",\n      message: gray(message),\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"gray\"\n      }\n    });\n  }\n  /**\n   * Print an info message.\n   * @example\n   * logger.info('start parsing...')\n   */\n  info(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"blue\"\n      }\n    });\n    const performance2 = new PerformanceEntry();\n    return (message2, ...positionals2) => {\n      performance2.measure();\n      this.logEntry({\n        level: \"info\",\n        message: `${message2} ${gray(`${performance2.deltaTime}ms`)}`,\n        positionals: positionals2,\n        prefix: this.prefix,\n        colors: {\n          prefix: \"blue\"\n        }\n      });\n    };\n  }\n  /**\n   * Print a success message.\n   * @example\n   * logger.success('successfully created document')\n   */\n  success(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: `\\u2714 ${this.prefix}`,\n      colors: {\n        timestamp: \"green\",\n        prefix: \"green\"\n      }\n    });\n  }\n  /**\n   * Print a warning.\n   * @example\n   * logger.warning('found legacy document format')\n   */\n  warning(message, ...positionals) {\n    this.logEntry({\n      level: \"warning\",\n      message,\n      positionals,\n      prefix: `\\u26A0 ${this.prefix}`,\n      colors: {\n        timestamp: \"yellow\",\n        prefix: \"yellow\"\n      }\n    });\n  }\n  /**\n   * Print an error message.\n   * @example\n   * logger.error('something went wrong')\n   */\n  error(message, ...positionals) {\n    this.logEntry({\n      level: \"error\",\n      message,\n      positionals,\n      prefix: `\\u2716 ${this.prefix}`,\n      colors: {\n        timestamp: \"red\",\n        prefix: \"red\"\n      }\n    });\n  }\n  /**\n   * Execute the given callback only when the logging is enabled.\n   * This is skipped in its entirety and has no runtime cost otherwise.\n   * This executes regardless of the log level.\n   * @example\n   * logger.only(() => {\n   *   logger.info('additional info')\n   * })\n   */\n  only(callback) {\n    callback();\n  }\n  createEntry(level, message) {\n    return {\n      timestamp: /* @__PURE__ */ new Date(),\n      level,\n      message\n    };\n  }\n  logEntry(args) {\n    const {\n      level,\n      message,\n      prefix,\n      colors: customColors,\n      positionals = []\n    } = args;\n    const entry = this.createEntry(level, message);\n    const timestampColor = customColors?.timestamp || \"gray\";\n    const prefixColor = customColors?.prefix || \"gray\";\n    const colorize = {\n      timestamp: colors_exports[timestampColor],\n      prefix: colors_exports[prefixColor]\n    };\n    const write = this.getWriter(level);\n    write(\n      [colorize.timestamp(this.formatTimestamp(entry.timestamp))].concat(prefix != null ? colorize.prefix(prefix) : []).concat(serializeInput(message)).join(\" \"),\n      ...positionals.map(serializeInput)\n    );\n  }\n  formatTimestamp(timestamp) {\n    return `${timestamp.toLocaleTimeString(\n      \"en-GB\"\n    )}:${timestamp.getMilliseconds()}`;\n  }\n  getWriter(level) {\n    switch (level) {\n      case \"debug\":\n      case \"success\":\n      case \"info\": {\n        return log;\n      }\n      case \"warning\": {\n        return warn;\n      }\n      case \"error\": {\n        return error;\n      }\n    }\n  }\n};\nvar PerformanceEntry = class {\n  startTime;\n  endTime;\n  deltaTime;\n  constructor() {\n    this.startTime = performance.now();\n  }\n  measure() {\n    this.endTime = performance.now();\n    const deltaTime = this.endTime - this.startTime;\n    this.deltaTime = deltaTime.toFixed(2);\n  }\n};\nvar noop = () => void 0;\nfunction log(message, ...positionals) {\n  if (IS_NODE) {\n    process.stdout.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.log(message, ...positionals);\n}\nfunction warn(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.warn(message, ...positionals);\n}\nfunction error(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.error(message, ...positionals);\n}\nfunction getVariable(variableName) {\n  if (IS_NODE) {\n    return process.env[variableName];\n  }\n  return globalThis[variableName]?.toString();\n}\nfunction isDefinedAndNotEquals(value, expected) {\n  return value !== void 0 && value !== expected;\n}\nfunction serializeInput(message) {\n  if (typeof message === \"undefined\") {\n    return \"undefined\";\n  }\n  if (message === null) {\n    return \"null\";\n  }\n  if (typeof message === \"string\") {\n    return message;\n  }\n  if (typeof message === \"object\") {\n    return JSON.stringify(message);\n  }\n  return message.toString();\n}\n\n// node_modules/.pnpm/strict-event-emitter@0.5.1/node_modules/strict-event-emitter/lib/index.mjs\nvar MemoryLeakError = class extends Error {\n  constructor(emitter, type, count) {\n    super(\n      `Possible EventEmitter memory leak detected. ${count} ${type.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`\n    );\n    this.emitter = emitter;\n    this.type = type;\n    this.count = count;\n    this.name = \"MaxListenersExceededWarning\";\n  }\n};\nvar _Emitter = class {\n  static listenerCount(emitter, eventName) {\n    return emitter.listenerCount(eventName);\n  }\n  constructor() {\n    this.events = /* @__PURE__ */ new Map();\n    this.maxListeners = _Emitter.defaultMaxListeners;\n    this.hasWarnedAboutPotentialMemoryLeak = false;\n  }\n  _emitInternalEvent(internalEventName, eventName, listener) {\n    this.emit(\n      internalEventName,\n      ...[eventName, listener]\n    );\n  }\n  _getListeners(eventName) {\n    return Array.prototype.concat.apply([], this.events.get(eventName)) || [];\n  }\n  _removeListener(listeners, listener) {\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n    return [];\n  }\n  _wrapOnceListener(eventName, listener) {\n    const onceListener = (...data) => {\n      this.removeListener(eventName, onceListener);\n      return listener.apply(this, data);\n    };\n    Object.defineProperty(onceListener, \"name\", { value: listener.name });\n    return onceListener;\n  }\n  setMaxListeners(maxListeners) {\n    this.maxListeners = maxListeners;\n    return this;\n  }\n  /**\n   * Returns the current max listener value for the `Emitter` which is\n   * either set by `emitter.setMaxListeners(n)` or defaults to\n   * `Emitter.defaultMaxListeners`.\n   */\n  getMaxListeners() {\n    return this.maxListeners;\n  }\n  /**\n   * Returns an array listing the events for which the emitter has registered listeners.\n   * The values in the array will be strings or Symbols.\n   */\n  eventNames() {\n    return Array.from(this.events.keys());\n  }\n  /**\n   * Synchronously calls each of the listeners registered for the event named `eventName`,\n   * in the order they were registered, passing the supplied arguments to each.\n   * Returns `true` if the event has listeners, `false` otherwise.\n   *\n   * @example\n   * const emitter = new Emitter<{ hello: [string] }>()\n   * emitter.emit('hello', 'John')\n   */\n  emit(eventName, ...data) {\n    const listeners = this._getListeners(eventName);\n    listeners.forEach((listener) => {\n      listener.apply(this, data);\n    });\n    return listeners.length > 0;\n  }\n  addListener(eventName, listener) {\n    this._emitInternalEvent(\"newListener\", eventName, listener);\n    const nextListeners = this._getListeners(eventName).concat(listener);\n    this.events.set(eventName, nextListeners);\n    if (this.maxListeners > 0 && this.listenerCount(eventName) > this.maxListeners && !this.hasWarnedAboutPotentialMemoryLeak) {\n      this.hasWarnedAboutPotentialMemoryLeak = true;\n      const memoryLeakWarning = new MemoryLeakError(\n        this,\n        eventName,\n        this.listenerCount(eventName)\n      );\n      console.warn(memoryLeakWarning);\n    }\n    return this;\n  }\n  on(eventName, listener) {\n    return this.addListener(eventName, listener);\n  }\n  once(eventName, listener) {\n    return this.addListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  prependListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      const nextListeners = [listener].concat(listeners);\n      this.events.set(eventName, nextListeners);\n    } else {\n      this.events.set(eventName, listeners.concat(listener));\n    }\n    return this;\n  }\n  prependOnceListener(eventName, listener) {\n    return this.prependListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  removeListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      this._removeListener(listeners, listener);\n      this.events.set(eventName, listeners);\n      this._emitInternalEvent(\"removeListener\", eventName, listener);\n    }\n    return this;\n  }\n  /**\n   * Alias for `emitter.removeListener()`.\n   *\n   * @example\n   * emitter.off('hello', listener)\n   */\n  off(eventName, listener) {\n    return this.removeListener(eventName, listener);\n  }\n  removeAllListeners(eventName) {\n    if (eventName) {\n      this.events.delete(eventName);\n    } else {\n      this.events.clear();\n    }\n    return this;\n  }\n  /**\n   * Returns a copy of the array of listeners for the event named `eventName`.\n   */\n  listeners(eventName) {\n    return Array.from(this._getListeners(eventName));\n  }\n  /**\n   * Returns the number of listeners listening to the event named `eventName`.\n   */\n  listenerCount(eventName) {\n    return this._getListeners(eventName).length;\n  }\n  rawListeners(eventName) {\n    return this.listeners(eventName);\n  }\n};\nvar Emitter = _Emitter;\nEmitter.defaultMaxListeners = 10;\n\n// node_modules/.pnpm/@mswjs+interceptors@0.29.0/node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs\nvar INTERNAL_REQUEST_ID_HEADER_NAME = \"x-interceptors-internal-request-id\";\nfunction getGlobalSymbol(symbol) {\n  return (\n    // @ts-ignore https://github.com/Microsoft/TypeScript/issues/24587\n    globalThis[symbol] || void 0\n  );\n}\nfunction setGlobalSymbol(symbol, value) {\n  globalThis[symbol] = value;\n}\nfunction deleteGlobalSymbol(symbol) {\n  delete globalThis[symbol];\n}\nvar Interceptor = class {\n  constructor(symbol) {\n    this.symbol = symbol;\n    this.readyState = \"INACTIVE\";\n    this.emitter = new Emitter();\n    this.subscriptions = [];\n    this.logger = new Logger(symbol.description);\n    this.emitter.setMaxListeners(0);\n    this.logger.info(\"constructing the interceptor...\");\n  }\n  /**\n   * Determine if this interceptor can be applied\n   * in the current environment.\n   */\n  checkEnvironment() {\n    return true;\n  }\n  /**\n   * Apply this interceptor to the current process.\n   * Returns an already running interceptor instance if it's present.\n   */\n  apply() {\n    const logger = this.logger.extend(\"apply\");\n    logger.info(\"applying the interceptor...\");\n    if (this.readyState === \"APPLIED\") {\n      logger.info(\"intercepted already applied!\");\n      return;\n    }\n    const shouldApply = this.checkEnvironment();\n    if (!shouldApply) {\n      logger.info(\"the interceptor cannot be applied in this environment!\");\n      return;\n    }\n    this.readyState = \"APPLYING\";\n    const runningInstance = this.getInstance();\n    if (runningInstance) {\n      logger.info(\"found a running instance, reusing...\");\n      this.on = (event, listener) => {\n        logger.info('proxying the \"%s\" listener', event);\n        runningInstance.emitter.addListener(event, listener);\n        this.subscriptions.push(() => {\n          runningInstance.emitter.removeListener(event, listener);\n          logger.info('removed proxied \"%s\" listener!', event);\n        });\n        return this;\n      };\n      this.readyState = \"APPLIED\";\n      return;\n    }\n    logger.info(\"no running instance found, setting up a new instance...\");\n    this.setup();\n    this.setInstance();\n    this.readyState = \"APPLIED\";\n  }\n  /**\n   * Setup the module augments and stubs necessary for this interceptor.\n   * This method is not run if there's a running interceptor instance\n   * to prevent instantiating an interceptor multiple times.\n   */\n  setup() {\n  }\n  /**\n   * Listen to the interceptor's public events.\n   */\n  on(event, listener) {\n    const logger = this.logger.extend(\"on\");\n    if (this.readyState === \"DISPOSING\" || this.readyState === \"DISPOSED\") {\n      logger.info(\"cannot listen to events, already disposed!\");\n      return this;\n    }\n    logger.info('adding \"%s\" event listener:', event, listener);\n    this.emitter.on(event, listener);\n    return this;\n  }\n  once(event, listener) {\n    this.emitter.once(event, listener);\n    return this;\n  }\n  off(event, listener) {\n    this.emitter.off(event, listener);\n    return this;\n  }\n  removeAllListeners(event) {\n    this.emitter.removeAllListeners(event);\n    return this;\n  }\n  /**\n   * Disposes of any side-effects this interceptor has introduced.\n   */\n  dispose() {\n    const logger = this.logger.extend(\"dispose\");\n    if (this.readyState === \"DISPOSED\") {\n      logger.info(\"cannot dispose, already disposed!\");\n      return;\n    }\n    logger.info(\"disposing the interceptor...\");\n    this.readyState = \"DISPOSING\";\n    if (!this.getInstance()) {\n      logger.info(\"no interceptors running, skipping dispose...\");\n      return;\n    }\n    this.clearInstance();\n    logger.info(\"global symbol deleted:\", getGlobalSymbol(this.symbol));\n    if (this.subscriptions.length > 0) {\n      logger.info(\"disposing of %d subscriptions...\", this.subscriptions.length);\n      for (const dispose of this.subscriptions) {\n        dispose();\n      }\n      this.subscriptions = [];\n      logger.info(\"disposed of all subscriptions!\", this.subscriptions.length);\n    }\n    this.emitter.removeAllListeners();\n    logger.info(\"destroyed the listener!\");\n    this.readyState = \"DISPOSED\";\n  }\n  getInstance() {\n    var _a;\n    const instance = getGlobalSymbol(this.symbol);\n    this.logger.info(\"retrieved global instance:\", (_a = instance == null ? void 0 : instance.constructor) == null ? void 0 : _a.name);\n    return instance;\n  }\n  setInstance() {\n    setGlobalSymbol(this.symbol, this);\n    this.logger.info(\"set global instance!\", this.symbol.description);\n  }\n  clearInstance() {\n    deleteGlobalSymbol(this.symbol);\n    this.logger.info(\"cleared global instance!\", this.symbol.description);\n  }\n};\nfunction createRequestId() {\n  return Math.random().toString(16).slice(2);\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.29.0/node_modules/@mswjs/interceptors/lib/browser/index.mjs\nvar BatchInterceptor = class extends Interceptor {\n  constructor(options) {\n    BatchInterceptor.symbol = Symbol(options.name);\n    super(BatchInterceptor.symbol);\n    this.interceptors = options.interceptors;\n  }\n  setup() {\n    const logger = this.logger.extend(\"setup\");\n    logger.info(\"applying all %d interceptors...\", this.interceptors.length);\n    for (const interceptor of this.interceptors) {\n      logger.info('applying \"%s\" interceptor...', interceptor.constructor.name);\n      interceptor.apply();\n      logger.info(\"adding interceptor dispose subscription\");\n      this.subscriptions.push(() => interceptor.dispose());\n    }\n  }\n  on(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.on(event, listener);\n    }\n    return this;\n  }\n  once(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.once(event, listener);\n    }\n    return this;\n  }\n  off(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.off(event, listener);\n    }\n    return this;\n  }\n  removeAllListeners(event) {\n    for (const interceptors of this.interceptors) {\n      interceptors.removeAllListeners(event);\n    }\n    return this;\n  }\n};\n\n// src/browser/setupWorker/start/createResponseListener.ts\nfunction createResponseListener(context) {\n  return (_, message) => {\n    const { payload: responseJson } = message;\n    const { requestId } = responseJson;\n    const request = context.requests.get(requestId);\n    context.requests.delete(requestId);\n    if (responseJson.type?.includes(\"opaque\")) {\n      return;\n    }\n    const response = responseJson.status === 0 ? Response.error() : new Response(\n      /**\n       * Responses may be streams here, but when we create a response object\n       * with null-body status codes, like 204, 205, 304 Response will\n       * throw when passed a non-null body, so ensure it's null here\n       * for those codes\n       */\n      isResponseWithoutBody(responseJson.status) ? null : responseJson.body,\n      responseJson\n    );\n    if (!response.url) {\n      Object.defineProperty(response, \"url\", {\n        value: request.url,\n        enumerable: true,\n        writable: false\n      });\n    }\n    context.emitter.emit(\n      responseJson.isMockedResponse ? \"response:mocked\" : \"response:bypass\",\n      {\n        response,\n        request,\n        requestId: responseJson.requestId\n      }\n    );\n  };\n}\n\n// src/browser/setupWorker/start/utils/validateWorkerScope.ts\n\nfunction validateWorkerScope(registration, options) {\n  if (!options?.quiet && !location.href.startsWith(registration.scope)) {\n    _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.warn(\n      `Cannot intercept requests on this page because it's outside of the worker's scope (\"${registration.scope}\"). If you wish to mock API requests on this page, you must resolve this scope issue.\n\n- (Recommended) Register the worker at the root level (\"/\") of your application.\n- Set the \"Service-Worker-Allowed\" response header to allow out-of-scope workers.`\n    );\n  }\n}\n\n// src/browser/setupWorker/start/createStartHandler.ts\nvar createStartHandler = (context) => {\n  return function start(options, customOptions) {\n    const startWorkerInstance = async () => {\n      context.events.removeAllListeners();\n      context.workerChannel.on(\n        \"REQUEST\",\n        createRequestListener(context, options)\n      );\n      context.workerChannel.on(\"RESPONSE\", createResponseListener(context));\n      const instance = await getWorkerInstance(\n        options.serviceWorker.url,\n        options.serviceWorker.options,\n        options.findWorker\n      );\n      const [worker, registration] = instance;\n      if (!worker) {\n        const missingWorkerMessage = customOptions?.findWorker ? _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(\n          `Failed to locate the Service Worker registration using a custom \"findWorker\" predicate.\n\nPlease ensure that the custom predicate properly locates the Service Worker registration at \"%s\".\nMore details: https://mswjs.io/docs/api/setup-worker/start#findworker\n`,\n          options.serviceWorker.url\n        ) : _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(\n          `Failed to locate the Service Worker registration.\n\nThis most likely means that the worker script URL \"%s\" cannot resolve against the actual public hostname (%s). This may happen if your application runs behind a proxy, or has a dynamic hostname.\n\nPlease consider using a custom \"serviceWorker.url\" option to point to the actual worker script location, or a custom \"findWorker\" option to resolve the Service Worker registration manually. More details: https://mswjs.io/docs/api/setup-worker/start`,\n          options.serviceWorker.url,\n          location.host\n        );\n        throw new Error(missingWorkerMessage);\n      }\n      context.worker = worker;\n      context.registration = registration;\n      context.events.addListener(window, \"beforeunload\", () => {\n        if (worker.state !== \"redundant\") {\n          context.workerChannel.send(\"CLIENT_CLOSED\");\n        }\n        window.clearInterval(context.keepAliveInterval);\n      });\n      await checkWorkerIntegrity(context).catch((error2) => {\n        _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.error(\n          \"Error while checking the worker script integrity. Please report this on GitHub (https://github.com/mswjs/msw/issues), including the original error below.\"\n        );\n        console.error(error2);\n      });\n      context.keepAliveInterval = window.setInterval(\n        () => context.workerChannel.send(\"KEEPALIVE_REQUEST\"),\n        5e3\n      );\n      validateWorkerScope(registration, context.startOptions);\n      return registration;\n    };\n    const workerRegistration = startWorkerInstance().then(\n      async (registration) => {\n        const pendingInstance = registration.installing || registration.waiting;\n        if (pendingInstance) {\n          await new Promise((resolve) => {\n            pendingInstance.addEventListener(\"statechange\", () => {\n              if (pendingInstance.state === \"activated\") {\n                return resolve();\n              }\n            });\n          });\n        }\n        await enableMocking(context, options).catch((error2) => {\n          throw new Error(`Failed to enable mocking: ${error2?.message}`);\n        });\n        return registration;\n      }\n    );\n    return workerRegistration;\n  };\n};\n\n// src/browser/setupWorker/stop/createStop.ts\n\n\n// src/browser/setupWorker/stop/utils/printStopMessage.ts\n\nfunction printStopMessage(args = {}) {\n  if (args.quiet) {\n    return;\n  }\n  console.log(\n    `%c${_core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(\"Mocking disabled.\")}`,\n    \"color:orangered;font-weight:bold;\"\n  );\n}\n\n// src/browser/setupWorker/stop/createStop.ts\nvar createStop = (context) => {\n  return function stop() {\n    if (!context.isMockingEnabled) {\n      _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.warn(\n        'Found a redundant \"worker.stop()\" call. Note that stopping the worker while mocking already stopped has no effect. Consider removing this \"worker.stop()\" call.'\n      );\n      return;\n    }\n    context.workerChannel.send(\"MOCK_DEACTIVATE\");\n    context.isMockingEnabled = false;\n    window.clearInterval(context.keepAliveInterval);\n    printStopMessage({ quiet: context.startOptions?.quiet });\n  };\n};\n\n// src/browser/setupWorker/start/utils/prepareStartHandler.ts\n\nvar DEFAULT_START_OPTIONS = {\n  serviceWorker: {\n    url: \"/mockServiceWorker.js\",\n    options: null\n  },\n  quiet: false,\n  waitUntilReady: true,\n  onUnhandledRequest: \"warn\",\n  findWorker(scriptURL, mockServiceWorkerUrl) {\n    return scriptURL === mockServiceWorkerUrl;\n  }\n};\n\n// node_modules/.pnpm/@open-draft+deferred-promise@2.2.0/node_modules/@open-draft/deferred-promise/build/index.mjs\nfunction createDeferredExecutor() {\n  const executor = (resolve, reject) => {\n    executor.state = \"pending\";\n    executor.resolve = (data) => {\n      if (executor.state !== \"pending\") {\n        return;\n      }\n      executor.result = data;\n      const onFulfilled = (value) => {\n        executor.state = \"fulfilled\";\n        return value;\n      };\n      return resolve(\n        data instanceof Promise ? data : Promise.resolve(data).then(onFulfilled)\n      );\n    };\n    executor.reject = (reason) => {\n      if (executor.state !== \"pending\") {\n        return;\n      }\n      queueMicrotask(() => {\n        executor.state = \"rejected\";\n      });\n      return reject(executor.rejectionReason = reason);\n    };\n  };\n  return executor;\n}\nvar DeferredPromise = class extends Promise {\n  #executor;\n  resolve;\n  reject;\n  constructor(executor = null) {\n    const deferredExecutor = createDeferredExecutor();\n    super((originalResolve, originalReject) => {\n      deferredExecutor(originalResolve, originalReject);\n      executor?.(deferredExecutor.resolve, deferredExecutor.reject);\n    });\n    this.#executor = deferredExecutor;\n    this.resolve = this.#executor.resolve;\n    this.reject = this.#executor.reject;\n  }\n  get state() {\n    return this.#executor.state;\n  }\n  get rejectionReason() {\n    return this.#executor.rejectionReason;\n  }\n  then(onFulfilled, onRejected) {\n    return this.#decorate(super.then(onFulfilled, onRejected));\n  }\n  catch(onRejected) {\n    return this.#decorate(super.catch(onRejected));\n  }\n  finally(onfinally) {\n    return this.#decorate(super.finally(onfinally));\n  }\n  #decorate(promise) {\n    return Object.defineProperties(promise, {\n      resolve: { configurable: true, value: this.resolve },\n      reject: { configurable: true, value: this.reject }\n    });\n  }\n};\n\n// node_modules/.pnpm/@mswjs+interceptors@0.29.0/node_modules/@mswjs/interceptors/lib/browser/chunk-OUWBQF3Z.mjs\nvar RequestController = class {\n  constructor(request) {\n    this.request = request;\n    this.responsePromise = new DeferredPromise();\n  }\n  respondWith(response) {\n    invariant(\n      this.responsePromise.state === \"pending\",\n      'Failed to respond to \"%s %s\" request: the \"request\" event has already been responded to.',\n      this.request.method,\n      this.request.url\n    );\n    this.responsePromise.resolve(response);\n  }\n};\nfunction toInteractiveRequest(request) {\n  const requestController = new RequestController(request);\n  Reflect.set(\n    request,\n    \"respondWith\",\n    requestController.respondWith.bind(requestController)\n  );\n  return {\n    interactiveRequest: request,\n    requestController\n  };\n}\nasync function emitAsync(emitter, eventName, ...data) {\n  const listners = emitter.listeners(eventName);\n  if (listners.length === 0) {\n    return;\n  }\n  for (const listener of listners) {\n    await listener.apply(emitter, data);\n  }\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.29.0/node_modules/@mswjs/interceptors/lib/browser/chunk-MAEPOYB6.mjs\nfunction canParseUrl(url) {\n  try {\n    new URL(url);\n    return true;\n  } catch (_error) {\n    return false;\n  }\n}\nvar _FetchInterceptor = class extends Interceptor {\n  constructor() {\n    super(_FetchInterceptor.symbol);\n  }\n  checkEnvironment() {\n    return typeof globalThis !== \"undefined\" && typeof globalThis.fetch !== \"undefined\";\n  }\n  async setup() {\n    const pureFetch = globalThis.fetch;\n    invariant(\n      !pureFetch[IS_PATCHED_MODULE],\n      'Failed to patch the \"fetch\" module: already patched.'\n    );\n    globalThis.fetch = async (input, init) => {\n      var _a;\n      const requestId = createRequestId();\n      const resolvedInput = typeof input === \"string\" && typeof location !== \"undefined\" && !canParseUrl(input) ? new URL(input, location.origin) : input;\n      const request = new Request(resolvedInput, init);\n      this.logger.info(\"[%s] %s\", request.method, request.url);\n      const { interactiveRequest, requestController } = toInteractiveRequest(request);\n      this.logger.info(\n        'emitting the \"request\" event for %d listener(s)...',\n        this.emitter.listenerCount(\"request\")\n      );\n      this.emitter.once(\"request\", ({ requestId: pendingRequestId }) => {\n        if (pendingRequestId !== requestId) {\n          return;\n        }\n        if (requestController.responsePromise.state === \"pending\") {\n          requestController.responsePromise.resolve(void 0);\n        }\n      });\n      this.logger.info(\"awaiting for the mocked response...\");\n      const signal = interactiveRequest.signal;\n      const requestAborted = new DeferredPromise();\n      if (signal) {\n        signal.addEventListener(\n          \"abort\",\n          () => {\n            requestAborted.reject(signal.reason);\n          },\n          { once: true }\n        );\n      }\n      const responsePromise = new DeferredPromise();\n      const respondWith = (response) => {\n        this.logger.info(\"responding with a mock response:\", response);\n        if (this.emitter.listenerCount(\"response\") > 0) {\n          this.logger.info('emitting the \"response\" event...');\n          const responseClone = response.clone();\n          this.emitter.emit(\"response\", {\n            response: responseClone,\n            isMockedResponse: true,\n            request: interactiveRequest,\n            requestId\n          });\n        }\n        Object.defineProperty(response, \"url\", {\n          writable: false,\n          enumerable: true,\n          configurable: false,\n          value: request.url\n        });\n        responsePromise.resolve(response);\n      };\n      const errorWith = (reason) => {\n        responsePromise.reject(reason);\n      };\n      const resolverResult = await until(\n        async () => {\n          const listenersFinished = emitAsync(this.emitter, \"request\", {\n            request: interactiveRequest,\n            requestId\n          });\n          await Promise.race([\n            requestAborted,\n            // Put the listeners invocation Promise in the same race condition\n            // with the request abort Promise because otherwise awaiting the listeners\n            // would always yield some response (or undefined).\n            listenersFinished,\n            requestController.responsePromise\n          ]);\n          this.logger.info(\"all request listeners have been resolved!\");\n          const mockedResponse2 = await requestController.responsePromise;\n          this.logger.info(\"event.respondWith called with:\", mockedResponse2);\n          return mockedResponse2;\n        }\n      );\n      if (requestAborted.state === \"rejected\") {\n        this.logger.info(\n          \"request has been aborted:\",\n          requestAborted.rejectionReason\n        );\n        responsePromise.reject(requestAborted.rejectionReason);\n        return responsePromise;\n      }\n      if (resolverResult.error) {\n        this.logger.info(\n          \"request listerner threw an error:\",\n          resolverResult.error\n        );\n        if (resolverResult.error instanceof Response) {\n          if (isResponseError(resolverResult.error)) {\n            errorWith(createNetworkError(resolverResult.error));\n          } else {\n            respondWith(resolverResult.error);\n          }\n        }\n        if (this.emitter.listenerCount(\"unhandledException\") > 0) {\n          await emitAsync(this.emitter, \"unhandledException\", {\n            error: resolverResult.error,\n            request,\n            requestId,\n            controller: {\n              respondWith,\n              errorWith\n            }\n          });\n          if (responsePromise.state !== \"pending\") {\n            return responsePromise;\n          }\n        }\n        respondWith(createServerErrorResponse(resolverResult.error));\n        return responsePromise;\n      }\n      const mockedResponse = resolverResult.data;\n      if (mockedResponse && !((_a = request.signal) == null ? void 0 : _a.aborted)) {\n        this.logger.info(\"received mocked response:\", mockedResponse);\n        if (isResponseError(mockedResponse)) {\n          this.logger.info(\n            \"received a network error response, rejecting the request promise...\"\n          );\n          errorWith(createNetworkError(mockedResponse));\n        } else {\n          respondWith(mockedResponse);\n        }\n        return responsePromise;\n      }\n      this.logger.info(\"no mocked response received!\");\n      return pureFetch(request).then((response) => {\n        this.logger.info(\"original fetch performed\", response);\n        if (this.emitter.listenerCount(\"response\") > 0) {\n          this.logger.info('emitting the \"response\" event...');\n          const responseClone = response.clone();\n          this.emitter.emit(\"response\", {\n            response: responseClone,\n            isMockedResponse: false,\n            request: interactiveRequest,\n            requestId\n          });\n        }\n        return response;\n      });\n    };\n    Object.defineProperty(globalThis.fetch, IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true\n    });\n    this.subscriptions.push(() => {\n      Object.defineProperty(globalThis.fetch, IS_PATCHED_MODULE, {\n        value: void 0\n      });\n      globalThis.fetch = pureFetch;\n      this.logger.info(\n        'restored native \"globalThis.fetch\"!',\n        globalThis.fetch.name\n      );\n    });\n  }\n};\nvar FetchInterceptor = _FetchInterceptor;\nFetchInterceptor.symbol = Symbol(\"fetch\");\nfunction createNetworkError(cause) {\n  return Object.assign(new TypeError(\"Failed to fetch\"), {\n    cause\n  });\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.29.0/node_modules/@mswjs/interceptors/lib/browser/chunk-732REFPX.mjs\nfunction concatArrayBuffer(left, right) {\n  const result = new Uint8Array(left.byteLength + right.byteLength);\n  result.set(left, 0);\n  result.set(right, left.byteLength);\n  return result;\n}\nvar EventPolyfill = class {\n  constructor(type, options) {\n    this.AT_TARGET = 0;\n    this.BUBBLING_PHASE = 0;\n    this.CAPTURING_PHASE = 0;\n    this.NONE = 0;\n    this.type = \"\";\n    this.srcElement = null;\n    this.currentTarget = null;\n    this.eventPhase = 0;\n    this.isTrusted = true;\n    this.composed = false;\n    this.cancelable = true;\n    this.defaultPrevented = false;\n    this.bubbles = true;\n    this.lengthComputable = true;\n    this.loaded = 0;\n    this.total = 0;\n    this.cancelBubble = false;\n    this.returnValue = true;\n    this.type = type;\n    this.target = (options == null ? void 0 : options.target) || null;\n    this.currentTarget = (options == null ? void 0 : options.currentTarget) || null;\n    this.timeStamp = Date.now();\n  }\n  composedPath() {\n    return [];\n  }\n  initEvent(type, bubbles, cancelable) {\n    this.type = type;\n    this.bubbles = !!bubbles;\n    this.cancelable = !!cancelable;\n  }\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n  stopPropagation() {\n  }\n  stopImmediatePropagation() {\n  }\n};\nvar ProgressEventPolyfill = class extends EventPolyfill {\n  constructor(type, init) {\n    super(type);\n    this.lengthComputable = (init == null ? void 0 : init.lengthComputable) || false;\n    this.composed = (init == null ? void 0 : init.composed) || false;\n    this.loaded = (init == null ? void 0 : init.loaded) || 0;\n    this.total = (init == null ? void 0 : init.total) || 0;\n  }\n};\nvar SUPPORTS_PROGRESS_EVENT = typeof ProgressEvent !== \"undefined\";\nfunction createEvent(target, type, init) {\n  const progressEvents = [\n    \"error\",\n    \"progress\",\n    \"loadstart\",\n    \"loadend\",\n    \"load\",\n    \"timeout\",\n    \"abort\"\n  ];\n  const ProgressEventClass = SUPPORTS_PROGRESS_EVENT ? ProgressEvent : ProgressEventPolyfill;\n  const event = progressEvents.includes(type) ? new ProgressEventClass(type, {\n    lengthComputable: true,\n    loaded: (init == null ? void 0 : init.loaded) || 0,\n    total: (init == null ? void 0 : init.total) || 0\n  }) : new EventPolyfill(type, {\n    target,\n    currentTarget: target\n  });\n  return event;\n}\nfunction findPropertySource(target, propertyName) {\n  if (!(propertyName in target)) {\n    return null;\n  }\n  const hasProperty = Object.prototype.hasOwnProperty.call(target, propertyName);\n  if (hasProperty) {\n    return target;\n  }\n  const prototype = Reflect.getPrototypeOf(target);\n  return prototype ? findPropertySource(prototype, propertyName) : null;\n}\nfunction createProxy(target, options) {\n  const proxy = new Proxy(target, optionsToProxyHandler(options));\n  return proxy;\n}\nfunction optionsToProxyHandler(options) {\n  const { constructorCall, methodCall, getProperty, setProperty } = options;\n  const handler = {};\n  if (typeof constructorCall !== \"undefined\") {\n    handler.construct = function(target, args, newTarget) {\n      const next = Reflect.construct.bind(null, target, args, newTarget);\n      return constructorCall.call(newTarget, args, next);\n    };\n  }\n  handler.set = function(target, propertyName, nextValue) {\n    const next = () => {\n      const propertySource = findPropertySource(target, propertyName) || target;\n      const ownDescriptors = Reflect.getOwnPropertyDescriptor(\n        propertySource,\n        propertyName\n      );\n      if (typeof (ownDescriptors == null ? void 0 : ownDescriptors.set) !== \"undefined\") {\n        ownDescriptors.set.apply(target, [nextValue]);\n        return true;\n      }\n      return Reflect.defineProperty(propertySource, propertyName, {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: nextValue\n      });\n    };\n    if (typeof setProperty !== \"undefined\") {\n      return setProperty.call(target, [propertyName, nextValue], next);\n    }\n    return next();\n  };\n  handler.get = function(target, propertyName, receiver) {\n    const next = () => target[propertyName];\n    const value = typeof getProperty !== \"undefined\" ? getProperty.call(target, [propertyName, receiver], next) : next();\n    if (typeof value === \"function\") {\n      return (...args) => {\n        const next2 = value.bind(target, ...args);\n        if (typeof methodCall !== \"undefined\") {\n          return methodCall.call(target, [propertyName, args], next2);\n        }\n        return next2();\n      };\n    }\n    return value;\n  };\n  return handler;\n}\nfunction isDomParserSupportedType(type) {\n  const supportedTypes = [\n    \"application/xhtml+xml\",\n    \"application/xml\",\n    \"image/svg+xml\",\n    \"text/html\",\n    \"text/xml\"\n  ];\n  return supportedTypes.some((supportedType) => {\n    return type.startsWith(supportedType);\n  });\n}\nfunction parseJson(data) {\n  try {\n    const json = JSON.parse(data);\n    return json;\n  } catch (_) {\n    return null;\n  }\n}\nfunction createResponse(request, body) {\n  const responseBodyOrNull = isResponseWithoutBody(request.status) ? null : body;\n  return new Response(responseBodyOrNull, {\n    status: request.status,\n    statusText: request.statusText,\n    headers: createHeadersFromXMLHttpReqestHeaders(\n      request.getAllResponseHeaders()\n    )\n  });\n}\nfunction createHeadersFromXMLHttpReqestHeaders(headersString) {\n  const headers = new Headers();\n  const lines = headersString.split(/[\\r\\n]+/);\n  for (const line of lines) {\n    if (line.trim() === \"\") {\n      continue;\n    }\n    const [name, ...parts] = line.split(\": \");\n    const value = parts.join(\": \");\n    headers.append(name, value);\n  }\n  return headers;\n}\nvar IS_MOCKED_RESPONSE = Symbol(\"isMockedResponse\");\nvar IS_NODE2 = isNodeProcess();\nvar XMLHttpRequestController = class {\n  constructor(initialRequest, logger) {\n    this.initialRequest = initialRequest;\n    this.logger = logger;\n    this.method = \"GET\";\n    this.url = null;\n    this.events = /* @__PURE__ */ new Map();\n    this.requestId = createRequestId();\n    this.requestHeaders = new Headers();\n    this.responseBuffer = new Uint8Array();\n    this.request = createProxy(initialRequest, {\n      setProperty: ([propertyName, nextValue], invoke) => {\n        switch (propertyName) {\n          case \"ontimeout\": {\n            const eventName = propertyName.slice(\n              2\n            );\n            this.request.addEventListener(eventName, nextValue);\n            return invoke();\n          }\n          default: {\n            return invoke();\n          }\n        }\n      },\n      methodCall: ([methodName, args], invoke) => {\n        var _a;\n        switch (methodName) {\n          case \"open\": {\n            const [method, url] = args;\n            if (typeof url === \"undefined\") {\n              this.method = \"GET\";\n              this.url = toAbsoluteUrl(method);\n            } else {\n              this.method = method;\n              this.url = toAbsoluteUrl(url);\n            }\n            this.logger = this.logger.extend(`${this.method} ${this.url.href}`);\n            this.logger.info(\"open\", this.method, this.url.href);\n            return invoke();\n          }\n          case \"addEventListener\": {\n            const [eventName, listener] = args;\n            this.registerEvent(eventName, listener);\n            this.logger.info(\"addEventListener\", eventName, listener);\n            return invoke();\n          }\n          case \"setRequestHeader\": {\n            const [name, value] = args;\n            this.requestHeaders.set(name, value);\n            this.logger.info(\"setRequestHeader\", name, value);\n            return invoke();\n          }\n          case \"send\": {\n            const [body] = args;\n            if (body != null) {\n              this.requestBody = typeof body === \"string\" ? encodeBuffer(body) : body;\n            }\n            this.request.addEventListener(\"load\", () => {\n              if (typeof this.onResponse !== \"undefined\") {\n                const fetchResponse = createResponse(\n                  this.request,\n                  /**\n                   * The `response` property is the right way to read\n                   * the ambiguous response body, as the request's \"responseType\" may differ.\n                   * @see https://xhr.spec.whatwg.org/#the-response-attribute\n                   */\n                  this.request.response\n                );\n                this.onResponse.call(this, {\n                  response: fetchResponse,\n                  isMockedResponse: IS_MOCKED_RESPONSE in this.request,\n                  request: fetchRequest,\n                  requestId: this.requestId\n                });\n              }\n            });\n            const fetchRequest = this.toFetchApiRequest();\n            const onceRequestSettled = ((_a = this.onRequest) == null ? void 0 : _a.call(this, {\n              request: fetchRequest,\n              requestId: this.requestId\n            })) || Promise.resolve();\n            onceRequestSettled.finally(() => {\n              if (this.request.readyState < this.request.LOADING) {\n                this.logger.info(\n                  \"request callback settled but request has not been handled (readystate %d), performing as-is...\",\n                  this.request.readyState\n                );\n                if (IS_NODE2) {\n                  this.request.setRequestHeader(\n                    INTERNAL_REQUEST_ID_HEADER_NAME,\n                    this.requestId\n                  );\n                }\n                return invoke();\n              }\n            });\n            break;\n          }\n          default: {\n            return invoke();\n          }\n        }\n      }\n    });\n  }\n  registerEvent(eventName, listener) {\n    const prevEvents = this.events.get(eventName) || [];\n    const nextEvents = prevEvents.concat(listener);\n    this.events.set(eventName, nextEvents);\n    this.logger.info('registered event \"%s\"', eventName, listener);\n  }\n  /**\n   * Responds to the current request with the given\n   * Fetch API `Response` instance.\n   */\n  respondWith(response) {\n    this.logger.info(\n      \"responding with a mocked response: %d %s\",\n      response.status,\n      response.statusText\n    );\n    define(this.request, IS_MOCKED_RESPONSE, true);\n    define(this.request, \"status\", response.status);\n    define(this.request, \"statusText\", response.statusText);\n    define(this.request, \"responseURL\", this.url.href);\n    this.request.getResponseHeader = new Proxy(this.request.getResponseHeader, {\n      apply: (_, __, args) => {\n        this.logger.info(\"getResponseHeader\", args[0]);\n        if (this.request.readyState < this.request.HEADERS_RECEIVED) {\n          this.logger.info(\"headers not received yet, returning null\");\n          return null;\n        }\n        const headerValue = response.headers.get(args[0]);\n        this.logger.info(\n          'resolved response header \"%s\" to',\n          args[0],\n          headerValue\n        );\n        return headerValue;\n      }\n    });\n    this.request.getAllResponseHeaders = new Proxy(\n      this.request.getAllResponseHeaders,\n      {\n        apply: () => {\n          this.logger.info(\"getAllResponseHeaders\");\n          if (this.request.readyState < this.request.HEADERS_RECEIVED) {\n            this.logger.info(\"headers not received yet, returning empty string\");\n            return \"\";\n          }\n          const headersList = Array.from(response.headers.entries());\n          const allHeaders = headersList.map(([headerName, headerValue]) => {\n            return `${headerName}: ${headerValue}`;\n          }).join(\"\\r\\n\");\n          this.logger.info(\"resolved all response headers to\", allHeaders);\n          return allHeaders;\n        }\n      }\n    );\n    Object.defineProperties(this.request, {\n      response: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.response\n      },\n      responseText: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.responseText\n      },\n      responseXML: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.responseXML\n      }\n    });\n    const totalResponseBodyLength = response.headers.has(\"Content-Length\") ? Number(response.headers.get(\"Content-Length\")) : (\n      /**\n       * @todo Infer the response body length from the response body.\n       */\n      void 0\n    );\n    this.logger.info(\"calculated response body length\", totalResponseBodyLength);\n    this.trigger(\"loadstart\", {\n      loaded: 0,\n      total: totalResponseBodyLength\n    });\n    this.setReadyState(this.request.HEADERS_RECEIVED);\n    this.setReadyState(this.request.LOADING);\n    const finalizeResponse = () => {\n      this.logger.info(\"finalizing the mocked response...\");\n      this.setReadyState(this.request.DONE);\n      this.trigger(\"load\", {\n        loaded: this.responseBuffer.byteLength,\n        total: totalResponseBodyLength\n      });\n      this.trigger(\"loadend\", {\n        loaded: this.responseBuffer.byteLength,\n        total: totalResponseBodyLength\n      });\n    };\n    if (response.body) {\n      this.logger.info(\"mocked response has body, streaming...\");\n      const reader = response.body.getReader();\n      const readNextResponseBodyChunk = async () => {\n        const { value, done } = await reader.read();\n        if (done) {\n          this.logger.info(\"response body stream done!\");\n          finalizeResponse();\n          return;\n        }\n        if (value) {\n          this.logger.info(\"read response body chunk:\", value);\n          this.responseBuffer = concatArrayBuffer(this.responseBuffer, value);\n          this.trigger(\"progress\", {\n            loaded: this.responseBuffer.byteLength,\n            total: totalResponseBodyLength\n          });\n        }\n        readNextResponseBodyChunk();\n      };\n      readNextResponseBodyChunk();\n    } else {\n      finalizeResponse();\n    }\n  }\n  responseBufferToText() {\n    return decodeBuffer(this.responseBuffer);\n  }\n  get response() {\n    this.logger.info(\n      \"getResponse (responseType: %s)\",\n      this.request.responseType\n    );\n    if (this.request.readyState !== this.request.DONE) {\n      return null;\n    }\n    switch (this.request.responseType) {\n      case \"json\": {\n        const responseJson = parseJson(this.responseBufferToText());\n        this.logger.info(\"resolved response JSON\", responseJson);\n        return responseJson;\n      }\n      case \"arraybuffer\": {\n        const arrayBuffer = toArrayBuffer(this.responseBuffer);\n        this.logger.info(\"resolved response ArrayBuffer\", arrayBuffer);\n        return arrayBuffer;\n      }\n      case \"blob\": {\n        const mimeType = this.request.getResponseHeader(\"Content-Type\") || \"text/plain\";\n        const responseBlob = new Blob([this.responseBufferToText()], {\n          type: mimeType\n        });\n        this.logger.info(\n          \"resolved response Blob (mime type: %s)\",\n          responseBlob,\n          mimeType\n        );\n        return responseBlob;\n      }\n      default: {\n        const responseText = this.responseBufferToText();\n        this.logger.info(\n          'resolving \"%s\" response type as text',\n          this.request.responseType,\n          responseText\n        );\n        return responseText;\n      }\n    }\n  }\n  get responseText() {\n    invariant(\n      this.request.responseType === \"\" || this.request.responseType === \"text\",\n      \"InvalidStateError: The object is in invalid state.\"\n    );\n    if (this.request.readyState !== this.request.LOADING && this.request.readyState !== this.request.DONE) {\n      return \"\";\n    }\n    const responseText = this.responseBufferToText();\n    this.logger.info('getResponseText: \"%s\"', responseText);\n    return responseText;\n  }\n  get responseXML() {\n    invariant(\n      this.request.responseType === \"\" || this.request.responseType === \"document\",\n      \"InvalidStateError: The object is in invalid state.\"\n    );\n    if (this.request.readyState !== this.request.DONE) {\n      return null;\n    }\n    const contentType = this.request.getResponseHeader(\"Content-Type\") || \"\";\n    if (typeof DOMParser === \"undefined\") {\n      console.warn(\n        \"Cannot retrieve XMLHttpRequest response body as XML: DOMParser is not defined. You are likely using an environment that is not browser or does not polyfill browser globals correctly.\"\n      );\n      return null;\n    }\n    if (isDomParserSupportedType(contentType)) {\n      return new DOMParser().parseFromString(\n        this.responseBufferToText(),\n        contentType\n      );\n    }\n    return null;\n  }\n  errorWith(error2) {\n    this.logger.info(\"responding with an error\");\n    this.setReadyState(this.request.DONE);\n    this.trigger(\"error\");\n    this.trigger(\"loadend\");\n  }\n  /**\n   * Transitions this request's `readyState` to the given one.\n   */\n  setReadyState(nextReadyState) {\n    this.logger.info(\n      \"setReadyState: %d -> %d\",\n      this.request.readyState,\n      nextReadyState\n    );\n    if (this.request.readyState === nextReadyState) {\n      this.logger.info(\"ready state identical, skipping transition...\");\n      return;\n    }\n    define(this.request, \"readyState\", nextReadyState);\n    this.logger.info(\"set readyState to: %d\", nextReadyState);\n    if (nextReadyState !== this.request.UNSENT) {\n      this.logger.info('triggerring \"readystatechange\" event...');\n      this.trigger(\"readystatechange\");\n    }\n  }\n  /**\n   * Triggers given event on the `XMLHttpRequest` instance.\n   */\n  trigger(eventName, options) {\n    const callback = this.request[`on${eventName}`];\n    const event = createEvent(this.request, eventName, options);\n    this.logger.info('trigger \"%s\"', eventName, options || \"\");\n    if (typeof callback === \"function\") {\n      this.logger.info('found a direct \"%s\" callback, calling...', eventName);\n      callback.call(this.request, event);\n    }\n    for (const [registeredEventName, listeners] of this.events) {\n      if (registeredEventName === eventName) {\n        this.logger.info(\n          'found %d listener(s) for \"%s\" event, calling...',\n          listeners.length,\n          eventName\n        );\n        listeners.forEach((listener) => listener.call(this.request, event));\n      }\n    }\n  }\n  /**\n   * Converts this `XMLHttpRequest` instance into a Fetch API `Request` instance.\n   */\n  toFetchApiRequest() {\n    this.logger.info(\"converting request to a Fetch API Request...\");\n    const fetchRequest = new Request(this.url.href, {\n      method: this.method,\n      headers: this.requestHeaders,\n      /**\n       * @see https://xhr.spec.whatwg.org/#cross-origin-credentials\n       */\n      credentials: this.request.withCredentials ? \"include\" : \"same-origin\",\n      body: [\"GET\", \"HEAD\"].includes(this.method) ? null : this.requestBody\n    });\n    const proxyHeaders = createProxy(fetchRequest.headers, {\n      methodCall: ([methodName, args], invoke) => {\n        switch (methodName) {\n          case \"append\":\n          case \"set\": {\n            const [headerName, headerValue] = args;\n            this.request.setRequestHeader(headerName, headerValue);\n            break;\n          }\n          case \"delete\": {\n            const [headerName] = args;\n            console.warn(\n              `XMLHttpRequest: Cannot remove a \"${headerName}\" header from the Fetch API representation of the \"${fetchRequest.method} ${fetchRequest.url}\" request. XMLHttpRequest headers cannot be removed.`\n            );\n            break;\n          }\n        }\n        return invoke();\n      }\n    });\n    define(fetchRequest, \"headers\", proxyHeaders);\n    this.logger.info(\"converted request to a Fetch API Request!\", fetchRequest);\n    return fetchRequest;\n  }\n};\nfunction toAbsoluteUrl(url) {\n  if (typeof location === \"undefined\") {\n    return new URL(url);\n  }\n  return new URL(url.toString(), location.href);\n}\nfunction define(target, property, value) {\n  Reflect.defineProperty(target, property, {\n    // Ensure writable properties to allow redefining readonly properties.\n    writable: true,\n    enumerable: true,\n    value\n  });\n}\nfunction createXMLHttpRequestProxy({\n  emitter,\n  logger\n}) {\n  const XMLHttpRequestProxy = new Proxy(globalThis.XMLHttpRequest, {\n    construct(target, args, newTarget) {\n      logger.info(\"constructed new XMLHttpRequest\");\n      const originalRequest = Reflect.construct(\n        target,\n        args,\n        newTarget\n      );\n      const prototypeDescriptors = Object.getOwnPropertyDescriptors(\n        target.prototype\n      );\n      for (const propertyName in prototypeDescriptors) {\n        Reflect.defineProperty(\n          originalRequest,\n          propertyName,\n          prototypeDescriptors[propertyName]\n        );\n      }\n      const xhrRequestController = new XMLHttpRequestController(\n        originalRequest,\n        logger\n      );\n      xhrRequestController.onRequest = async function({ request, requestId }) {\n        const { interactiveRequest, requestController } = toInteractiveRequest(request);\n        this.logger.info(\"awaiting mocked response...\");\n        emitter.once(\"request\", ({ requestId: pendingRequestId }) => {\n          if (pendingRequestId !== requestId) {\n            return;\n          }\n          if (requestController.responsePromise.state === \"pending\") {\n            requestController.respondWith(void 0);\n          }\n        });\n        const resolverResult = await until(async () => {\n          this.logger.info(\n            'emitting the \"request\" event for %s listener(s)...',\n            emitter.listenerCount(\"request\")\n          );\n          await emitAsync(emitter, \"request\", {\n            request: interactiveRequest,\n            requestId\n          });\n          this.logger.info('all \"request\" listeners settled!');\n          const mockedResponse2 = await requestController.responsePromise;\n          this.logger.info(\"event.respondWith called with:\", mockedResponse2);\n          return mockedResponse2;\n        });\n        if (resolverResult.error) {\n          this.logger.info(\n            \"request listener threw an exception, aborting request...\",\n            resolverResult.error\n          );\n          if (resolverResult.error instanceof Response) {\n            if (isResponseError(resolverResult.error)) {\n              xhrRequestController.errorWith(new TypeError(\"Network error\"));\n            } else {\n              this.respondWith(resolverResult.error);\n            }\n            return;\n          }\n          if (emitter.listenerCount(\"unhandledException\") > 0) {\n            await emitAsync(emitter, \"unhandledException\", {\n              error: resolverResult.error,\n              request,\n              requestId,\n              controller: {\n                respondWith: xhrRequestController.respondWith.bind(xhrRequestController),\n                errorWith: xhrRequestController.errorWith.bind(xhrRequestController)\n              }\n            });\n            if (originalRequest.readyState > XMLHttpRequest.OPENED) {\n              return;\n            }\n          }\n          xhrRequestController.respondWith(\n            createServerErrorResponse(resolverResult.error)\n          );\n          return;\n        }\n        const mockedResponse = resolverResult.data;\n        if (typeof mockedResponse !== \"undefined\") {\n          this.logger.info(\n            \"received mocked response: %d %s\",\n            mockedResponse.status,\n            mockedResponse.statusText\n          );\n          if (isResponseError(mockedResponse)) {\n            this.logger.info(\n              \"received a network error response, rejecting the request promise...\"\n            );\n            xhrRequestController.errorWith(new TypeError(\"Network error\"));\n            return;\n          }\n          return xhrRequestController.respondWith(mockedResponse);\n        }\n        this.logger.info(\n          \"no mocked response received, performing request as-is...\"\n        );\n      };\n      xhrRequestController.onResponse = async function({\n        response,\n        isMockedResponse,\n        request,\n        requestId\n      }) {\n        this.logger.info(\n          'emitting the \"response\" event for %s listener(s)...',\n          emitter.listenerCount(\"response\")\n        );\n        emitter.emit(\"response\", {\n          response,\n          isMockedResponse,\n          request,\n          requestId\n        });\n      };\n      return xhrRequestController.request;\n    }\n  });\n  return XMLHttpRequestProxy;\n}\nvar _XMLHttpRequestInterceptor = class extends Interceptor {\n  constructor() {\n    super(_XMLHttpRequestInterceptor.interceptorSymbol);\n  }\n  checkEnvironment() {\n    return typeof globalThis.XMLHttpRequest !== \"undefined\";\n  }\n  setup() {\n    const logger = this.logger.extend(\"setup\");\n    logger.info('patching \"XMLHttpRequest\" module...');\n    const PureXMLHttpRequest = globalThis.XMLHttpRequest;\n    invariant(\n      !PureXMLHttpRequest[IS_PATCHED_MODULE],\n      'Failed to patch the \"XMLHttpRequest\" module: already patched.'\n    );\n    globalThis.XMLHttpRequest = createXMLHttpRequestProxy({\n      emitter: this.emitter,\n      logger: this.logger\n    });\n    logger.info(\n      'native \"XMLHttpRequest\" module patched!',\n      globalThis.XMLHttpRequest.name\n    );\n    Object.defineProperty(globalThis.XMLHttpRequest, IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true\n    });\n    this.subscriptions.push(() => {\n      Object.defineProperty(globalThis.XMLHttpRequest, IS_PATCHED_MODULE, {\n        value: void 0\n      });\n      globalThis.XMLHttpRequest = PureXMLHttpRequest;\n      logger.info(\n        'native \"XMLHttpRequest\" module restored!',\n        globalThis.XMLHttpRequest.name\n      );\n    });\n  }\n};\nvar XMLHttpRequestInterceptor = _XMLHttpRequestInterceptor;\nXMLHttpRequestInterceptor.interceptorSymbol = Symbol(\"xhr\");\n\n// src/browser/setupWorker/start/createFallbackRequestListener.ts\n\nfunction createFallbackRequestListener(context, options) {\n  const interceptor = new BatchInterceptor({\n    name: \"fallback\",\n    interceptors: [new FetchInterceptor(), new XMLHttpRequestInterceptor()]\n  });\n  interceptor.on(\"request\", async ({ request, requestId }) => {\n    const requestCloneForLogs = request.clone();\n    const response = await (0,_core_utils_handleRequest_mjs__WEBPACK_IMPORTED_MODULE_2__.handleRequest)(\n      request,\n      requestId,\n      context.getRequestHandlers(),\n      options,\n      context.emitter,\n      {\n        onMockedResponse(_, { handler, parsedResult }) {\n          if (!options.quiet) {\n            context.emitter.once(\"response:mocked\", ({ response: response2 }) => {\n              handler.log({\n                request: requestCloneForLogs,\n                response: response2,\n                parsedResult\n              });\n            });\n          }\n        }\n      }\n    );\n    if (response) {\n      request.respondWith(response);\n    }\n  });\n  interceptor.on(\n    \"response\",\n    ({ response, isMockedResponse, request, requestId }) => {\n      context.emitter.emit(\n        isMockedResponse ? \"response:mocked\" : \"response:bypass\",\n        {\n          response,\n          request,\n          requestId\n        }\n      );\n    }\n  );\n  interceptor.apply();\n  return interceptor;\n}\n\n// src/browser/setupWorker/start/createFallbackStart.ts\nfunction createFallbackStart(context) {\n  return async function start(options) {\n    context.fallbackInterceptor = createFallbackRequestListener(\n      context,\n      options\n    );\n    printStartMessage({\n      message: \"Mocking enabled (fallback mode).\",\n      quiet: options.quiet\n    });\n    return void 0;\n  };\n}\n\n// src/browser/setupWorker/stop/createFallbackStop.ts\nfunction createFallbackStop(context) {\n  return function stop() {\n    context.fallbackInterceptor?.dispose();\n    printStopMessage({ quiet: context.startOptions?.quiet });\n  };\n}\n\n// src/browser/setupWorker/setupWorker.ts\n\n\n\n\n// src/browser/utils/supportsReadableStreamTransfer.ts\nfunction supportsReadableStreamTransfer() {\n  try {\n    const stream = new ReadableStream({\n      start: (controller) => controller.close()\n    });\n    const message = new MessageChannel();\n    message.port1.postMessage(stream, [stream]);\n    return true;\n  } catch (error2) {\n    return false;\n  }\n}\n\n// src/browser/setupWorker/setupWorker.ts\nvar SetupWorkerApi = class extends _core_SetupApi_mjs__WEBPACK_IMPORTED_MODULE_4__.SetupApi {\n  context;\n  startHandler = null;\n  stopHandler = null;\n  listeners;\n  constructor(...handlers) {\n    super(...handlers);\n    invariant(\n      !isNodeProcess(),\n      _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(\n        \"Failed to execute `setupWorker` in a non-browser environment. Consider using `setupServer` for Node.js environment instead.\"\n      )\n    );\n    this.listeners = [];\n    this.context = this.createWorkerContext();\n  }\n  createWorkerContext() {\n    const context = {\n      // Mocking is not considered enabled until the worker\n      // signals back the successful activation event.\n      isMockingEnabled: false,\n      startOptions: null,\n      worker: null,\n      getRequestHandlers: () => {\n        return this.handlersController.currentHandlers();\n      },\n      registration: null,\n      requests: /* @__PURE__ */ new Map(),\n      emitter: this.emitter,\n      workerChannel: {\n        on: (eventType, callback) => {\n          this.context.events.addListener(navigator.serviceWorker, \"message\", (event) => {\n            if (event.source !== this.context.worker) {\n              return;\n            }\n            const message = event.data;\n            if (!message) {\n              return;\n            }\n            if (message.type === eventType) {\n              callback(event, message);\n            }\n          });\n        },\n        send: (type) => {\n          this.context.worker?.postMessage(type);\n        }\n      },\n      events: {\n        addListener: (target, eventType, callback) => {\n          target.addEventListener(eventType, callback);\n          this.listeners.push({\n            eventType,\n            target,\n            callback\n          });\n          return () => {\n            target.removeEventListener(eventType, callback);\n          };\n        },\n        removeAllListeners: () => {\n          for (const { target, eventType, callback } of this.listeners) {\n            target.removeEventListener(eventType, callback);\n          }\n          this.listeners = [];\n        },\n        once: (eventType) => {\n          const bindings = [];\n          return new Promise((resolve, reject) => {\n            const handleIncomingMessage = (event) => {\n              try {\n                const message = event.data;\n                if (message.type === eventType) {\n                  resolve(message);\n                }\n              } catch (error2) {\n                reject(error2);\n              }\n            };\n            bindings.push(\n              this.context.events.addListener(\n                navigator.serviceWorker,\n                \"message\",\n                handleIncomingMessage\n              ),\n              this.context.events.addListener(\n                navigator.serviceWorker,\n                \"messageerror\",\n                reject\n              )\n            );\n          }).finally(() => {\n            bindings.forEach((unbind) => unbind());\n          });\n        }\n      },\n      supports: {\n        serviceWorkerApi: !(\"serviceWorker\" in navigator) || location.protocol === \"file:\",\n        readableStreamTransfer: supportsReadableStreamTransfer()\n      }\n    };\n    this.startHandler = context.supports.serviceWorkerApi ? createFallbackStart(context) : createStartHandler(context);\n    this.stopHandler = context.supports.serviceWorkerApi ? createFallbackStop(context) : createStop(context);\n    return context;\n  }\n  async start(options = {}) {\n    if (options.waitUntilReady === true) {\n      _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.warn(\n        'The \"waitUntilReady\" option has been deprecated. Please remove it from this \"worker.start()\" call. Follow the recommended Browser integration (https://mswjs.io/docs/integrations/browser) to eliminate any race conditions between the Service Worker registration and any requests made by your application on initial render.'\n      );\n    }\n    this.context.startOptions = (0,_core_utils_internal_mergeRight_mjs__WEBPACK_IMPORTED_MODULE_5__.mergeRight)(\n      DEFAULT_START_OPTIONS,\n      options\n    );\n    return await this.startHandler(this.context.startOptions, options);\n  }\n  stop() {\n    super.dispose();\n    this.context.events.removeAllListeners();\n    this.context.emitter.removeAllListeners();\n    this.stopHandler();\n  }\n};\nfunction setupWorker(...handlers) {\n  return new SetupWorkerApi(...handlers);\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9icm93c2VyL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsNkNBQTZDO0FBQ3pFO0FBQ0EsaURBQWlELElBQUk7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCLGlCQUFpQixPQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLGNBQWMsT0FBTyxhQUFhLE9BQU87QUFDekM7QUFDQTtBQUNBOztBQUVBO0FBQzRFOztBQUU1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGFBQWE7QUFDYixJQUFJO0FBQ0osYUFBYTtBQUNiO0FBQ0E7O0FBRUE7QUFDK0Q7O0FBRS9EO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQSxnREFBZ0Q7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1RUFBUSxrRUFBa0UsY0FBYyxtQkFBbUIsa0JBQWtCOztBQUVySTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sdUVBQVE7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUM0RTs7QUFFNUU7QUFDNEU7QUFDNUUsb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHVFQUFTLHdCQUF3QjtBQUMxQyxxQkFBcUIsaUJBQWlCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSx1RUFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixtQkFBbUIsSUFBSSxVQUFVO0FBQzdEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNxRTtBQUNMO0FBQ1k7QUFDVjtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksNkVBQWM7QUFDbEI7QUFDQTtBQUNBLFlBQVksNEVBQWE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCw2Q0FBNkMsdUJBQXVCO0FBQ3BFO0FBQ0E7QUFDQSxpQ0FBaUMsOEVBQWM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxRQUFRLHVFQUFTO0FBQ2pCOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUM0RTtBQUM1RTtBQUNBO0FBQ0EsVUFBVSxVQUFVO0FBQ3BCO0FBQ0EsSUFBSSx1RUFBUztBQUNiLG1HQUFtRyx1QkFBdUI7O0FBRTFIOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixrQ0FBa0M7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLG9CQUFvQixLQUFLO0FBQ3pCO0FBQ0E7QUFDQSxvQkFBb0IsS0FBSztBQUN6QjtBQUNBO0FBQ0Esb0JBQW9CLEtBQUs7QUFDekI7QUFDQTtBQUNBLG9CQUFvQixLQUFLO0FBQ3pCO0FBQ0E7QUFDQSxvQkFBb0IsS0FBSztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFVBQVU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixVQUFVLEdBQUcsT0FBTztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsVUFBVSxFQUFFLFFBQVEsdUJBQXVCLEtBQUs7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsWUFBWTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFlBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixZQUFZO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQSxNQUFNLEdBQUcsNEJBQTRCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksT0FBTztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksT0FBTztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksT0FBTztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsT0FBTyxFQUFFLGlCQUFpQjtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxzQkFBc0I7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGlCQUFpQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVksd0JBQXdCO0FBQ3BDLFlBQVksWUFBWTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDNEU7QUFDNUU7QUFDQTtBQUNBLElBQUksdUVBQVM7QUFDYiw2RkFBNkYsbUJBQW1COztBQUVoSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUsdUVBQVM7QUFDMUU7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHVFQUFTO0FBQ3JCOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsUUFBUSx1RUFBUztBQUNqQjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsV0FBVztBQUNYO0FBQ0E7QUFDQSx1REFBdUQsZ0JBQWdCO0FBQ3ZFLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDNEU7O0FBRTVFO0FBQzRFO0FBQzVFLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsdUVBQVMsb0NBQW9DO0FBQ3RELHFCQUFxQixpQkFBaUI7QUFDdEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sdUVBQVM7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixvQ0FBb0M7QUFDM0Q7QUFDQTs7QUFFQTtBQUNtRTtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHlDQUF5QztBQUMxRCxnQkFBZ0I7QUFDaEIsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsd0NBQXdDO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLDZCQUE2QjtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLHdEQUF3RDtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELGFBQWEsRUFBRSxjQUFjO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFdBQVcsSUFBSSxZQUFZO0FBQ2pELFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsY0FBYztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxVQUFVO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsV0FBVyxxREFBcUQscUJBQXFCLEVBQUUsaUJBQWlCO0FBQzFKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELG9CQUFvQjtBQUM1RSxnQkFBZ0Isd0NBQXdDO0FBQ3hEO0FBQ0EsbUNBQW1DLDZCQUE2QjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ2tGO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILHFDQUFxQyxvQkFBb0I7QUFDekQ7QUFDQSwyQkFBMkIsNEVBQWM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHVCQUF1QjtBQUNyRDtBQUNBLHVEQUF1RCxxQkFBcUI7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxPQUFPLGdEQUFnRDtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsb0NBQW9DO0FBQzNEO0FBQ0E7O0FBRUE7QUFDNkU7QUFDN0I7QUFDa0M7O0FBRWxGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1DQUFtQyx3REFBUTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSx1RUFBVTtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSx1QkFBdUIsOEJBQThCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsV0FBVztBQUNYO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBLE1BQU0sdUVBQVU7QUFDaEI7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLCtFQUFXO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL21zd0AyLjMuMV90eXBlc2NyaXB0QDUuNS4yL25vZGVfbW9kdWxlcy9tc3cvbGliL2Jyb3dzZXIvaW5kZXgubWpzPzE4OGMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbm9kZV9tb2R1bGVzLy5wbnBtL291dHZhcmlhbnRAMS40LjIvbm9kZV9tb2R1bGVzL291dHZhcmlhbnQvbGliL2luZGV4Lm1qc1xudmFyIFBPU0lUSU9OQUxTX0VYUCA9IC8oJT8pKCUoW3NkaWpvXSkpL2c7XG5mdW5jdGlvbiBzZXJpYWxpemVQb3NpdGlvbmFsKHBvc2l0aW9uYWwsIGZsYWcpIHtcbiAgc3dpdGNoIChmbGFnKSB7XG4gICAgY2FzZSBcInNcIjpcbiAgICAgIHJldHVybiBwb3NpdGlvbmFsO1xuICAgIGNhc2UgXCJkXCI6XG4gICAgY2FzZSBcImlcIjpcbiAgICAgIHJldHVybiBOdW1iZXIocG9zaXRpb25hbCk7XG4gICAgY2FzZSBcImpcIjpcbiAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShwb3NpdGlvbmFsKTtcbiAgICBjYXNlIFwib1wiOiB7XG4gICAgICBpZiAodHlwZW9mIHBvc2l0aW9uYWwgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuIHBvc2l0aW9uYWw7XG4gICAgICB9XG4gICAgICBjb25zdCBqc29uID0gSlNPTi5zdHJpbmdpZnkocG9zaXRpb25hbCk7XG4gICAgICBpZiAoanNvbiA9PT0gXCJ7fVwiIHx8IGpzb24gPT09IFwiW11cIiB8fCAvXlxcW29iamVjdCAuKz9cXF0kLy50ZXN0KGpzb24pKSB7XG4gICAgICAgIHJldHVybiBwb3NpdGlvbmFsO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBmb3JtYXQobWVzc2FnZSwgLi4ucG9zaXRpb25hbHMpIHtcbiAgaWYgKHBvc2l0aW9uYWxzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBtZXNzYWdlO1xuICB9XG4gIGxldCBwb3NpdGlvbmFsSW5kZXggPSAwO1xuICBsZXQgZm9ybWF0dGVkTWVzc2FnZSA9IG1lc3NhZ2UucmVwbGFjZShcbiAgICBQT1NJVElPTkFMU19FWFAsXG4gICAgKG1hdGNoLCBpc0VzY2FwZWQsIF8sIGZsYWcpID0+IHtcbiAgICAgIGNvbnN0IHBvc2l0aW9uYWwgPSBwb3NpdGlvbmFsc1twb3NpdGlvbmFsSW5kZXhdO1xuICAgICAgY29uc3QgdmFsdWUgPSBzZXJpYWxpemVQb3NpdGlvbmFsKHBvc2l0aW9uYWwsIGZsYWcpO1xuICAgICAgaWYgKCFpc0VzY2FwZWQpIHtcbiAgICAgICAgcG9zaXRpb25hbEluZGV4Kys7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBtYXRjaDtcbiAgICB9XG4gICk7XG4gIGlmIChwb3NpdGlvbmFsSW5kZXggPCBwb3NpdGlvbmFscy5sZW5ndGgpIHtcbiAgICBmb3JtYXR0ZWRNZXNzYWdlICs9IGAgJHtwb3NpdGlvbmFscy5zbGljZShwb3NpdGlvbmFsSW5kZXgpLmpvaW4oXCIgXCIpfWA7XG4gIH1cbiAgZm9ybWF0dGVkTWVzc2FnZSA9IGZvcm1hdHRlZE1lc3NhZ2UucmVwbGFjZSgvJXsyLDJ9L2csIFwiJVwiKTtcbiAgcmV0dXJuIGZvcm1hdHRlZE1lc3NhZ2U7XG59XG52YXIgU1RBQ0tfRlJBTUVTX1RPX0lHTk9SRSA9IDI7XG5mdW5jdGlvbiBjbGVhbkVycm9yU3RhY2soZXJyb3IyKSB7XG4gIGlmICghZXJyb3IyLnN0YWNrKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IG5leHRTdGFjayA9IGVycm9yMi5zdGFjay5zcGxpdChcIlxcblwiKTtcbiAgbmV4dFN0YWNrLnNwbGljZSgxLCBTVEFDS19GUkFNRVNfVE9fSUdOT1JFKTtcbiAgZXJyb3IyLnN0YWNrID0gbmV4dFN0YWNrLmpvaW4oXCJcXG5cIik7XG59XG52YXIgSW52YXJpYW50RXJyb3IgPSBjbGFzcyBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IobWVzc2FnZSwgLi4ucG9zaXRpb25hbHMpIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIHRoaXMubmFtZSA9IFwiSW52YXJpYW50IFZpb2xhdGlvblwiO1xuICAgIHRoaXMubWVzc2FnZSA9IGZvcm1hdChtZXNzYWdlLCAuLi5wb3NpdGlvbmFscyk7XG4gICAgY2xlYW5FcnJvclN0YWNrKHRoaXMpO1xuICB9XG59O1xudmFyIGludmFyaWFudCA9IChwcmVkaWNhdGUsIG1lc3NhZ2UsIC4uLnBvc2l0aW9uYWxzKSA9PiB7XG4gIGlmICghcHJlZGljYXRlKSB7XG4gICAgdGhyb3cgbmV3IEludmFyaWFudEVycm9yKG1lc3NhZ2UsIC4uLnBvc2l0aW9uYWxzKTtcbiAgfVxufTtcbmludmFyaWFudC5hcyA9IChFcnJvckNvbnN0cnVjdG9yLCBwcmVkaWNhdGUsIG1lc3NhZ2UsIC4uLnBvc2l0aW9uYWxzKSA9PiB7XG4gIGlmICghcHJlZGljYXRlKSB7XG4gICAgY29uc3QgZm9ybWF0TWVzc2FnZSA9IHBvc2l0aW9uYWxzLmxlbmd0aCA9PT0gMCA/IG1lc3NhZ2UgOiBmb3JtYXQobWVzc2FnZSwgcG9zaXRpb25hbHMpO1xuICAgIGxldCBlcnJvcjI7XG4gICAgdHJ5IHtcbiAgICAgIGVycm9yMiA9IFJlZmxlY3QuY29uc3RydWN0KEVycm9yQ29uc3RydWN0b3IsIFtmb3JtYXRNZXNzYWdlXSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBlcnJvcjIgPSBFcnJvckNvbnN0cnVjdG9yKGZvcm1hdE1lc3NhZ2UpO1xuICAgIH1cbiAgICB0aHJvdyBlcnJvcjI7XG4gIH1cbn07XG5cbi8vIG5vZGVfbW9kdWxlcy8ucG5wbS9pcy1ub2RlLXByb2Nlc3NAMS4yLjAvbm9kZV9tb2R1bGVzL2lzLW5vZGUtcHJvY2Vzcy9saWIvaW5kZXgubWpzXG5mdW5jdGlvbiBpc05vZGVQcm9jZXNzKCkge1xuICBpZiAodHlwZW9mIG5hdmlnYXRvciAhPT0gXCJ1bmRlZmluZWRcIiAmJiBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gXCJSZWFjdE5hdGl2ZVwiKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgaWYgKHR5cGVvZiBwcm9jZXNzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY29uc3QgdHlwZSA9IHByb2Nlc3MudHlwZTtcbiAgICBpZiAodHlwZSA9PT0gXCJyZW5kZXJlclwiIHx8IHR5cGUgPT09IFwid29ya2VyXCIpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuICEhKHByb2Nlc3MudmVyc2lvbnMgJiYgcHJvY2Vzcy52ZXJzaW9ucy5ub2RlKTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbi8vIHNyYy9icm93c2VyL3NldHVwV29ya2VyL3N0YXJ0L2NyZWF0ZVN0YXJ0SGFuZGxlci50c1xuaW1wb3J0IHsgZGV2VXRpbHMgYXMgZGV2VXRpbHM3IH0gZnJvbSAnLi4vY29yZS91dGlscy9pbnRlcm5hbC9kZXZVdGlscy5tanMnO1xuXG4vLyBub2RlX21vZHVsZXMvLnBucG0vQG9wZW4tZHJhZnQrdW50aWxAMi4xLjAvbm9kZV9tb2R1bGVzL0BvcGVuLWRyYWZ0L3VudGlsL2xpYi9pbmRleC5tanNcbnZhciB1bnRpbCA9IGFzeW5jIChwcm9taXNlKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHByb21pc2UoKS5jYXRjaCgoZXJyb3IyKSA9PiB7XG4gICAgICB0aHJvdyBlcnJvcjI7XG4gICAgfSk7XG4gICAgcmV0dXJuIHsgZXJyb3I6IG51bGwsIGRhdGEgfTtcbiAgfSBjYXRjaCAoZXJyb3IyKSB7XG4gICAgcmV0dXJuIHsgZXJyb3I6IGVycm9yMiwgZGF0YTogbnVsbCB9O1xuICB9XG59O1xuXG4vLyBzcmMvYnJvd3Nlci9zZXR1cFdvcmtlci9zdGFydC91dGlscy9nZXRXb3JrZXJJbnN0YW5jZS50c1xuaW1wb3J0IHsgZGV2VXRpbHMgfSBmcm9tICcuLi9jb3JlL3V0aWxzL2ludGVybmFsL2RldlV0aWxzLm1qcyc7XG5cbi8vIHNyYy9icm93c2VyL3V0aWxzL2dldEFic29sdXRlV29ya2VyVXJsLnRzXG5mdW5jdGlvbiBnZXRBYnNvbHV0ZVdvcmtlclVybCh3b3JrZXJVcmwpIHtcbiAgcmV0dXJuIG5ldyBVUkwod29ya2VyVXJsLCBsb2NhdGlvbi5ocmVmKS5ocmVmO1xufVxuXG4vLyBzcmMvYnJvd3Nlci9zZXR1cFdvcmtlci9zdGFydC91dGlscy9nZXRXb3JrZXJCeVJlZ2lzdHJhdGlvbi50c1xuZnVuY3Rpb24gZ2V0V29ya2VyQnlSZWdpc3RyYXRpb24ocmVnaXN0cmF0aW9uLCBhYnNvbHV0ZVdvcmtlclVybCwgZmluZFdvcmtlcikge1xuICBjb25zdCBhbGxTdGF0ZXMgPSBbXG4gICAgcmVnaXN0cmF0aW9uLmFjdGl2ZSxcbiAgICByZWdpc3RyYXRpb24uaW5zdGFsbGluZyxcbiAgICByZWdpc3RyYXRpb24ud2FpdGluZ1xuICBdO1xuICBjb25zdCByZWxldmFudFN0YXRlcyA9IGFsbFN0YXRlcy5maWx0ZXIoKHN0YXRlKSA9PiB7XG4gICAgcmV0dXJuIHN0YXRlICE9IG51bGw7XG4gIH0pO1xuICBjb25zdCB3b3JrZXIgPSByZWxldmFudFN0YXRlcy5maW5kKCh3b3JrZXIyKSA9PiB7XG4gICAgcmV0dXJuIGZpbmRXb3JrZXIod29ya2VyMi5zY3JpcHRVUkwsIGFic29sdXRlV29ya2VyVXJsKTtcbiAgfSk7XG4gIHJldHVybiB3b3JrZXIgfHwgbnVsbDtcbn1cblxuLy8gc3JjL2Jyb3dzZXIvc2V0dXBXb3JrZXIvc3RhcnQvdXRpbHMvZ2V0V29ya2VySW5zdGFuY2UudHNcbnZhciBnZXRXb3JrZXJJbnN0YW5jZSA9IGFzeW5jICh1cmwsIG9wdGlvbnMgPSB7fSwgZmluZFdvcmtlcikgPT4ge1xuICBjb25zdCBhYnNvbHV0ZVdvcmtlclVybCA9IGdldEFic29sdXRlV29ya2VyVXJsKHVybCk7XG4gIGNvbnN0IG1vY2tSZWdpc3RyYXRpb25zID0gYXdhaXQgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuZ2V0UmVnaXN0cmF0aW9ucygpLnRoZW4oXG4gICAgKHJlZ2lzdHJhdGlvbnMpID0+IHJlZ2lzdHJhdGlvbnMuZmlsdGVyKFxuICAgICAgKHJlZ2lzdHJhdGlvbikgPT4gZ2V0V29ya2VyQnlSZWdpc3RyYXRpb24ocmVnaXN0cmF0aW9uLCBhYnNvbHV0ZVdvcmtlclVybCwgZmluZFdvcmtlcilcbiAgICApXG4gICk7XG4gIGlmICghbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuY29udHJvbGxlciAmJiBtb2NrUmVnaXN0cmF0aW9ucy5sZW5ndGggPiAwKSB7XG4gICAgbG9jYXRpb24ucmVsb2FkKCk7XG4gIH1cbiAgY29uc3QgW2V4aXN0aW5nUmVnaXN0cmF0aW9uXSA9IG1vY2tSZWdpc3RyYXRpb25zO1xuICBpZiAoZXhpc3RpbmdSZWdpc3RyYXRpb24pIHtcbiAgICByZXR1cm4gZXhpc3RpbmdSZWdpc3RyYXRpb24udXBkYXRlKCkudGhlbigoKSA9PiB7XG4gICAgICByZXR1cm4gW1xuICAgICAgICBnZXRXb3JrZXJCeVJlZ2lzdHJhdGlvbihcbiAgICAgICAgICBleGlzdGluZ1JlZ2lzdHJhdGlvbixcbiAgICAgICAgICBhYnNvbHV0ZVdvcmtlclVybCxcbiAgICAgICAgICBmaW5kV29ya2VyXG4gICAgICAgICksXG4gICAgICAgIGV4aXN0aW5nUmVnaXN0cmF0aW9uXG4gICAgICBdO1xuICAgIH0pO1xuICB9XG4gIGNvbnN0IHJlZ2lzdHJhdGlvblJlc3VsdCA9IGF3YWl0IHVudGlsKFxuICAgIGFzeW5jICgpID0+IHtcbiAgICAgIGNvbnN0IHJlZ2lzdHJhdGlvbiA9IGF3YWl0IG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLnJlZ2lzdGVyKHVybCwgb3B0aW9ucyk7XG4gICAgICByZXR1cm4gW1xuICAgICAgICAvLyBDb21wYXJlIGV4aXN0aW5nIHdvcmtlciByZWdpc3RyYXRpb24gYnkgaXRzIHdvcmtlciBVUkwsXG4gICAgICAgIC8vIHRvIHByZXZlbnQgaXJyZWxldmFudCB3b3JrZXJzIHRvIHJlc29sdmUgaGVyZSAoc3VjaCBhcyBDb2Rlc2FuZGJveCB3b3JrZXIpLlxuICAgICAgICBnZXRXb3JrZXJCeVJlZ2lzdHJhdGlvbihyZWdpc3RyYXRpb24sIGFic29sdXRlV29ya2VyVXJsLCBmaW5kV29ya2VyKSxcbiAgICAgICAgcmVnaXN0cmF0aW9uXG4gICAgICBdO1xuICAgIH1cbiAgKTtcbiAgaWYgKHJlZ2lzdHJhdGlvblJlc3VsdC5lcnJvcikge1xuICAgIGNvbnN0IGlzV29ya2VyTWlzc2luZyA9IHJlZ2lzdHJhdGlvblJlc3VsdC5lcnJvci5tZXNzYWdlLmluY2x1ZGVzKFwiKDQwNClcIik7XG4gICAgaWYgKGlzV29ya2VyTWlzc2luZykge1xuICAgICAgY29uc3Qgc2NvcGVVcmwgPSBuZXcgVVJMKG9wdGlvbnM/LnNjb3BlIHx8IFwiL1wiLCBsb2NhdGlvbi5ocmVmKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgZGV2VXRpbHMuZm9ybWF0TWVzc2FnZShgRmFpbGVkIHRvIHJlZ2lzdGVyIGEgU2VydmljZSBXb3JrZXIgZm9yIHNjb3BlICgnJHtzY29wZVVybC5ocmVmfScpIHdpdGggc2NyaXB0ICgnJHthYnNvbHV0ZVdvcmtlclVybH0nKTogU2VydmljZSBXb3JrZXIgc2NyaXB0IGRvZXMgbm90IGV4aXN0IGF0IHRoZSBnaXZlbiBwYXRoLlxuXG5EaWQgeW91IGZvcmdldCB0byBydW4gXCJucHggbXN3IGluaXQgPFBVQkxJQ19ESVI+XCI/XG5cbkxlYXJuIG1vcmUgYWJvdXQgY3JlYXRpbmcgdGhlIFNlcnZpY2UgV29ya2VyIHNjcmlwdDogaHR0cHM6Ly9tc3dqcy5pby9kb2NzL2NsaS9pbml0YClcbiAgICAgICk7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGRldlV0aWxzLmZvcm1hdE1lc3NhZ2UoXG4gICAgICAgIFwiRmFpbGVkIHRvIHJlZ2lzdGVyIHRoZSBTZXJ2aWNlIFdvcmtlcjpcXG5cXG4lc1wiLFxuICAgICAgICByZWdpc3RyYXRpb25SZXN1bHQuZXJyb3IubWVzc2FnZVxuICAgICAgKVxuICAgICk7XG4gIH1cbiAgcmV0dXJuIHJlZ2lzdHJhdGlvblJlc3VsdC5kYXRhO1xufTtcblxuLy8gc3JjL2Jyb3dzZXIvc2V0dXBXb3JrZXIvc3RhcnQvdXRpbHMvZW5hYmxlTW9ja2luZy50c1xuaW1wb3J0IHsgZGV2VXRpbHMgYXMgZGV2VXRpbHMzIH0gZnJvbSAnLi4vY29yZS91dGlscy9pbnRlcm5hbC9kZXZVdGlscy5tanMnO1xuXG4vLyBzcmMvYnJvd3Nlci9zZXR1cFdvcmtlci9zdGFydC91dGlscy9wcmludFN0YXJ0TWVzc2FnZS50c1xuaW1wb3J0IHsgZGV2VXRpbHMgYXMgZGV2VXRpbHMyIH0gZnJvbSAnLi4vY29yZS91dGlscy9pbnRlcm5hbC9kZXZVdGlscy5tanMnO1xuZnVuY3Rpb24gcHJpbnRTdGFydE1lc3NhZ2UoYXJncyA9IHt9KSB7XG4gIGlmIChhcmdzLnF1aWV0KSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IG1lc3NhZ2UgPSBhcmdzLm1lc3NhZ2UgfHwgXCJNb2NraW5nIGVuYWJsZWQuXCI7XG4gIGNvbnNvbGUuZ3JvdXBDb2xsYXBzZWQoXG4gICAgYCVjJHtkZXZVdGlsczIuZm9ybWF0TWVzc2FnZShtZXNzYWdlKX1gLFxuICAgIFwiY29sb3I6b3JhbmdlcmVkO2ZvbnQtd2VpZ2h0OmJvbGQ7XCJcbiAgKTtcbiAgY29uc29sZS5sb2coXG4gICAgXCIlY0RvY3VtZW50YXRpb246ICVjaHR0cHM6Ly9tc3dqcy5pby9kb2NzXCIsXG4gICAgXCJmb250LXdlaWdodDpib2xkXCIsXG4gICAgXCJmb250LXdlaWdodDpub3JtYWxcIlxuICApO1xuICBjb25zb2xlLmxvZyhcIkZvdW5kIGFuIGlzc3VlPyBodHRwczovL2dpdGh1Yi5jb20vbXN3anMvbXN3L2lzc3Vlc1wiKTtcbiAgaWYgKGFyZ3Mud29ya2VyVXJsKSB7XG4gICAgY29uc29sZS5sb2coXCJXb3JrZXIgc2NyaXB0IFVSTDpcIiwgYXJncy53b3JrZXJVcmwpO1xuICB9XG4gIGlmIChhcmdzLndvcmtlclNjb3BlKSB7XG4gICAgY29uc29sZS5sb2coXCJXb3JrZXIgc2NvcGU6XCIsIGFyZ3Mud29ya2VyU2NvcGUpO1xuICB9XG4gIGNvbnNvbGUuZ3JvdXBFbmQoKTtcbn1cblxuLy8gc3JjL2Jyb3dzZXIvc2V0dXBXb3JrZXIvc3RhcnQvdXRpbHMvZW5hYmxlTW9ja2luZy50c1xuYXN5bmMgZnVuY3Rpb24gZW5hYmxlTW9ja2luZyhjb250ZXh0LCBvcHRpb25zKSB7XG4gIGNvbnRleHQud29ya2VyQ2hhbm5lbC5zZW5kKFwiTU9DS19BQ1RJVkFURVwiKTtcbiAgYXdhaXQgY29udGV4dC5ldmVudHMub25jZShcIk1PQ0tJTkdfRU5BQkxFRFwiKTtcbiAgaWYgKGNvbnRleHQuaXNNb2NraW5nRW5hYmxlZCkge1xuICAgIGRldlV0aWxzMy53YXJuKFxuICAgICAgYEZvdW5kIGEgcmVkdW5kYW50IFwid29ya2VyLnN0YXJ0KClcIiBjYWxsLiBOb3RlIHRoYXQgc3RhcnRpbmcgdGhlIHdvcmtlciB3aGlsZSBtb2NraW5nIGlzIGFscmVhZHkgZW5hYmxlZCB3aWxsIGhhdmUgbm8gZWZmZWN0LiBDb25zaWRlciByZW1vdmluZyB0aGlzIFwid29ya2VyLnN0YXJ0KClcIiBjYWxsLmBcbiAgICApO1xuICAgIHJldHVybjtcbiAgfVxuICBjb250ZXh0LmlzTW9ja2luZ0VuYWJsZWQgPSB0cnVlO1xuICBwcmludFN0YXJ0TWVzc2FnZSh7XG4gICAgcXVpZXQ6IG9wdGlvbnMucXVpZXQsXG4gICAgd29ya2VyU2NvcGU6IGNvbnRleHQucmVnaXN0cmF0aW9uPy5zY29wZSxcbiAgICB3b3JrZXJVcmw6IGNvbnRleHQud29ya2VyPy5zY3JpcHRVUkxcbiAgfSk7XG59XG5cbi8vIHNyYy9icm93c2VyL3NldHVwV29ya2VyL3N0YXJ0L3V0aWxzL2NyZWF0ZU1lc3NhZ2VDaGFubmVsLnRzXG52YXIgV29ya2VyQ2hhbm5lbCA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IocG9ydCkge1xuICAgIHRoaXMucG9ydCA9IHBvcnQ7XG4gIH1cbiAgcG9zdE1lc3NhZ2UoZXZlbnQsIC4uLnJlc3QpIHtcbiAgICBjb25zdCBbZGF0YSwgdHJhbnNmZXJdID0gcmVzdDtcbiAgICB0aGlzLnBvcnQucG9zdE1lc3NhZ2UoeyB0eXBlOiBldmVudCwgZGF0YSB9LCB7IHRyYW5zZmVyIH0pO1xuICB9XG59O1xuXG4vLyBzcmMvYnJvd3Nlci91dGlscy9wcnVuZUdldFJlcXVlc3RCb2R5LnRzXG5mdW5jdGlvbiBwcnVuZUdldFJlcXVlc3RCb2R5KHJlcXVlc3QpIHtcbiAgaWYgKFtcIkhFQURcIiwgXCJHRVRcIl0uaW5jbHVkZXMocmVxdWVzdC5tZXRob2QpKSB7XG4gICAgcmV0dXJuIHZvaWQgMDtcbiAgfVxuICByZXR1cm4gcmVxdWVzdC5ib2R5O1xufVxuXG4vLyBzcmMvYnJvd3Nlci91dGlscy9wYXJzZVdvcmtlclJlcXVlc3QudHNcbmZ1bmN0aW9uIHBhcnNlV29ya2VyUmVxdWVzdChpbmNvbWluZ1JlcXVlc3QpIHtcbiAgcmV0dXJuIG5ldyBSZXF1ZXN0KGluY29taW5nUmVxdWVzdC51cmwsIHtcbiAgICAuLi5pbmNvbWluZ1JlcXVlc3QsXG4gICAgYm9keTogcHJ1bmVHZXRSZXF1ZXN0Qm9keShpbmNvbWluZ1JlcXVlc3QpXG4gIH0pO1xufVxuXG4vLyBzcmMvYnJvd3Nlci9zZXR1cFdvcmtlci9zdGFydC9jcmVhdGVSZXF1ZXN0TGlzdGVuZXIudHNcbmltcG9ydCB7IFJlcXVlc3RIYW5kbGVyIH0gZnJvbSAnLi4vY29yZS9oYW5kbGVycy9SZXF1ZXN0SGFuZGxlci5tanMnO1xuaW1wb3J0IHsgaGFuZGxlUmVxdWVzdCB9IGZyb20gJy4uL2NvcmUvdXRpbHMvaGFuZGxlUmVxdWVzdC5tanMnO1xuaW1wb3J0IHsgZGV2VXRpbHMgYXMgZGV2VXRpbHM0IH0gZnJvbSAnLi4vY29yZS91dGlscy9pbnRlcm5hbC9kZXZVdGlscy5tanMnO1xuaW1wb3J0IHsgdG9SZXNwb25zZUluaXQgfSBmcm9tICcuLi9jb3JlL3V0aWxzL3RvUmVzcG9uc2VJbml0Lm1qcyc7XG52YXIgY3JlYXRlUmVxdWVzdExpc3RlbmVyID0gKGNvbnRleHQsIG9wdGlvbnMpID0+IHtcbiAgcmV0dXJuIGFzeW5jIChldmVudCwgbWVzc2FnZSkgPT4ge1xuICAgIGNvbnN0IG1lc3NhZ2VDaGFubmVsID0gbmV3IFdvcmtlckNoYW5uZWwoZXZlbnQucG9ydHNbMF0pO1xuICAgIGNvbnN0IHJlcXVlc3RJZCA9IG1lc3NhZ2UucGF5bG9hZC5pZDtcbiAgICBjb25zdCByZXF1ZXN0ID0gcGFyc2VXb3JrZXJSZXF1ZXN0KG1lc3NhZ2UucGF5bG9hZCk7XG4gICAgY29uc3QgcmVxdWVzdENsb25lRm9yTG9ncyA9IHJlcXVlc3QuY2xvbmUoKTtcbiAgICBjb25zdCByZXF1ZXN0Q2xvbmUgPSByZXF1ZXN0LmNsb25lKCk7XG4gICAgUmVxdWVzdEhhbmRsZXIuY2FjaGUuc2V0KHJlcXVlc3QsIHJlcXVlc3RDbG9uZSk7XG4gICAgY29udGV4dC5yZXF1ZXN0cy5zZXQocmVxdWVzdElkLCByZXF1ZXN0Q2xvbmUpO1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCBoYW5kbGVSZXF1ZXN0KFxuICAgICAgICByZXF1ZXN0LFxuICAgICAgICByZXF1ZXN0SWQsXG4gICAgICAgIGNvbnRleHQuZ2V0UmVxdWVzdEhhbmRsZXJzKCksXG4gICAgICAgIG9wdGlvbnMsXG4gICAgICAgIGNvbnRleHQuZW1pdHRlcixcbiAgICAgICAge1xuICAgICAgICAgIG9uUGFzc3Rocm91Z2hSZXNwb25zZSgpIHtcbiAgICAgICAgICAgIG1lc3NhZ2VDaGFubmVsLnBvc3RNZXNzYWdlKFwiUEFTU1RIUk9VR0hcIik7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBhc3luYyBvbk1vY2tlZFJlc3BvbnNlKHJlc3BvbnNlLCB7IGhhbmRsZXIsIHBhcnNlZFJlc3VsdCB9KSB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZUNsb25lID0gcmVzcG9uc2UuY2xvbmUoKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlQ2xvbmVGb3JMb2dzID0gcmVzcG9uc2UuY2xvbmUoKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlSW5pdCA9IHRvUmVzcG9uc2VJbml0KHJlc3BvbnNlKTtcbiAgICAgICAgICAgIGlmIChjb250ZXh0LnN1cHBvcnRzLnJlYWRhYmxlU3RyZWFtVHJhbnNmZXIpIHtcbiAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2VTdHJlYW1Pck51bGwgPSByZXNwb25zZS5ib2R5O1xuICAgICAgICAgICAgICBtZXNzYWdlQ2hhbm5lbC5wb3N0TWVzc2FnZShcbiAgICAgICAgICAgICAgICBcIk1PQ0tfUkVTUE9OU0VcIixcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAuLi5yZXNwb25zZUluaXQsXG4gICAgICAgICAgICAgICAgICBib2R5OiByZXNwb25zZVN0cmVhbU9yTnVsbFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcmVzcG9uc2VTdHJlYW1Pck51bGwgPyBbcmVzcG9uc2VTdHJlYW1Pck51bGxdIDogdm9pZCAwXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBjb25zdCByZXNwb25zZUJ1ZmZlck9yTnVsbCA9IHJlc3BvbnNlLmJvZHkgPT09IG51bGwgPyBudWxsIDogYXdhaXQgcmVzcG9uc2VDbG9uZS5hcnJheUJ1ZmZlcigpO1xuICAgICAgICAgICAgICBtZXNzYWdlQ2hhbm5lbC5wb3N0TWVzc2FnZShcIk1PQ0tfUkVTUE9OU0VcIiwge1xuICAgICAgICAgICAgICAgIC4uLnJlc3BvbnNlSW5pdCxcbiAgICAgICAgICAgICAgICBib2R5OiByZXNwb25zZUJ1ZmZlck9yTnVsbFxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghb3B0aW9ucy5xdWlldCkge1xuICAgICAgICAgICAgICBjb250ZXh0LmVtaXR0ZXIub25jZShcInJlc3BvbnNlOm1vY2tlZFwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaGFuZGxlci5sb2coe1xuICAgICAgICAgICAgICAgICAgcmVxdWVzdDogcmVxdWVzdENsb25lRm9yTG9ncyxcbiAgICAgICAgICAgICAgICAgIHJlc3BvbnNlOiByZXNwb25zZUNsb25lRm9yTG9ncyxcbiAgICAgICAgICAgICAgICAgIHBhcnNlZFJlc3VsdFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgfSBjYXRjaCAoZXJyb3IyKSB7XG4gICAgICBpZiAoZXJyb3IyIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgZGV2VXRpbHM0LmVycm9yKFxuICAgICAgICAgIGBVbmNhdWdodCBleGNlcHRpb24gaW4gdGhlIHJlcXVlc3QgaGFuZGxlciBmb3IgXCIlcyAlc1wiOlxuXG4lc1xuXG5UaGlzIGV4Y2VwdGlvbiBoYXMgYmVlbiBncmFjZWZ1bGx5IGhhbmRsZWQgYXMgYSA1MDAgcmVzcG9uc2UsIGhvd2V2ZXIsIGl0J3Mgc3Ryb25nbHkgcmVjb21tZW5kZWQgdG8gcmVzb2x2ZSB0aGlzIGVycm9yLCBhcyBpdCBpbmRpY2F0ZXMgYSBtaXN0YWtlIGluIHlvdXIgY29kZS4gSWYgeW91IHdpc2ggdG8gbW9jayBhbiBlcnJvciByZXNwb25zZSwgcGxlYXNlIHNlZSB0aGlzIGd1aWRlOiBodHRwczovL21zd2pzLmlvL2RvY3MvcmVjaXBlcy9tb2NraW5nLWVycm9yLXJlc3BvbnNlc2AsXG4gICAgICAgICAgcmVxdWVzdC5tZXRob2QsXG4gICAgICAgICAgcmVxdWVzdC51cmwsXG4gICAgICAgICAgZXJyb3IyLnN0YWNrID8/IGVycm9yMlxuICAgICAgICApO1xuICAgICAgICBtZXNzYWdlQ2hhbm5lbC5wb3N0TWVzc2FnZShcIk1PQ0tfUkVTUE9OU0VcIiwge1xuICAgICAgICAgIHN0YXR1czogNTAwLFxuICAgICAgICAgIHN0YXR1c1RleHQ6IFwiUmVxdWVzdCBIYW5kbGVyIEVycm9yXCIsXG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgIG5hbWU6IGVycm9yMi5uYW1lLFxuICAgICAgICAgICAgbWVzc2FnZTogZXJyb3IyLm1lc3NhZ2UsXG4gICAgICAgICAgICBzdGFjazogZXJyb3IyLnN0YWNrXG4gICAgICAgICAgfSlcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xufTtcblxuLy8gc3JjL2Jyb3dzZXIvdXRpbHMvY2hlY2tXb3JrZXJJbnRlZ3JpdHkudHNcbmltcG9ydCB7IGRldlV0aWxzIGFzIGRldlV0aWxzNSB9IGZyb20gJy4uL2NvcmUvdXRpbHMvaW50ZXJuYWwvZGV2VXRpbHMubWpzJztcbmFzeW5jIGZ1bmN0aW9uIGNoZWNrV29ya2VySW50ZWdyaXR5KGNvbnRleHQpIHtcbiAgY29udGV4dC53b3JrZXJDaGFubmVsLnNlbmQoXCJJTlRFR1JJVFlfQ0hFQ0tfUkVRVUVTVFwiKTtcbiAgY29uc3QgeyBwYXlsb2FkIH0gPSBhd2FpdCBjb250ZXh0LmV2ZW50cy5vbmNlKFwiSU5URUdSSVRZX0NIRUNLX1JFU1BPTlNFXCIpO1xuICBpZiAocGF5bG9hZC5jaGVja3N1bSAhPT0gXCIyNjM1N2M3OTYzOWJmYTIwZDY0YzBlZmNhMmE4NzQyM1wiKSB7XG4gICAgZGV2VXRpbHM1Lndhcm4oXG4gICAgICBgVGhlIGN1cnJlbnRseSByZWdpc3RlcmVkIFNlcnZpY2UgV29ya2VyIGhhcyBiZWVuIGdlbmVyYXRlZCBieSBhIGRpZmZlcmVudCB2ZXJzaW9uIG9mIE1TVyAoJHtwYXlsb2FkLnBhY2thZ2VWZXJzaW9ufSkgYW5kIG1heSBub3QgYmUgZnVsbHkgY29tcGF0aWJsZSB3aXRoIHRoZSBpbnN0YWxsZWQgdmVyc2lvbi5cblxuSXQncyByZWNvbW1lbmRlZCB5b3UgdXBkYXRlIHlvdXIgd29ya2VyIHNjcmlwdCBieSBydW5uaW5nIHRoaXMgY29tbWFuZDpcblxuICBcXHUyMDIyIG5weCBtc3cgaW5pdCA8UFVCTElDX0RJUj5cblxuWW91IGNhbiBhbHNvIGF1dG9tYXRlIHRoaXMgcHJvY2VzcyBhbmQgbWFrZSB0aGUgd29ya2VyIHNjcmlwdCB1cGRhdGUgYXV0b21hdGljYWxseSB1cG9uIHRoZSBsaWJyYXJ5IGluc3RhbGxhdGlvbnMuIFJlYWQgbW9yZTogaHR0cHM6Ly9tc3dqcy5pby9kb2NzL2NsaS9pbml0LmBcbiAgICApO1xuICB9XG59XG5cbi8vIG5vZGVfbW9kdWxlcy8ucG5wbS9AbXN3anMraW50ZXJjZXB0b3JzQDAuMjkuMC9ub2RlX21vZHVsZXMvQG1zd2pzL2ludGVyY2VwdG9ycy9saWIvYnJvd3Nlci9jaHVuay02SFlJUkZYMi5tanNcbnZhciBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG5mdW5jdGlvbiBlbmNvZGVCdWZmZXIodGV4dCkge1xuICByZXR1cm4gZW5jb2Rlci5lbmNvZGUodGV4dCk7XG59XG5mdW5jdGlvbiBkZWNvZGVCdWZmZXIoYnVmZmVyLCBlbmNvZGluZykge1xuICBjb25zdCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKGVuY29kaW5nKTtcbiAgcmV0dXJuIGRlY29kZXIuZGVjb2RlKGJ1ZmZlcik7XG59XG5mdW5jdGlvbiB0b0FycmF5QnVmZmVyKGFycmF5KSB7XG4gIHJldHVybiBhcnJheS5idWZmZXIuc2xpY2UoXG4gICAgYXJyYXkuYnl0ZU9mZnNldCxcbiAgICBhcnJheS5ieXRlT2Zmc2V0ICsgYXJyYXkuYnl0ZUxlbmd0aFxuICApO1xufVxuXG4vLyBub2RlX21vZHVsZXMvLnBucG0vQG1zd2pzK2ludGVyY2VwdG9yc0AwLjI5LjAvbm9kZV9tb2R1bGVzL0Btc3dqcy9pbnRlcmNlcHRvcnMvbGliL2Jyb3dzZXIvY2h1bmstT01JU1lLV1IubWpzXG52YXIgSVNfUEFUQ0hFRF9NT0RVTEUgPSBTeW1ib2woXCJpc1BhdGNoZWRNb2R1bGVcIik7XG5mdW5jdGlvbiBpc1Byb3BlcnR5QWNjZXNzaWJsZShvYmosIGtleSkge1xuICB0cnkge1xuICAgIG9ialtrZXldO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG52YXIgUkVTUE9OU0VfU1RBVFVTX0NPREVTX1dJVEhPVVRfQk9EWSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KFtcbiAgMTAxLFxuICAxMDMsXG4gIDIwNCxcbiAgMjA1LFxuICAzMDRcbl0pO1xuZnVuY3Rpb24gaXNSZXNwb25zZVdpdGhvdXRCb2R5KHN0YXR1cykge1xuICByZXR1cm4gUkVTUE9OU0VfU1RBVFVTX0NPREVTX1dJVEhPVVRfQk9EWS5oYXMoc3RhdHVzKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVNlcnZlckVycm9yUmVzcG9uc2UoYm9keSkge1xuICByZXR1cm4gbmV3IFJlc3BvbnNlKFxuICAgIEpTT04uc3RyaW5naWZ5KFxuICAgICAgYm9keSBpbnN0YW5jZW9mIEVycm9yID8ge1xuICAgICAgICBuYW1lOiBib2R5Lm5hbWUsXG4gICAgICAgIG1lc3NhZ2U6IGJvZHkubWVzc2FnZSxcbiAgICAgICAgc3RhY2s6IGJvZHkuc3RhY2tcbiAgICAgIH0gOiBib2R5XG4gICAgKSxcbiAgICB7XG4gICAgICBzdGF0dXM6IDUwMCxcbiAgICAgIHN0YXR1c1RleHQ6IFwiVW5oYW5kbGVkIEV4Y2VwdGlvblwiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgICAgfVxuICAgIH1cbiAgKTtcbn1cbmZ1bmN0aW9uIGlzUmVzcG9uc2VFcnJvcihyZXNwb25zZSkge1xuICByZXR1cm4gaXNQcm9wZXJ0eUFjY2Vzc2libGUocmVzcG9uc2UsIFwidHlwZVwiKSAmJiByZXNwb25zZS50eXBlID09PSBcImVycm9yXCI7XG59XG5cbi8vIG5vZGVfbW9kdWxlcy8ucG5wbS9Ab3Blbi1kcmFmdCtsb2dnZXJAMC4zLjAvbm9kZV9tb2R1bGVzL0BvcGVuLWRyYWZ0L2xvZ2dlci9saWIvaW5kZXgubWpzXG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZXhwb3J0ID0gKHRhcmdldCwgYWxsKSA9PiB7XG4gIGZvciAodmFyIG5hbWUgaW4gYWxsKVxuICAgIF9fZGVmUHJvcCh0YXJnZXQsIG5hbWUsIHsgZ2V0OiBhbGxbbmFtZV0sIGVudW1lcmFibGU6IHRydWUgfSk7XG59O1xudmFyIGNvbG9yc19leHBvcnRzID0ge307XG5fX2V4cG9ydChjb2xvcnNfZXhwb3J0cywge1xuICBibHVlOiAoKSA9PiBibHVlLFxuICBncmF5OiAoKSA9PiBncmF5LFxuICBncmVlbjogKCkgPT4gZ3JlZW4sXG4gIHJlZDogKCkgPT4gcmVkLFxuICB5ZWxsb3c6ICgpID0+IHllbGxvd1xufSk7XG5mdW5jdGlvbiB5ZWxsb3codGV4dCkge1xuICByZXR1cm4gYFxceDFCWzMzbSR7dGV4dH1cXHgxQlswbWA7XG59XG5mdW5jdGlvbiBibHVlKHRleHQpIHtcbiAgcmV0dXJuIGBcXHgxQlszNG0ke3RleHR9XFx4MUJbMG1gO1xufVxuZnVuY3Rpb24gZ3JheSh0ZXh0KSB7XG4gIHJldHVybiBgXFx4MUJbOTBtJHt0ZXh0fVxceDFCWzBtYDtcbn1cbmZ1bmN0aW9uIHJlZCh0ZXh0KSB7XG4gIHJldHVybiBgXFx4MUJbMzFtJHt0ZXh0fVxceDFCWzBtYDtcbn1cbmZ1bmN0aW9uIGdyZWVuKHRleHQpIHtcbiAgcmV0dXJuIGBcXHgxQlszMm0ke3RleHR9XFx4MUJbMG1gO1xufVxudmFyIElTX05PREUgPSBpc05vZGVQcm9jZXNzKCk7XG52YXIgTG9nZ2VyID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcihuYW1lKSB7XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLnByZWZpeCA9IGBbJHt0aGlzLm5hbWV9XWA7XG4gICAgY29uc3QgTE9HR0VSX05BTUUgPSBnZXRWYXJpYWJsZShcIkRFQlVHXCIpO1xuICAgIGNvbnN0IExPR0dFUl9MRVZFTCA9IGdldFZhcmlhYmxlKFwiTE9HX0xFVkVMXCIpO1xuICAgIGNvbnN0IGlzTG9nZ2luZ0VuYWJsZWQgPSBMT0dHRVJfTkFNRSA9PT0gXCIxXCIgfHwgTE9HR0VSX05BTUUgPT09IFwidHJ1ZVwiIHx8IHR5cGVvZiBMT0dHRVJfTkFNRSAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0aGlzLm5hbWUuc3RhcnRzV2l0aChMT0dHRVJfTkFNRSk7XG4gICAgaWYgKGlzTG9nZ2luZ0VuYWJsZWQpIHtcbiAgICAgIHRoaXMuZGVidWcgPSBpc0RlZmluZWRBbmROb3RFcXVhbHMoTE9HR0VSX0xFVkVMLCBcImRlYnVnXCIpID8gbm9vcCA6IHRoaXMuZGVidWc7XG4gICAgICB0aGlzLmluZm8gPSBpc0RlZmluZWRBbmROb3RFcXVhbHMoTE9HR0VSX0xFVkVMLCBcImluZm9cIikgPyBub29wIDogdGhpcy5pbmZvO1xuICAgICAgdGhpcy5zdWNjZXNzID0gaXNEZWZpbmVkQW5kTm90RXF1YWxzKExPR0dFUl9MRVZFTCwgXCJzdWNjZXNzXCIpID8gbm9vcCA6IHRoaXMuc3VjY2VzcztcbiAgICAgIHRoaXMud2FybmluZyA9IGlzRGVmaW5lZEFuZE5vdEVxdWFscyhMT0dHRVJfTEVWRUwsIFwid2FybmluZ1wiKSA/IG5vb3AgOiB0aGlzLndhcm5pbmc7XG4gICAgICB0aGlzLmVycm9yID0gaXNEZWZpbmVkQW5kTm90RXF1YWxzKExPR0dFUl9MRVZFTCwgXCJlcnJvclwiKSA/IG5vb3AgOiB0aGlzLmVycm9yO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmluZm8gPSBub29wO1xuICAgICAgdGhpcy5zdWNjZXNzID0gbm9vcDtcbiAgICAgIHRoaXMud2FybmluZyA9IG5vb3A7XG4gICAgICB0aGlzLmVycm9yID0gbm9vcDtcbiAgICAgIHRoaXMub25seSA9IG5vb3A7XG4gICAgfVxuICB9XG4gIHByZWZpeDtcbiAgZXh0ZW5kKGRvbWFpbikge1xuICAgIHJldHVybiBuZXcgTG9nZ2VyKGAke3RoaXMubmFtZX06JHtkb21haW59YCk7XG4gIH1cbiAgLyoqXG4gICAqIFByaW50IGEgZGVidWcgbWVzc2FnZS5cbiAgICogQGV4YW1wbGVcbiAgICogbG9nZ2VyLmRlYnVnKCdubyBkdXBsaWNhdGVzIGZvdW5kLCBjcmVhdGluZyBhIGRvY3VtZW50Li4uJylcbiAgICovXG4gIGRlYnVnKG1lc3NhZ2UsIC4uLnBvc2l0aW9uYWxzKSB7XG4gICAgdGhpcy5sb2dFbnRyeSh7XG4gICAgICBsZXZlbDogXCJkZWJ1Z1wiLFxuICAgICAgbWVzc2FnZTogZ3JheShtZXNzYWdlKSxcbiAgICAgIHBvc2l0aW9uYWxzLFxuICAgICAgcHJlZml4OiB0aGlzLnByZWZpeCxcbiAgICAgIGNvbG9yczoge1xuICAgICAgICBwcmVmaXg6IFwiZ3JheVwiXG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgLyoqXG4gICAqIFByaW50IGFuIGluZm8gbWVzc2FnZS5cbiAgICogQGV4YW1wbGVcbiAgICogbG9nZ2VyLmluZm8oJ3N0YXJ0IHBhcnNpbmcuLi4nKVxuICAgKi9cbiAgaW5mbyhtZXNzYWdlLCAuLi5wb3NpdGlvbmFscykge1xuICAgIHRoaXMubG9nRW50cnkoe1xuICAgICAgbGV2ZWw6IFwiaW5mb1wiLFxuICAgICAgbWVzc2FnZSxcbiAgICAgIHBvc2l0aW9uYWxzLFxuICAgICAgcHJlZml4OiB0aGlzLnByZWZpeCxcbiAgICAgIGNvbG9yczoge1xuICAgICAgICBwcmVmaXg6IFwiYmx1ZVwiXG4gICAgICB9XG4gICAgfSk7XG4gICAgY29uc3QgcGVyZm9ybWFuY2UyID0gbmV3IFBlcmZvcm1hbmNlRW50cnkoKTtcbiAgICByZXR1cm4gKG1lc3NhZ2UyLCAuLi5wb3NpdGlvbmFsczIpID0+IHtcbiAgICAgIHBlcmZvcm1hbmNlMi5tZWFzdXJlKCk7XG4gICAgICB0aGlzLmxvZ0VudHJ5KHtcbiAgICAgICAgbGV2ZWw6IFwiaW5mb1wiLFxuICAgICAgICBtZXNzYWdlOiBgJHttZXNzYWdlMn0gJHtncmF5KGAke3BlcmZvcm1hbmNlMi5kZWx0YVRpbWV9bXNgKX1gLFxuICAgICAgICBwb3NpdGlvbmFsczogcG9zaXRpb25hbHMyLFxuICAgICAgICBwcmVmaXg6IHRoaXMucHJlZml4LFxuICAgICAgICBjb2xvcnM6IHtcbiAgICAgICAgICBwcmVmaXg6IFwiYmx1ZVwiXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG4gIH1cbiAgLyoqXG4gICAqIFByaW50IGEgc3VjY2VzcyBtZXNzYWdlLlxuICAgKiBAZXhhbXBsZVxuICAgKiBsb2dnZXIuc3VjY2Vzcygnc3VjY2Vzc2Z1bGx5IGNyZWF0ZWQgZG9jdW1lbnQnKVxuICAgKi9cbiAgc3VjY2VzcyhtZXNzYWdlLCAuLi5wb3NpdGlvbmFscykge1xuICAgIHRoaXMubG9nRW50cnkoe1xuICAgICAgbGV2ZWw6IFwiaW5mb1wiLFxuICAgICAgbWVzc2FnZSxcbiAgICAgIHBvc2l0aW9uYWxzLFxuICAgICAgcHJlZml4OiBgXFx1MjcxNCAke3RoaXMucHJlZml4fWAsXG4gICAgICBjb2xvcnM6IHtcbiAgICAgICAgdGltZXN0YW1wOiBcImdyZWVuXCIsXG4gICAgICAgIHByZWZpeDogXCJncmVlblwiXG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgLyoqXG4gICAqIFByaW50IGEgd2FybmluZy5cbiAgICogQGV4YW1wbGVcbiAgICogbG9nZ2VyLndhcm5pbmcoJ2ZvdW5kIGxlZ2FjeSBkb2N1bWVudCBmb3JtYXQnKVxuICAgKi9cbiAgd2FybmluZyhtZXNzYWdlLCAuLi5wb3NpdGlvbmFscykge1xuICAgIHRoaXMubG9nRW50cnkoe1xuICAgICAgbGV2ZWw6IFwid2FybmluZ1wiLFxuICAgICAgbWVzc2FnZSxcbiAgICAgIHBvc2l0aW9uYWxzLFxuICAgICAgcHJlZml4OiBgXFx1MjZBMCAke3RoaXMucHJlZml4fWAsXG4gICAgICBjb2xvcnM6IHtcbiAgICAgICAgdGltZXN0YW1wOiBcInllbGxvd1wiLFxuICAgICAgICBwcmVmaXg6IFwieWVsbG93XCJcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICAvKipcbiAgICogUHJpbnQgYW4gZXJyb3IgbWVzc2FnZS5cbiAgICogQGV4YW1wbGVcbiAgICogbG9nZ2VyLmVycm9yKCdzb21ldGhpbmcgd2VudCB3cm9uZycpXG4gICAqL1xuICBlcnJvcihtZXNzYWdlLCAuLi5wb3NpdGlvbmFscykge1xuICAgIHRoaXMubG9nRW50cnkoe1xuICAgICAgbGV2ZWw6IFwiZXJyb3JcIixcbiAgICAgIG1lc3NhZ2UsXG4gICAgICBwb3NpdGlvbmFscyxcbiAgICAgIHByZWZpeDogYFxcdTI3MTYgJHt0aGlzLnByZWZpeH1gLFxuICAgICAgY29sb3JzOiB7XG4gICAgICAgIHRpbWVzdGFtcDogXCJyZWRcIixcbiAgICAgICAgcHJlZml4OiBcInJlZFwiXG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgLyoqXG4gICAqIEV4ZWN1dGUgdGhlIGdpdmVuIGNhbGxiYWNrIG9ubHkgd2hlbiB0aGUgbG9nZ2luZyBpcyBlbmFibGVkLlxuICAgKiBUaGlzIGlzIHNraXBwZWQgaW4gaXRzIGVudGlyZXR5IGFuZCBoYXMgbm8gcnVudGltZSBjb3N0IG90aGVyd2lzZS5cbiAgICogVGhpcyBleGVjdXRlcyByZWdhcmRsZXNzIG9mIHRoZSBsb2cgbGV2ZWwuXG4gICAqIEBleGFtcGxlXG4gICAqIGxvZ2dlci5vbmx5KCgpID0+IHtcbiAgICogICBsb2dnZXIuaW5mbygnYWRkaXRpb25hbCBpbmZvJylcbiAgICogfSlcbiAgICovXG4gIG9ubHkoY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjaygpO1xuICB9XG4gIGNyZWF0ZUVudHJ5KGxldmVsLCBtZXNzYWdlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRpbWVzdGFtcDogLyogQF9fUFVSRV9fICovIG5ldyBEYXRlKCksXG4gICAgICBsZXZlbCxcbiAgICAgIG1lc3NhZ2VcbiAgICB9O1xuICB9XG4gIGxvZ0VudHJ5KGFyZ3MpIHtcbiAgICBjb25zdCB7XG4gICAgICBsZXZlbCxcbiAgICAgIG1lc3NhZ2UsXG4gICAgICBwcmVmaXgsXG4gICAgICBjb2xvcnM6IGN1c3RvbUNvbG9ycyxcbiAgICAgIHBvc2l0aW9uYWxzID0gW11cbiAgICB9ID0gYXJncztcbiAgICBjb25zdCBlbnRyeSA9IHRoaXMuY3JlYXRlRW50cnkobGV2ZWwsIG1lc3NhZ2UpO1xuICAgIGNvbnN0IHRpbWVzdGFtcENvbG9yID0gY3VzdG9tQ29sb3JzPy50aW1lc3RhbXAgfHwgXCJncmF5XCI7XG4gICAgY29uc3QgcHJlZml4Q29sb3IgPSBjdXN0b21Db2xvcnM/LnByZWZpeCB8fCBcImdyYXlcIjtcbiAgICBjb25zdCBjb2xvcml6ZSA9IHtcbiAgICAgIHRpbWVzdGFtcDogY29sb3JzX2V4cG9ydHNbdGltZXN0YW1wQ29sb3JdLFxuICAgICAgcHJlZml4OiBjb2xvcnNfZXhwb3J0c1twcmVmaXhDb2xvcl1cbiAgICB9O1xuICAgIGNvbnN0IHdyaXRlID0gdGhpcy5nZXRXcml0ZXIobGV2ZWwpO1xuICAgIHdyaXRlKFxuICAgICAgW2NvbG9yaXplLnRpbWVzdGFtcCh0aGlzLmZvcm1hdFRpbWVzdGFtcChlbnRyeS50aW1lc3RhbXApKV0uY29uY2F0KHByZWZpeCAhPSBudWxsID8gY29sb3JpemUucHJlZml4KHByZWZpeCkgOiBbXSkuY29uY2F0KHNlcmlhbGl6ZUlucHV0KG1lc3NhZ2UpKS5qb2luKFwiIFwiKSxcbiAgICAgIC4uLnBvc2l0aW9uYWxzLm1hcChzZXJpYWxpemVJbnB1dClcbiAgICApO1xuICB9XG4gIGZvcm1hdFRpbWVzdGFtcCh0aW1lc3RhbXApIHtcbiAgICByZXR1cm4gYCR7dGltZXN0YW1wLnRvTG9jYWxlVGltZVN0cmluZyhcbiAgICAgIFwiZW4tR0JcIlxuICAgICl9OiR7dGltZXN0YW1wLmdldE1pbGxpc2Vjb25kcygpfWA7XG4gIH1cbiAgZ2V0V3JpdGVyKGxldmVsKSB7XG4gICAgc3dpdGNoIChsZXZlbCkge1xuICAgICAgY2FzZSBcImRlYnVnXCI6XG4gICAgICBjYXNlIFwic3VjY2Vzc1wiOlxuICAgICAgY2FzZSBcImluZm9cIjoge1xuICAgICAgICByZXR1cm4gbG9nO1xuICAgICAgfVxuICAgICAgY2FzZSBcIndhcm5pbmdcIjoge1xuICAgICAgICByZXR1cm4gd2FybjtcbiAgICAgIH1cbiAgICAgIGNhc2UgXCJlcnJvclwiOiB7XG4gICAgICAgIHJldHVybiBlcnJvcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn07XG52YXIgUGVyZm9ybWFuY2VFbnRyeSA9IGNsYXNzIHtcbiAgc3RhcnRUaW1lO1xuICBlbmRUaW1lO1xuICBkZWx0YVRpbWU7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuc3RhcnRUaW1lID0gcGVyZm9ybWFuY2Uubm93KCk7XG4gIH1cbiAgbWVhc3VyZSgpIHtcbiAgICB0aGlzLmVuZFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKTtcbiAgICBjb25zdCBkZWx0YVRpbWUgPSB0aGlzLmVuZFRpbWUgLSB0aGlzLnN0YXJ0VGltZTtcbiAgICB0aGlzLmRlbHRhVGltZSA9IGRlbHRhVGltZS50b0ZpeGVkKDIpO1xuICB9XG59O1xudmFyIG5vb3AgPSAoKSA9PiB2b2lkIDA7XG5mdW5jdGlvbiBsb2cobWVzc2FnZSwgLi4ucG9zaXRpb25hbHMpIHtcbiAgaWYgKElTX05PREUpIHtcbiAgICBwcm9jZXNzLnN0ZG91dC53cml0ZShmb3JtYXQobWVzc2FnZSwgLi4ucG9zaXRpb25hbHMpICsgXCJcXG5cIik7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnNvbGUubG9nKG1lc3NhZ2UsIC4uLnBvc2l0aW9uYWxzKTtcbn1cbmZ1bmN0aW9uIHdhcm4obWVzc2FnZSwgLi4ucG9zaXRpb25hbHMpIHtcbiAgaWYgKElTX05PREUpIHtcbiAgICBwcm9jZXNzLnN0ZGVyci53cml0ZShmb3JtYXQobWVzc2FnZSwgLi4ucG9zaXRpb25hbHMpICsgXCJcXG5cIik7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnNvbGUud2FybihtZXNzYWdlLCAuLi5wb3NpdGlvbmFscyk7XG59XG5mdW5jdGlvbiBlcnJvcihtZXNzYWdlLCAuLi5wb3NpdGlvbmFscykge1xuICBpZiAoSVNfTk9ERSkge1xuICAgIHByb2Nlc3Muc3RkZXJyLndyaXRlKGZvcm1hdChtZXNzYWdlLCAuLi5wb3NpdGlvbmFscykgKyBcIlxcblwiKTtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc29sZS5lcnJvcihtZXNzYWdlLCAuLi5wb3NpdGlvbmFscyk7XG59XG5mdW5jdGlvbiBnZXRWYXJpYWJsZSh2YXJpYWJsZU5hbWUpIHtcbiAgaWYgKElTX05PREUpIHtcbiAgICByZXR1cm4gcHJvY2Vzcy5lbnZbdmFyaWFibGVOYW1lXTtcbiAgfVxuICByZXR1cm4gZ2xvYmFsVGhpc1t2YXJpYWJsZU5hbWVdPy50b1N0cmluZygpO1xufVxuZnVuY3Rpb24gaXNEZWZpbmVkQW5kTm90RXF1YWxzKHZhbHVlLCBleHBlY3RlZCkge1xuICByZXR1cm4gdmFsdWUgIT09IHZvaWQgMCAmJiB2YWx1ZSAhPT0gZXhwZWN0ZWQ7XG59XG5mdW5jdGlvbiBzZXJpYWxpemVJbnB1dChtZXNzYWdlKSB7XG4gIGlmICh0eXBlb2YgbWVzc2FnZSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiBcInVuZGVmaW5lZFwiO1xuICB9XG4gIGlmIChtZXNzYWdlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIFwibnVsbFwiO1xuICB9XG4gIGlmICh0eXBlb2YgbWVzc2FnZSA9PT0gXCJzdHJpbmdcIikge1xuICAgIHJldHVybiBtZXNzYWdlO1xuICB9XG4gIGlmICh0eXBlb2YgbWVzc2FnZSA9PT0gXCJvYmplY3RcIikge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShtZXNzYWdlKTtcbiAgfVxuICByZXR1cm4gbWVzc2FnZS50b1N0cmluZygpO1xufVxuXG4vLyBub2RlX21vZHVsZXMvLnBucG0vc3RyaWN0LWV2ZW50LWVtaXR0ZXJAMC41LjEvbm9kZV9tb2R1bGVzL3N0cmljdC1ldmVudC1lbWl0dGVyL2xpYi9pbmRleC5tanNcbnZhciBNZW1vcnlMZWFrRXJyb3IgPSBjbGFzcyBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IoZW1pdHRlciwgdHlwZSwgY291bnQpIHtcbiAgICBzdXBlcihcbiAgICAgIGBQb3NzaWJsZSBFdmVudEVtaXR0ZXIgbWVtb3J5IGxlYWsgZGV0ZWN0ZWQuICR7Y291bnR9ICR7dHlwZS50b1N0cmluZygpfSBsaXN0ZW5lcnMgYWRkZWQuIFVzZSBlbWl0dGVyLnNldE1heExpc3RlbmVycygpIHRvIGluY3JlYXNlIGxpbWl0YFxuICAgICk7XG4gICAgdGhpcy5lbWl0dGVyID0gZW1pdHRlcjtcbiAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgIHRoaXMuY291bnQgPSBjb3VudDtcbiAgICB0aGlzLm5hbWUgPSBcIk1heExpc3RlbmVyc0V4Y2VlZGVkV2FybmluZ1wiO1xuICB9XG59O1xudmFyIF9FbWl0dGVyID0gY2xhc3Mge1xuICBzdGF0aWMgbGlzdGVuZXJDb3VudChlbWl0dGVyLCBldmVudE5hbWUpIHtcbiAgICByZXR1cm4gZW1pdHRlci5saXN0ZW5lckNvdW50KGV2ZW50TmFtZSk7XG4gIH1cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5ldmVudHMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICAgIHRoaXMubWF4TGlzdGVuZXJzID0gX0VtaXR0ZXIuZGVmYXVsdE1heExpc3RlbmVycztcbiAgICB0aGlzLmhhc1dhcm5lZEFib3V0UG90ZW50aWFsTWVtb3J5TGVhayA9IGZhbHNlO1xuICB9XG4gIF9lbWl0SW50ZXJuYWxFdmVudChpbnRlcm5hbEV2ZW50TmFtZSwgZXZlbnROYW1lLCBsaXN0ZW5lcikge1xuICAgIHRoaXMuZW1pdChcbiAgICAgIGludGVybmFsRXZlbnROYW1lLFxuICAgICAgLi4uW2V2ZW50TmFtZSwgbGlzdGVuZXJdXG4gICAgKTtcbiAgfVxuICBfZ2V0TGlzdGVuZXJzKGV2ZW50TmFtZSkge1xuICAgIHJldHVybiBBcnJheS5wcm90b3R5cGUuY29uY2F0LmFwcGx5KFtdLCB0aGlzLmV2ZW50cy5nZXQoZXZlbnROYW1lKSkgfHwgW107XG4gIH1cbiAgX3JlbW92ZUxpc3RlbmVyKGxpc3RlbmVycywgbGlzdGVuZXIpIHtcbiAgICBjb25zdCBpbmRleCA9IGxpc3RlbmVycy5pbmRleE9mKGxpc3RlbmVyKTtcbiAgICBpZiAoaW5kZXggPiAtMSkge1xuICAgICAgbGlzdGVuZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgfVxuICAgIHJldHVybiBbXTtcbiAgfVxuICBfd3JhcE9uY2VMaXN0ZW5lcihldmVudE5hbWUsIGxpc3RlbmVyKSB7XG4gICAgY29uc3Qgb25jZUxpc3RlbmVyID0gKC4uLmRhdGEpID0+IHtcbiAgICAgIHRoaXMucmVtb3ZlTGlzdGVuZXIoZXZlbnROYW1lLCBvbmNlTGlzdGVuZXIpO1xuICAgICAgcmV0dXJuIGxpc3RlbmVyLmFwcGx5KHRoaXMsIGRhdGEpO1xuICAgIH07XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9uY2VMaXN0ZW5lciwgXCJuYW1lXCIsIHsgdmFsdWU6IGxpc3RlbmVyLm5hbWUgfSk7XG4gICAgcmV0dXJuIG9uY2VMaXN0ZW5lcjtcbiAgfVxuICBzZXRNYXhMaXN0ZW5lcnMobWF4TGlzdGVuZXJzKSB7XG4gICAgdGhpcy5tYXhMaXN0ZW5lcnMgPSBtYXhMaXN0ZW5lcnM7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGN1cnJlbnQgbWF4IGxpc3RlbmVyIHZhbHVlIGZvciB0aGUgYEVtaXR0ZXJgIHdoaWNoIGlzXG4gICAqIGVpdGhlciBzZXQgYnkgYGVtaXR0ZXIuc2V0TWF4TGlzdGVuZXJzKG4pYCBvciBkZWZhdWx0cyB0b1xuICAgKiBgRW1pdHRlci5kZWZhdWx0TWF4TGlzdGVuZXJzYC5cbiAgICovXG4gIGdldE1heExpc3RlbmVycygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXhMaXN0ZW5lcnM7XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybnMgYW4gYXJyYXkgbGlzdGluZyB0aGUgZXZlbnRzIGZvciB3aGljaCB0aGUgZW1pdHRlciBoYXMgcmVnaXN0ZXJlZCBsaXN0ZW5lcnMuXG4gICAqIFRoZSB2YWx1ZXMgaW4gdGhlIGFycmF5IHdpbGwgYmUgc3RyaW5ncyBvciBTeW1ib2xzLlxuICAgKi9cbiAgZXZlbnROYW1lcygpIHtcbiAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLmV2ZW50cy5rZXlzKCkpO1xuICB9XG4gIC8qKlxuICAgKiBTeW5jaHJvbm91c2x5IGNhbGxzIGVhY2ggb2YgdGhlIGxpc3RlbmVycyByZWdpc3RlcmVkIGZvciB0aGUgZXZlbnQgbmFtZWQgYGV2ZW50TmFtZWAsXG4gICAqIGluIHRoZSBvcmRlciB0aGV5IHdlcmUgcmVnaXN0ZXJlZCwgcGFzc2luZyB0aGUgc3VwcGxpZWQgYXJndW1lbnRzIHRvIGVhY2guXG4gICAqIFJldHVybnMgYHRydWVgIGlmIHRoZSBldmVudCBoYXMgbGlzdGVuZXJzLCBgZmFsc2VgIG90aGVyd2lzZS5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogY29uc3QgZW1pdHRlciA9IG5ldyBFbWl0dGVyPHsgaGVsbG86IFtzdHJpbmddIH0+KClcbiAgICogZW1pdHRlci5lbWl0KCdoZWxsbycsICdKb2huJylcbiAgICovXG4gIGVtaXQoZXZlbnROYW1lLCAuLi5kYXRhKSB7XG4gICAgY29uc3QgbGlzdGVuZXJzID0gdGhpcy5fZ2V0TGlzdGVuZXJzKGV2ZW50TmFtZSk7XG4gICAgbGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiB7XG4gICAgICBsaXN0ZW5lci5hcHBseSh0aGlzLCBkYXRhKTtcbiAgICB9KTtcbiAgICByZXR1cm4gbGlzdGVuZXJzLmxlbmd0aCA+IDA7XG4gIH1cbiAgYWRkTGlzdGVuZXIoZXZlbnROYW1lLCBsaXN0ZW5lcikge1xuICAgIHRoaXMuX2VtaXRJbnRlcm5hbEV2ZW50KFwibmV3TGlzdGVuZXJcIiwgZXZlbnROYW1lLCBsaXN0ZW5lcik7XG4gICAgY29uc3QgbmV4dExpc3RlbmVycyA9IHRoaXMuX2dldExpc3RlbmVycyhldmVudE5hbWUpLmNvbmNhdChsaXN0ZW5lcik7XG4gICAgdGhpcy5ldmVudHMuc2V0KGV2ZW50TmFtZSwgbmV4dExpc3RlbmVycyk7XG4gICAgaWYgKHRoaXMubWF4TGlzdGVuZXJzID4gMCAmJiB0aGlzLmxpc3RlbmVyQ291bnQoZXZlbnROYW1lKSA+IHRoaXMubWF4TGlzdGVuZXJzICYmICF0aGlzLmhhc1dhcm5lZEFib3V0UG90ZW50aWFsTWVtb3J5TGVhaykge1xuICAgICAgdGhpcy5oYXNXYXJuZWRBYm91dFBvdGVudGlhbE1lbW9yeUxlYWsgPSB0cnVlO1xuICAgICAgY29uc3QgbWVtb3J5TGVha1dhcm5pbmcgPSBuZXcgTWVtb3J5TGVha0Vycm9yKFxuICAgICAgICB0aGlzLFxuICAgICAgICBldmVudE5hbWUsXG4gICAgICAgIHRoaXMubGlzdGVuZXJDb3VudChldmVudE5hbWUpXG4gICAgICApO1xuICAgICAgY29uc29sZS53YXJuKG1lbW9yeUxlYWtXYXJuaW5nKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgb24oZXZlbnROYW1lLCBsaXN0ZW5lcikge1xuICAgIHJldHVybiB0aGlzLmFkZExpc3RlbmVyKGV2ZW50TmFtZSwgbGlzdGVuZXIpO1xuICB9XG4gIG9uY2UoZXZlbnROYW1lLCBsaXN0ZW5lcikge1xuICAgIHJldHVybiB0aGlzLmFkZExpc3RlbmVyKFxuICAgICAgZXZlbnROYW1lLFxuICAgICAgdGhpcy5fd3JhcE9uY2VMaXN0ZW5lcihldmVudE5hbWUsIGxpc3RlbmVyKVxuICAgICk7XG4gIH1cbiAgcHJlcGVuZExpc3RlbmVyKGV2ZW50TmFtZSwgbGlzdGVuZXIpIHtcbiAgICBjb25zdCBsaXN0ZW5lcnMgPSB0aGlzLl9nZXRMaXN0ZW5lcnMoZXZlbnROYW1lKTtcbiAgICBpZiAobGlzdGVuZXJzLmxlbmd0aCA+IDApIHtcbiAgICAgIGNvbnN0IG5leHRMaXN0ZW5lcnMgPSBbbGlzdGVuZXJdLmNvbmNhdChsaXN0ZW5lcnMpO1xuICAgICAgdGhpcy5ldmVudHMuc2V0KGV2ZW50TmFtZSwgbmV4dExpc3RlbmVycyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZXZlbnRzLnNldChldmVudE5hbWUsIGxpc3RlbmVycy5jb25jYXQobGlzdGVuZXIpKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgcHJlcGVuZE9uY2VMaXN0ZW5lcihldmVudE5hbWUsIGxpc3RlbmVyKSB7XG4gICAgcmV0dXJuIHRoaXMucHJlcGVuZExpc3RlbmVyKFxuICAgICAgZXZlbnROYW1lLFxuICAgICAgdGhpcy5fd3JhcE9uY2VMaXN0ZW5lcihldmVudE5hbWUsIGxpc3RlbmVyKVxuICAgICk7XG4gIH1cbiAgcmVtb3ZlTGlzdGVuZXIoZXZlbnROYW1lLCBsaXN0ZW5lcikge1xuICAgIGNvbnN0IGxpc3RlbmVycyA9IHRoaXMuX2dldExpc3RlbmVycyhldmVudE5hbWUpO1xuICAgIGlmIChsaXN0ZW5lcnMubGVuZ3RoID4gMCkge1xuICAgICAgdGhpcy5fcmVtb3ZlTGlzdGVuZXIobGlzdGVuZXJzLCBsaXN0ZW5lcik7XG4gICAgICB0aGlzLmV2ZW50cy5zZXQoZXZlbnROYW1lLCBsaXN0ZW5lcnMpO1xuICAgICAgdGhpcy5fZW1pdEludGVybmFsRXZlbnQoXCJyZW1vdmVMaXN0ZW5lclwiLCBldmVudE5hbWUsIGxpc3RlbmVyKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgLyoqXG4gICAqIEFsaWFzIGZvciBgZW1pdHRlci5yZW1vdmVMaXN0ZW5lcigpYC5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogZW1pdHRlci5vZmYoJ2hlbGxvJywgbGlzdGVuZXIpXG4gICAqL1xuICBvZmYoZXZlbnROYW1lLCBsaXN0ZW5lcikge1xuICAgIHJldHVybiB0aGlzLnJlbW92ZUxpc3RlbmVyKGV2ZW50TmFtZSwgbGlzdGVuZXIpO1xuICB9XG4gIHJlbW92ZUFsbExpc3RlbmVycyhldmVudE5hbWUpIHtcbiAgICBpZiAoZXZlbnROYW1lKSB7XG4gICAgICB0aGlzLmV2ZW50cy5kZWxldGUoZXZlbnROYW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5ldmVudHMuY2xlYXIoKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybnMgYSBjb3B5IG9mIHRoZSBhcnJheSBvZiBsaXN0ZW5lcnMgZm9yIHRoZSBldmVudCBuYW1lZCBgZXZlbnROYW1lYC5cbiAgICovXG4gIGxpc3RlbmVycyhldmVudE5hbWUpIHtcbiAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLl9nZXRMaXN0ZW5lcnMoZXZlbnROYW1lKSk7XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIG51bWJlciBvZiBsaXN0ZW5lcnMgbGlzdGVuaW5nIHRvIHRoZSBldmVudCBuYW1lZCBgZXZlbnROYW1lYC5cbiAgICovXG4gIGxpc3RlbmVyQ291bnQoZXZlbnROYW1lKSB7XG4gICAgcmV0dXJuIHRoaXMuX2dldExpc3RlbmVycyhldmVudE5hbWUpLmxlbmd0aDtcbiAgfVxuICByYXdMaXN0ZW5lcnMoZXZlbnROYW1lKSB7XG4gICAgcmV0dXJuIHRoaXMubGlzdGVuZXJzKGV2ZW50TmFtZSk7XG4gIH1cbn07XG52YXIgRW1pdHRlciA9IF9FbWl0dGVyO1xuRW1pdHRlci5kZWZhdWx0TWF4TGlzdGVuZXJzID0gMTA7XG5cbi8vIG5vZGVfbW9kdWxlcy8ucG5wbS9AbXN3anMraW50ZXJjZXB0b3JzQDAuMjkuMC9ub2RlX21vZHVsZXMvQG1zd2pzL2ludGVyY2VwdG9ycy9saWIvYnJvd3Nlci9jaHVuay1RRUQzUTZaMi5tanNcbnZhciBJTlRFUk5BTF9SRVFVRVNUX0lEX0hFQURFUl9OQU1FID0gXCJ4LWludGVyY2VwdG9ycy1pbnRlcm5hbC1yZXF1ZXN0LWlkXCI7XG5mdW5jdGlvbiBnZXRHbG9iYWxTeW1ib2woc3ltYm9sKSB7XG4gIHJldHVybiAoXG4gICAgLy8gQHRzLWlnbm9yZSBodHRwczovL2dpdGh1Yi5jb20vTWljcm9zb2Z0L1R5cGVTY3JpcHQvaXNzdWVzLzI0NTg3XG4gICAgZ2xvYmFsVGhpc1tzeW1ib2xdIHx8IHZvaWQgMFxuICApO1xufVxuZnVuY3Rpb24gc2V0R2xvYmFsU3ltYm9sKHN5bWJvbCwgdmFsdWUpIHtcbiAgZ2xvYmFsVGhpc1tzeW1ib2xdID0gdmFsdWU7XG59XG5mdW5jdGlvbiBkZWxldGVHbG9iYWxTeW1ib2woc3ltYm9sKSB7XG4gIGRlbGV0ZSBnbG9iYWxUaGlzW3N5bWJvbF07XG59XG52YXIgSW50ZXJjZXB0b3IgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKHN5bWJvbCkge1xuICAgIHRoaXMuc3ltYm9sID0gc3ltYm9sO1xuICAgIHRoaXMucmVhZHlTdGF0ZSA9IFwiSU5BQ1RJVkVcIjtcbiAgICB0aGlzLmVtaXR0ZXIgPSBuZXcgRW1pdHRlcigpO1xuICAgIHRoaXMuc3Vic2NyaXB0aW9ucyA9IFtdO1xuICAgIHRoaXMubG9nZ2VyID0gbmV3IExvZ2dlcihzeW1ib2wuZGVzY3JpcHRpb24pO1xuICAgIHRoaXMuZW1pdHRlci5zZXRNYXhMaXN0ZW5lcnMoMCk7XG4gICAgdGhpcy5sb2dnZXIuaW5mbyhcImNvbnN0cnVjdGluZyB0aGUgaW50ZXJjZXB0b3IuLi5cIik7XG4gIH1cbiAgLyoqXG4gICAqIERldGVybWluZSBpZiB0aGlzIGludGVyY2VwdG9yIGNhbiBiZSBhcHBsaWVkXG4gICAqIGluIHRoZSBjdXJyZW50IGVudmlyb25tZW50LlxuICAgKi9cbiAgY2hlY2tFbnZpcm9ubWVudCgpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICAvKipcbiAgICogQXBwbHkgdGhpcyBpbnRlcmNlcHRvciB0byB0aGUgY3VycmVudCBwcm9jZXNzLlxuICAgKiBSZXR1cm5zIGFuIGFscmVhZHkgcnVubmluZyBpbnRlcmNlcHRvciBpbnN0YW5jZSBpZiBpdCdzIHByZXNlbnQuXG4gICAqL1xuICBhcHBseSgpIHtcbiAgICBjb25zdCBsb2dnZXIgPSB0aGlzLmxvZ2dlci5leHRlbmQoXCJhcHBseVwiKTtcbiAgICBsb2dnZXIuaW5mbyhcImFwcGx5aW5nIHRoZSBpbnRlcmNlcHRvci4uLlwiKTtcbiAgICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSBcIkFQUExJRURcIikge1xuICAgICAgbG9nZ2VyLmluZm8oXCJpbnRlcmNlcHRlZCBhbHJlYWR5IGFwcGxpZWQhXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBzaG91bGRBcHBseSA9IHRoaXMuY2hlY2tFbnZpcm9ubWVudCgpO1xuICAgIGlmICghc2hvdWxkQXBwbHkpIHtcbiAgICAgIGxvZ2dlci5pbmZvKFwidGhlIGludGVyY2VwdG9yIGNhbm5vdCBiZSBhcHBsaWVkIGluIHRoaXMgZW52aXJvbm1lbnQhXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLnJlYWR5U3RhdGUgPSBcIkFQUExZSU5HXCI7XG4gICAgY29uc3QgcnVubmluZ0luc3RhbmNlID0gdGhpcy5nZXRJbnN0YW5jZSgpO1xuICAgIGlmIChydW5uaW5nSW5zdGFuY2UpIHtcbiAgICAgIGxvZ2dlci5pbmZvKFwiZm91bmQgYSBydW5uaW5nIGluc3RhbmNlLCByZXVzaW5nLi4uXCIpO1xuICAgICAgdGhpcy5vbiA9IChldmVudCwgbGlzdGVuZXIpID0+IHtcbiAgICAgICAgbG9nZ2VyLmluZm8oJ3Byb3h5aW5nIHRoZSBcIiVzXCIgbGlzdGVuZXInLCBldmVudCk7XG4gICAgICAgIHJ1bm5pbmdJbnN0YW5jZS5lbWl0dGVyLmFkZExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5wdXNoKCgpID0+IHtcbiAgICAgICAgICBydW5uaW5nSW5zdGFuY2UuZW1pdHRlci5yZW1vdmVMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIpO1xuICAgICAgICAgIGxvZ2dlci5pbmZvKCdyZW1vdmVkIHByb3hpZWQgXCIlc1wiIGxpc3RlbmVyIScsIGV2ZW50KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfTtcbiAgICAgIHRoaXMucmVhZHlTdGF0ZSA9IFwiQVBQTElFRFwiO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsb2dnZXIuaW5mbyhcIm5vIHJ1bm5pbmcgaW5zdGFuY2UgZm91bmQsIHNldHRpbmcgdXAgYSBuZXcgaW5zdGFuY2UuLi5cIik7XG4gICAgdGhpcy5zZXR1cCgpO1xuICAgIHRoaXMuc2V0SW5zdGFuY2UoKTtcbiAgICB0aGlzLnJlYWR5U3RhdGUgPSBcIkFQUExJRURcIjtcbiAgfVxuICAvKipcbiAgICogU2V0dXAgdGhlIG1vZHVsZSBhdWdtZW50cyBhbmQgc3R1YnMgbmVjZXNzYXJ5IGZvciB0aGlzIGludGVyY2VwdG9yLlxuICAgKiBUaGlzIG1ldGhvZCBpcyBub3QgcnVuIGlmIHRoZXJlJ3MgYSBydW5uaW5nIGludGVyY2VwdG9yIGluc3RhbmNlXG4gICAqIHRvIHByZXZlbnQgaW5zdGFudGlhdGluZyBhbiBpbnRlcmNlcHRvciBtdWx0aXBsZSB0aW1lcy5cbiAgICovXG4gIHNldHVwKCkge1xuICB9XG4gIC8qKlxuICAgKiBMaXN0ZW4gdG8gdGhlIGludGVyY2VwdG9yJ3MgcHVibGljIGV2ZW50cy5cbiAgICovXG4gIG9uKGV2ZW50LCBsaXN0ZW5lcikge1xuICAgIGNvbnN0IGxvZ2dlciA9IHRoaXMubG9nZ2VyLmV4dGVuZChcIm9uXCIpO1xuICAgIGlmICh0aGlzLnJlYWR5U3RhdGUgPT09IFwiRElTUE9TSU5HXCIgfHwgdGhpcy5yZWFkeVN0YXRlID09PSBcIkRJU1BPU0VEXCIpIHtcbiAgICAgIGxvZ2dlci5pbmZvKFwiY2Fubm90IGxpc3RlbiB0byBldmVudHMsIGFscmVhZHkgZGlzcG9zZWQhXCIpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGxvZ2dlci5pbmZvKCdhZGRpbmcgXCIlc1wiIGV2ZW50IGxpc3RlbmVyOicsIGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgdGhpcy5lbWl0dGVyLm9uKGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgb25jZShldmVudCwgbGlzdGVuZXIpIHtcbiAgICB0aGlzLmVtaXR0ZXIub25jZShldmVudCwgbGlzdGVuZXIpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIG9mZihldmVudCwgbGlzdGVuZXIpIHtcbiAgICB0aGlzLmVtaXR0ZXIub2ZmKGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgcmVtb3ZlQWxsTGlzdGVuZXJzKGV2ZW50KSB7XG4gICAgdGhpcy5lbWl0dGVyLnJlbW92ZUFsbExpc3RlbmVycyhldmVudCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgLyoqXG4gICAqIERpc3Bvc2VzIG9mIGFueSBzaWRlLWVmZmVjdHMgdGhpcyBpbnRlcmNlcHRvciBoYXMgaW50cm9kdWNlZC5cbiAgICovXG4gIGRpc3Bvc2UoKSB7XG4gICAgY29uc3QgbG9nZ2VyID0gdGhpcy5sb2dnZXIuZXh0ZW5kKFwiZGlzcG9zZVwiKTtcbiAgICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSBcIkRJU1BPU0VEXCIpIHtcbiAgICAgIGxvZ2dlci5pbmZvKFwiY2Fubm90IGRpc3Bvc2UsIGFscmVhZHkgZGlzcG9zZWQhXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsb2dnZXIuaW5mbyhcImRpc3Bvc2luZyB0aGUgaW50ZXJjZXB0b3IuLi5cIik7XG4gICAgdGhpcy5yZWFkeVN0YXRlID0gXCJESVNQT1NJTkdcIjtcbiAgICBpZiAoIXRoaXMuZ2V0SW5zdGFuY2UoKSkge1xuICAgICAgbG9nZ2VyLmluZm8oXCJubyBpbnRlcmNlcHRvcnMgcnVubmluZywgc2tpcHBpbmcgZGlzcG9zZS4uLlwiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5jbGVhckluc3RhbmNlKCk7XG4gICAgbG9nZ2VyLmluZm8oXCJnbG9iYWwgc3ltYm9sIGRlbGV0ZWQ6XCIsIGdldEdsb2JhbFN5bWJvbCh0aGlzLnN5bWJvbCkpO1xuICAgIGlmICh0aGlzLnN1YnNjcmlwdGlvbnMubGVuZ3RoID4gMCkge1xuICAgICAgbG9nZ2VyLmluZm8oXCJkaXNwb3Npbmcgb2YgJWQgc3Vic2NyaXB0aW9ucy4uLlwiLCB0aGlzLnN1YnNjcmlwdGlvbnMubGVuZ3RoKTtcbiAgICAgIGZvciAoY29uc3QgZGlzcG9zZSBvZiB0aGlzLnN1YnNjcmlwdGlvbnMpIHtcbiAgICAgICAgZGlzcG9zZSgpO1xuICAgICAgfVxuICAgICAgdGhpcy5zdWJzY3JpcHRpb25zID0gW107XG4gICAgICBsb2dnZXIuaW5mbyhcImRpc3Bvc2VkIG9mIGFsbCBzdWJzY3JpcHRpb25zIVwiLCB0aGlzLnN1YnNjcmlwdGlvbnMubGVuZ3RoKTtcbiAgICB9XG4gICAgdGhpcy5lbWl0dGVyLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICAgIGxvZ2dlci5pbmZvKFwiZGVzdHJveWVkIHRoZSBsaXN0ZW5lciFcIik7XG4gICAgdGhpcy5yZWFkeVN0YXRlID0gXCJESVNQT1NFRFwiO1xuICB9XG4gIGdldEluc3RhbmNlKCkge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCBpbnN0YW5jZSA9IGdldEdsb2JhbFN5bWJvbCh0aGlzLnN5bWJvbCk7XG4gICAgdGhpcy5sb2dnZXIuaW5mbyhcInJldHJpZXZlZCBnbG9iYWwgaW5zdGFuY2U6XCIsIChfYSA9IGluc3RhbmNlID09IG51bGwgPyB2b2lkIDAgOiBpbnN0YW5jZS5jb25zdHJ1Y3RvcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLm5hbWUpO1xuICAgIHJldHVybiBpbnN0YW5jZTtcbiAgfVxuICBzZXRJbnN0YW5jZSgpIHtcbiAgICBzZXRHbG9iYWxTeW1ib2wodGhpcy5zeW1ib2wsIHRoaXMpO1xuICAgIHRoaXMubG9nZ2VyLmluZm8oXCJzZXQgZ2xvYmFsIGluc3RhbmNlIVwiLCB0aGlzLnN5bWJvbC5kZXNjcmlwdGlvbik7XG4gIH1cbiAgY2xlYXJJbnN0YW5jZSgpIHtcbiAgICBkZWxldGVHbG9iYWxTeW1ib2wodGhpcy5zeW1ib2wpO1xuICAgIHRoaXMubG9nZ2VyLmluZm8oXCJjbGVhcmVkIGdsb2JhbCBpbnN0YW5jZSFcIiwgdGhpcy5zeW1ib2wuZGVzY3JpcHRpb24pO1xuICB9XG59O1xuZnVuY3Rpb24gY3JlYXRlUmVxdWVzdElkKCkge1xuICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygxNikuc2xpY2UoMik7XG59XG5cbi8vIG5vZGVfbW9kdWxlcy8ucG5wbS9AbXN3anMraW50ZXJjZXB0b3JzQDAuMjkuMC9ub2RlX21vZHVsZXMvQG1zd2pzL2ludGVyY2VwdG9ycy9saWIvYnJvd3Nlci9pbmRleC5tanNcbnZhciBCYXRjaEludGVyY2VwdG9yID0gY2xhc3MgZXh0ZW5kcyBJbnRlcmNlcHRvciB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBCYXRjaEludGVyY2VwdG9yLnN5bWJvbCA9IFN5bWJvbChvcHRpb25zLm5hbWUpO1xuICAgIHN1cGVyKEJhdGNoSW50ZXJjZXB0b3Iuc3ltYm9sKTtcbiAgICB0aGlzLmludGVyY2VwdG9ycyA9IG9wdGlvbnMuaW50ZXJjZXB0b3JzO1xuICB9XG4gIHNldHVwKCkge1xuICAgIGNvbnN0IGxvZ2dlciA9IHRoaXMubG9nZ2VyLmV4dGVuZChcInNldHVwXCIpO1xuICAgIGxvZ2dlci5pbmZvKFwiYXBwbHlpbmcgYWxsICVkIGludGVyY2VwdG9ycy4uLlwiLCB0aGlzLmludGVyY2VwdG9ycy5sZW5ndGgpO1xuICAgIGZvciAoY29uc3QgaW50ZXJjZXB0b3Igb2YgdGhpcy5pbnRlcmNlcHRvcnMpIHtcbiAgICAgIGxvZ2dlci5pbmZvKCdhcHBseWluZyBcIiVzXCIgaW50ZXJjZXB0b3IuLi4nLCBpbnRlcmNlcHRvci5jb25zdHJ1Y3Rvci5uYW1lKTtcbiAgICAgIGludGVyY2VwdG9yLmFwcGx5KCk7XG4gICAgICBsb2dnZXIuaW5mbyhcImFkZGluZyBpbnRlcmNlcHRvciBkaXNwb3NlIHN1YnNjcmlwdGlvblwiKTtcbiAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5wdXNoKCgpID0+IGludGVyY2VwdG9yLmRpc3Bvc2UoKSk7XG4gICAgfVxuICB9XG4gIG9uKGV2ZW50LCBsaXN0ZW5lcikge1xuICAgIGZvciAoY29uc3QgaW50ZXJjZXB0b3Igb2YgdGhpcy5pbnRlcmNlcHRvcnMpIHtcbiAgICAgIGludGVyY2VwdG9yLm9uKGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIG9uY2UoZXZlbnQsIGxpc3RlbmVyKSB7XG4gICAgZm9yIChjb25zdCBpbnRlcmNlcHRvciBvZiB0aGlzLmludGVyY2VwdG9ycykge1xuICAgICAgaW50ZXJjZXB0b3Iub25jZShldmVudCwgbGlzdGVuZXIpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBvZmYoZXZlbnQsIGxpc3RlbmVyKSB7XG4gICAgZm9yIChjb25zdCBpbnRlcmNlcHRvciBvZiB0aGlzLmludGVyY2VwdG9ycykge1xuICAgICAgaW50ZXJjZXB0b3Iub2ZmKGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIHJlbW92ZUFsbExpc3RlbmVycyhldmVudCkge1xuICAgIGZvciAoY29uc3QgaW50ZXJjZXB0b3JzIG9mIHRoaXMuaW50ZXJjZXB0b3JzKSB7XG4gICAgICBpbnRlcmNlcHRvcnMucmVtb3ZlQWxsTGlzdGVuZXJzKGV2ZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn07XG5cbi8vIHNyYy9icm93c2VyL3NldHVwV29ya2VyL3N0YXJ0L2NyZWF0ZVJlc3BvbnNlTGlzdGVuZXIudHNcbmZ1bmN0aW9uIGNyZWF0ZVJlc3BvbnNlTGlzdGVuZXIoY29udGV4dCkge1xuICByZXR1cm4gKF8sIG1lc3NhZ2UpID0+IHtcbiAgICBjb25zdCB7IHBheWxvYWQ6IHJlc3BvbnNlSnNvbiB9ID0gbWVzc2FnZTtcbiAgICBjb25zdCB7IHJlcXVlc3RJZCB9ID0gcmVzcG9uc2VKc29uO1xuICAgIGNvbnN0IHJlcXVlc3QgPSBjb250ZXh0LnJlcXVlc3RzLmdldChyZXF1ZXN0SWQpO1xuICAgIGNvbnRleHQucmVxdWVzdHMuZGVsZXRlKHJlcXVlc3RJZCk7XG4gICAgaWYgKHJlc3BvbnNlSnNvbi50eXBlPy5pbmNsdWRlcyhcIm9wYXF1ZVwiKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCByZXNwb25zZSA9IHJlc3BvbnNlSnNvbi5zdGF0dXMgPT09IDAgPyBSZXNwb25zZS5lcnJvcigpIDogbmV3IFJlc3BvbnNlKFxuICAgICAgLyoqXG4gICAgICAgKiBSZXNwb25zZXMgbWF5IGJlIHN0cmVhbXMgaGVyZSwgYnV0IHdoZW4gd2UgY3JlYXRlIGEgcmVzcG9uc2Ugb2JqZWN0XG4gICAgICAgKiB3aXRoIG51bGwtYm9keSBzdGF0dXMgY29kZXMsIGxpa2UgMjA0LCAyMDUsIDMwNCBSZXNwb25zZSB3aWxsXG4gICAgICAgKiB0aHJvdyB3aGVuIHBhc3NlZCBhIG5vbi1udWxsIGJvZHksIHNvIGVuc3VyZSBpdCdzIG51bGwgaGVyZVxuICAgICAgICogZm9yIHRob3NlIGNvZGVzXG4gICAgICAgKi9cbiAgICAgIGlzUmVzcG9uc2VXaXRob3V0Qm9keShyZXNwb25zZUpzb24uc3RhdHVzKSA/IG51bGwgOiByZXNwb25zZUpzb24uYm9keSxcbiAgICAgIHJlc3BvbnNlSnNvblxuICAgICk7XG4gICAgaWYgKCFyZXNwb25zZS51cmwpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXNwb25zZSwgXCJ1cmxcIiwge1xuICAgICAgICB2YWx1ZTogcmVxdWVzdC51cmwsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHdyaXRhYmxlOiBmYWxzZVxuICAgICAgfSk7XG4gICAgfVxuICAgIGNvbnRleHQuZW1pdHRlci5lbWl0KFxuICAgICAgcmVzcG9uc2VKc29uLmlzTW9ja2VkUmVzcG9uc2UgPyBcInJlc3BvbnNlOm1vY2tlZFwiIDogXCJyZXNwb25zZTpieXBhc3NcIixcbiAgICAgIHtcbiAgICAgICAgcmVzcG9uc2UsXG4gICAgICAgIHJlcXVlc3QsXG4gICAgICAgIHJlcXVlc3RJZDogcmVzcG9uc2VKc29uLnJlcXVlc3RJZFxuICAgICAgfVxuICAgICk7XG4gIH07XG59XG5cbi8vIHNyYy9icm93c2VyL3NldHVwV29ya2VyL3N0YXJ0L3V0aWxzL3ZhbGlkYXRlV29ya2VyU2NvcGUudHNcbmltcG9ydCB7IGRldlV0aWxzIGFzIGRldlV0aWxzNiB9IGZyb20gJy4uL2NvcmUvdXRpbHMvaW50ZXJuYWwvZGV2VXRpbHMubWpzJztcbmZ1bmN0aW9uIHZhbGlkYXRlV29ya2VyU2NvcGUocmVnaXN0cmF0aW9uLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucz8ucXVpZXQgJiYgIWxvY2F0aW9uLmhyZWYuc3RhcnRzV2l0aChyZWdpc3RyYXRpb24uc2NvcGUpKSB7XG4gICAgZGV2VXRpbHM2Lndhcm4oXG4gICAgICBgQ2Fubm90IGludGVyY2VwdCByZXF1ZXN0cyBvbiB0aGlzIHBhZ2UgYmVjYXVzZSBpdCdzIG91dHNpZGUgb2YgdGhlIHdvcmtlcidzIHNjb3BlIChcIiR7cmVnaXN0cmF0aW9uLnNjb3BlfVwiKS4gSWYgeW91IHdpc2ggdG8gbW9jayBBUEkgcmVxdWVzdHMgb24gdGhpcyBwYWdlLCB5b3UgbXVzdCByZXNvbHZlIHRoaXMgc2NvcGUgaXNzdWUuXG5cbi0gKFJlY29tbWVuZGVkKSBSZWdpc3RlciB0aGUgd29ya2VyIGF0IHRoZSByb290IGxldmVsIChcIi9cIikgb2YgeW91ciBhcHBsaWNhdGlvbi5cbi0gU2V0IHRoZSBcIlNlcnZpY2UtV29ya2VyLUFsbG93ZWRcIiByZXNwb25zZSBoZWFkZXIgdG8gYWxsb3cgb3V0LW9mLXNjb3BlIHdvcmtlcnMuYFxuICAgICk7XG4gIH1cbn1cblxuLy8gc3JjL2Jyb3dzZXIvc2V0dXBXb3JrZXIvc3RhcnQvY3JlYXRlU3RhcnRIYW5kbGVyLnRzXG52YXIgY3JlYXRlU3RhcnRIYW5kbGVyID0gKGNvbnRleHQpID0+IHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHN0YXJ0KG9wdGlvbnMsIGN1c3RvbU9wdGlvbnMpIHtcbiAgICBjb25zdCBzdGFydFdvcmtlckluc3RhbmNlID0gYXN5bmMgKCkgPT4ge1xuICAgICAgY29udGV4dC5ldmVudHMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gICAgICBjb250ZXh0LndvcmtlckNoYW5uZWwub24oXG4gICAgICAgIFwiUkVRVUVTVFwiLFxuICAgICAgICBjcmVhdGVSZXF1ZXN0TGlzdGVuZXIoY29udGV4dCwgb3B0aW9ucylcbiAgICAgICk7XG4gICAgICBjb250ZXh0LndvcmtlckNoYW5uZWwub24oXCJSRVNQT05TRVwiLCBjcmVhdGVSZXNwb25zZUxpc3RlbmVyKGNvbnRleHQpKTtcbiAgICAgIGNvbnN0IGluc3RhbmNlID0gYXdhaXQgZ2V0V29ya2VySW5zdGFuY2UoXG4gICAgICAgIG9wdGlvbnMuc2VydmljZVdvcmtlci51cmwsXG4gICAgICAgIG9wdGlvbnMuc2VydmljZVdvcmtlci5vcHRpb25zLFxuICAgICAgICBvcHRpb25zLmZpbmRXb3JrZXJcbiAgICAgICk7XG4gICAgICBjb25zdCBbd29ya2VyLCByZWdpc3RyYXRpb25dID0gaW5zdGFuY2U7XG4gICAgICBpZiAoIXdvcmtlcikge1xuICAgICAgICBjb25zdCBtaXNzaW5nV29ya2VyTWVzc2FnZSA9IGN1c3RvbU9wdGlvbnM/LmZpbmRXb3JrZXIgPyBkZXZVdGlsczcuZm9ybWF0TWVzc2FnZShcbiAgICAgICAgICBgRmFpbGVkIHRvIGxvY2F0ZSB0aGUgU2VydmljZSBXb3JrZXIgcmVnaXN0cmF0aW9uIHVzaW5nIGEgY3VzdG9tIFwiZmluZFdvcmtlclwiIHByZWRpY2F0ZS5cblxuUGxlYXNlIGVuc3VyZSB0aGF0IHRoZSBjdXN0b20gcHJlZGljYXRlIHByb3Blcmx5IGxvY2F0ZXMgdGhlIFNlcnZpY2UgV29ya2VyIHJlZ2lzdHJhdGlvbiBhdCBcIiVzXCIuXG5Nb3JlIGRldGFpbHM6IGh0dHBzOi8vbXN3anMuaW8vZG9jcy9hcGkvc2V0dXAtd29ya2VyL3N0YXJ0I2ZpbmR3b3JrZXJcbmAsXG4gICAgICAgICAgb3B0aW9ucy5zZXJ2aWNlV29ya2VyLnVybFxuICAgICAgICApIDogZGV2VXRpbHM3LmZvcm1hdE1lc3NhZ2UoXG4gICAgICAgICAgYEZhaWxlZCB0byBsb2NhdGUgdGhlIFNlcnZpY2UgV29ya2VyIHJlZ2lzdHJhdGlvbi5cblxuVGhpcyBtb3N0IGxpa2VseSBtZWFucyB0aGF0IHRoZSB3b3JrZXIgc2NyaXB0IFVSTCBcIiVzXCIgY2Fubm90IHJlc29sdmUgYWdhaW5zdCB0aGUgYWN0dWFsIHB1YmxpYyBob3N0bmFtZSAoJXMpLiBUaGlzIG1heSBoYXBwZW4gaWYgeW91ciBhcHBsaWNhdGlvbiBydW5zIGJlaGluZCBhIHByb3h5LCBvciBoYXMgYSBkeW5hbWljIGhvc3RuYW1lLlxuXG5QbGVhc2UgY29uc2lkZXIgdXNpbmcgYSBjdXN0b20gXCJzZXJ2aWNlV29ya2VyLnVybFwiIG9wdGlvbiB0byBwb2ludCB0byB0aGUgYWN0dWFsIHdvcmtlciBzY3JpcHQgbG9jYXRpb24sIG9yIGEgY3VzdG9tIFwiZmluZFdvcmtlclwiIG9wdGlvbiB0byByZXNvbHZlIHRoZSBTZXJ2aWNlIFdvcmtlciByZWdpc3RyYXRpb24gbWFudWFsbHkuIE1vcmUgZGV0YWlsczogaHR0cHM6Ly9tc3dqcy5pby9kb2NzL2FwaS9zZXR1cC13b3JrZXIvc3RhcnRgLFxuICAgICAgICAgIG9wdGlvbnMuc2VydmljZVdvcmtlci51cmwsXG4gICAgICAgICAgbG9jYXRpb24uaG9zdFxuICAgICAgICApO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobWlzc2luZ1dvcmtlck1lc3NhZ2UpO1xuICAgICAgfVxuICAgICAgY29udGV4dC53b3JrZXIgPSB3b3JrZXI7XG4gICAgICBjb250ZXh0LnJlZ2lzdHJhdGlvbiA9IHJlZ2lzdHJhdGlvbjtcbiAgICAgIGNvbnRleHQuZXZlbnRzLmFkZExpc3RlbmVyKHdpbmRvdywgXCJiZWZvcmV1bmxvYWRcIiwgKCkgPT4ge1xuICAgICAgICBpZiAod29ya2VyLnN0YXRlICE9PSBcInJlZHVuZGFudFwiKSB7XG4gICAgICAgICAgY29udGV4dC53b3JrZXJDaGFubmVsLnNlbmQoXCJDTElFTlRfQ0xPU0VEXCIpO1xuICAgICAgICB9XG4gICAgICAgIHdpbmRvdy5jbGVhckludGVydmFsKGNvbnRleHQua2VlcEFsaXZlSW50ZXJ2YWwpO1xuICAgICAgfSk7XG4gICAgICBhd2FpdCBjaGVja1dvcmtlckludGVncml0eShjb250ZXh0KS5jYXRjaCgoZXJyb3IyKSA9PiB7XG4gICAgICAgIGRldlV0aWxzNy5lcnJvcihcbiAgICAgICAgICBcIkVycm9yIHdoaWxlIGNoZWNraW5nIHRoZSB3b3JrZXIgc2NyaXB0IGludGVncml0eS4gUGxlYXNlIHJlcG9ydCB0aGlzIG9uIEdpdEh1YiAoaHR0cHM6Ly9naXRodWIuY29tL21zd2pzL21zdy9pc3N1ZXMpLCBpbmNsdWRpbmcgdGhlIG9yaWdpbmFsIGVycm9yIGJlbG93LlwiXG4gICAgICAgICk7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IyKTtcbiAgICAgIH0pO1xuICAgICAgY29udGV4dC5rZWVwQWxpdmVJbnRlcnZhbCA9IHdpbmRvdy5zZXRJbnRlcnZhbChcbiAgICAgICAgKCkgPT4gY29udGV4dC53b3JrZXJDaGFubmVsLnNlbmQoXCJLRUVQQUxJVkVfUkVRVUVTVFwiKSxcbiAgICAgICAgNWUzXG4gICAgICApO1xuICAgICAgdmFsaWRhdGVXb3JrZXJTY29wZShyZWdpc3RyYXRpb24sIGNvbnRleHQuc3RhcnRPcHRpb25zKTtcbiAgICAgIHJldHVybiByZWdpc3RyYXRpb247XG4gICAgfTtcbiAgICBjb25zdCB3b3JrZXJSZWdpc3RyYXRpb24gPSBzdGFydFdvcmtlckluc3RhbmNlKCkudGhlbihcbiAgICAgIGFzeW5jIChyZWdpc3RyYXRpb24pID0+IHtcbiAgICAgICAgY29uc3QgcGVuZGluZ0luc3RhbmNlID0gcmVnaXN0cmF0aW9uLmluc3RhbGxpbmcgfHwgcmVnaXN0cmF0aW9uLndhaXRpbmc7XG4gICAgICAgIGlmIChwZW5kaW5nSW5zdGFuY2UpIHtcbiAgICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICAgICAgcGVuZGluZ0luc3RhbmNlLmFkZEV2ZW50TGlzdGVuZXIoXCJzdGF0ZWNoYW5nZVwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgIGlmIChwZW5kaW5nSW5zdGFuY2Uuc3RhdGUgPT09IFwiYWN0aXZhdGVkXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzb2x2ZSgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBhd2FpdCBlbmFibGVNb2NraW5nKGNvbnRleHQsIG9wdGlvbnMpLmNhdGNoKChlcnJvcjIpID0+IHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBlbmFibGUgbW9ja2luZzogJHtlcnJvcjI/Lm1lc3NhZ2V9YCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVnaXN0cmF0aW9uO1xuICAgICAgfVxuICAgICk7XG4gICAgcmV0dXJuIHdvcmtlclJlZ2lzdHJhdGlvbjtcbiAgfTtcbn07XG5cbi8vIHNyYy9icm93c2VyL3NldHVwV29ya2VyL3N0b3AvY3JlYXRlU3RvcC50c1xuaW1wb3J0IHsgZGV2VXRpbHMgYXMgZGV2VXRpbHM5IH0gZnJvbSAnLi4vY29yZS91dGlscy9pbnRlcm5hbC9kZXZVdGlscy5tanMnO1xuXG4vLyBzcmMvYnJvd3Nlci9zZXR1cFdvcmtlci9zdG9wL3V0aWxzL3ByaW50U3RvcE1lc3NhZ2UudHNcbmltcG9ydCB7IGRldlV0aWxzIGFzIGRldlV0aWxzOCB9IGZyb20gJy4uL2NvcmUvdXRpbHMvaW50ZXJuYWwvZGV2VXRpbHMubWpzJztcbmZ1bmN0aW9uIHByaW50U3RvcE1lc3NhZ2UoYXJncyA9IHt9KSB7XG4gIGlmIChhcmdzLnF1aWV0KSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnNvbGUubG9nKFxuICAgIGAlYyR7ZGV2VXRpbHM4LmZvcm1hdE1lc3NhZ2UoXCJNb2NraW5nIGRpc2FibGVkLlwiKX1gLFxuICAgIFwiY29sb3I6b3JhbmdlcmVkO2ZvbnQtd2VpZ2h0OmJvbGQ7XCJcbiAgKTtcbn1cblxuLy8gc3JjL2Jyb3dzZXIvc2V0dXBXb3JrZXIvc3RvcC9jcmVhdGVTdG9wLnRzXG52YXIgY3JlYXRlU3RvcCA9IChjb250ZXh0KSA9PiB7XG4gIHJldHVybiBmdW5jdGlvbiBzdG9wKCkge1xuICAgIGlmICghY29udGV4dC5pc01vY2tpbmdFbmFibGVkKSB7XG4gICAgICBkZXZVdGlsczkud2FybihcbiAgICAgICAgJ0ZvdW5kIGEgcmVkdW5kYW50IFwid29ya2VyLnN0b3AoKVwiIGNhbGwuIE5vdGUgdGhhdCBzdG9wcGluZyB0aGUgd29ya2VyIHdoaWxlIG1vY2tpbmcgYWxyZWFkeSBzdG9wcGVkIGhhcyBubyBlZmZlY3QuIENvbnNpZGVyIHJlbW92aW5nIHRoaXMgXCJ3b3JrZXIuc3RvcCgpXCIgY2FsbC4nXG4gICAgICApO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb250ZXh0LndvcmtlckNoYW5uZWwuc2VuZChcIk1PQ0tfREVBQ1RJVkFURVwiKTtcbiAgICBjb250ZXh0LmlzTW9ja2luZ0VuYWJsZWQgPSBmYWxzZTtcbiAgICB3aW5kb3cuY2xlYXJJbnRlcnZhbChjb250ZXh0LmtlZXBBbGl2ZUludGVydmFsKTtcbiAgICBwcmludFN0b3BNZXNzYWdlKHsgcXVpZXQ6IGNvbnRleHQuc3RhcnRPcHRpb25zPy5xdWlldCB9KTtcbiAgfTtcbn07XG5cbi8vIHNyYy9icm93c2VyL3NldHVwV29ya2VyL3N0YXJ0L3V0aWxzL3ByZXBhcmVTdGFydEhhbmRsZXIudHNcbmltcG9ydCB7IG1lcmdlUmlnaHQgfSBmcm9tICcuLi9jb3JlL3V0aWxzL2ludGVybmFsL21lcmdlUmlnaHQubWpzJztcbnZhciBERUZBVUxUX1NUQVJUX09QVElPTlMgPSB7XG4gIHNlcnZpY2VXb3JrZXI6IHtcbiAgICB1cmw6IFwiL21vY2tTZXJ2aWNlV29ya2VyLmpzXCIsXG4gICAgb3B0aW9uczogbnVsbFxuICB9LFxuICBxdWlldDogZmFsc2UsXG4gIHdhaXRVbnRpbFJlYWR5OiB0cnVlLFxuICBvblVuaGFuZGxlZFJlcXVlc3Q6IFwid2FyblwiLFxuICBmaW5kV29ya2VyKHNjcmlwdFVSTCwgbW9ja1NlcnZpY2VXb3JrZXJVcmwpIHtcbiAgICByZXR1cm4gc2NyaXB0VVJMID09PSBtb2NrU2VydmljZVdvcmtlclVybDtcbiAgfVxufTtcblxuLy8gbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuLWRyYWZ0K2RlZmVycmVkLXByb21pc2VAMi4yLjAvbm9kZV9tb2R1bGVzL0BvcGVuLWRyYWZ0L2RlZmVycmVkLXByb21pc2UvYnVpbGQvaW5kZXgubWpzXG5mdW5jdGlvbiBjcmVhdGVEZWZlcnJlZEV4ZWN1dG9yKCkge1xuICBjb25zdCBleGVjdXRvciA9IChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBleGVjdXRvci5zdGF0ZSA9IFwicGVuZGluZ1wiO1xuICAgIGV4ZWN1dG9yLnJlc29sdmUgPSAoZGF0YSkgPT4ge1xuICAgICAgaWYgKGV4ZWN1dG9yLnN0YXRlICE9PSBcInBlbmRpbmdcIikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBleGVjdXRvci5yZXN1bHQgPSBkYXRhO1xuICAgICAgY29uc3Qgb25GdWxmaWxsZWQgPSAodmFsdWUpID0+IHtcbiAgICAgICAgZXhlY3V0b3Iuc3RhdGUgPSBcImZ1bGZpbGxlZFwiO1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIHJlc29sdmUoXG4gICAgICAgIGRhdGEgaW5zdGFuY2VvZiBQcm9taXNlID8gZGF0YSA6IFByb21pc2UucmVzb2x2ZShkYXRhKS50aGVuKG9uRnVsZmlsbGVkKVxuICAgICAgKTtcbiAgICB9O1xuICAgIGV4ZWN1dG9yLnJlamVjdCA9IChyZWFzb24pID0+IHtcbiAgICAgIGlmIChleGVjdXRvci5zdGF0ZSAhPT0gXCJwZW5kaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgcXVldWVNaWNyb3Rhc2soKCkgPT4ge1xuICAgICAgICBleGVjdXRvci5zdGF0ZSA9IFwicmVqZWN0ZWRcIjtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHJlamVjdChleGVjdXRvci5yZWplY3Rpb25SZWFzb24gPSByZWFzb24pO1xuICAgIH07XG4gIH07XG4gIHJldHVybiBleGVjdXRvcjtcbn1cbnZhciBEZWZlcnJlZFByb21pc2UgPSBjbGFzcyBleHRlbmRzIFByb21pc2Uge1xuICAjZXhlY3V0b3I7XG4gIHJlc29sdmU7XG4gIHJlamVjdDtcbiAgY29uc3RydWN0b3IoZXhlY3V0b3IgPSBudWxsKSB7XG4gICAgY29uc3QgZGVmZXJyZWRFeGVjdXRvciA9IGNyZWF0ZURlZmVycmVkRXhlY3V0b3IoKTtcbiAgICBzdXBlcigob3JpZ2luYWxSZXNvbHZlLCBvcmlnaW5hbFJlamVjdCkgPT4ge1xuICAgICAgZGVmZXJyZWRFeGVjdXRvcihvcmlnaW5hbFJlc29sdmUsIG9yaWdpbmFsUmVqZWN0KTtcbiAgICAgIGV4ZWN1dG9yPy4oZGVmZXJyZWRFeGVjdXRvci5yZXNvbHZlLCBkZWZlcnJlZEV4ZWN1dG9yLnJlamVjdCk7XG4gICAgfSk7XG4gICAgdGhpcy4jZXhlY3V0b3IgPSBkZWZlcnJlZEV4ZWN1dG9yO1xuICAgIHRoaXMucmVzb2x2ZSA9IHRoaXMuI2V4ZWN1dG9yLnJlc29sdmU7XG4gICAgdGhpcy5yZWplY3QgPSB0aGlzLiNleGVjdXRvci5yZWplY3Q7XG4gIH1cbiAgZ2V0IHN0YXRlKCkge1xuICAgIHJldHVybiB0aGlzLiNleGVjdXRvci5zdGF0ZTtcbiAgfVxuICBnZXQgcmVqZWN0aW9uUmVhc29uKCkge1xuICAgIHJldHVybiB0aGlzLiNleGVjdXRvci5yZWplY3Rpb25SZWFzb247XG4gIH1cbiAgdGhlbihvbkZ1bGZpbGxlZCwgb25SZWplY3RlZCkge1xuICAgIHJldHVybiB0aGlzLiNkZWNvcmF0ZShzdXBlci50aGVuKG9uRnVsZmlsbGVkLCBvblJlamVjdGVkKSk7XG4gIH1cbiAgY2F0Y2gob25SZWplY3RlZCkge1xuICAgIHJldHVybiB0aGlzLiNkZWNvcmF0ZShzdXBlci5jYXRjaChvblJlamVjdGVkKSk7XG4gIH1cbiAgZmluYWxseShvbmZpbmFsbHkpIHtcbiAgICByZXR1cm4gdGhpcy4jZGVjb3JhdGUoc3VwZXIuZmluYWxseShvbmZpbmFsbHkpKTtcbiAgfVxuICAjZGVjb3JhdGUocHJvbWlzZSkge1xuICAgIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhwcm9taXNlLCB7XG4gICAgICByZXNvbHZlOiB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSwgdmFsdWU6IHRoaXMucmVzb2x2ZSB9LFxuICAgICAgcmVqZWN0OiB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSwgdmFsdWU6IHRoaXMucmVqZWN0IH1cbiAgICB9KTtcbiAgfVxufTtcblxuLy8gbm9kZV9tb2R1bGVzLy5wbnBtL0Btc3dqcytpbnRlcmNlcHRvcnNAMC4yOS4wL25vZGVfbW9kdWxlcy9AbXN3anMvaW50ZXJjZXB0b3JzL2xpYi9icm93c2VyL2NodW5rLU9VV0JRRjNaLm1qc1xudmFyIFJlcXVlc3RDb250cm9sbGVyID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcihyZXF1ZXN0KSB7XG4gICAgdGhpcy5yZXF1ZXN0ID0gcmVxdWVzdDtcbiAgICB0aGlzLnJlc3BvbnNlUHJvbWlzZSA9IG5ldyBEZWZlcnJlZFByb21pc2UoKTtcbiAgfVxuICByZXNwb25kV2l0aChyZXNwb25zZSkge1xuICAgIGludmFyaWFudChcbiAgICAgIHRoaXMucmVzcG9uc2VQcm9taXNlLnN0YXRlID09PSBcInBlbmRpbmdcIixcbiAgICAgICdGYWlsZWQgdG8gcmVzcG9uZCB0byBcIiVzICVzXCIgcmVxdWVzdDogdGhlIFwicmVxdWVzdFwiIGV2ZW50IGhhcyBhbHJlYWR5IGJlZW4gcmVzcG9uZGVkIHRvLicsXG4gICAgICB0aGlzLnJlcXVlc3QubWV0aG9kLFxuICAgICAgdGhpcy5yZXF1ZXN0LnVybFxuICAgICk7XG4gICAgdGhpcy5yZXNwb25zZVByb21pc2UucmVzb2x2ZShyZXNwb25zZSk7XG4gIH1cbn07XG5mdW5jdGlvbiB0b0ludGVyYWN0aXZlUmVxdWVzdChyZXF1ZXN0KSB7XG4gIGNvbnN0IHJlcXVlc3RDb250cm9sbGVyID0gbmV3IFJlcXVlc3RDb250cm9sbGVyKHJlcXVlc3QpO1xuICBSZWZsZWN0LnNldChcbiAgICByZXF1ZXN0LFxuICAgIFwicmVzcG9uZFdpdGhcIixcbiAgICByZXF1ZXN0Q29udHJvbGxlci5yZXNwb25kV2l0aC5iaW5kKHJlcXVlc3RDb250cm9sbGVyKVxuICApO1xuICByZXR1cm4ge1xuICAgIGludGVyYWN0aXZlUmVxdWVzdDogcmVxdWVzdCxcbiAgICByZXF1ZXN0Q29udHJvbGxlclxuICB9O1xufVxuYXN5bmMgZnVuY3Rpb24gZW1pdEFzeW5jKGVtaXR0ZXIsIGV2ZW50TmFtZSwgLi4uZGF0YSkge1xuICBjb25zdCBsaXN0bmVycyA9IGVtaXR0ZXIubGlzdGVuZXJzKGV2ZW50TmFtZSk7XG4gIGlmIChsaXN0bmVycy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgZm9yIChjb25zdCBsaXN0ZW5lciBvZiBsaXN0bmVycykge1xuICAgIGF3YWl0IGxpc3RlbmVyLmFwcGx5KGVtaXR0ZXIsIGRhdGEpO1xuICB9XG59XG5cbi8vIG5vZGVfbW9kdWxlcy8ucG5wbS9AbXN3anMraW50ZXJjZXB0b3JzQDAuMjkuMC9ub2RlX21vZHVsZXMvQG1zd2pzL2ludGVyY2VwdG9ycy9saWIvYnJvd3Nlci9jaHVuay1NQUVQT1lCNi5tanNcbmZ1bmN0aW9uIGNhblBhcnNlVXJsKHVybCkge1xuICB0cnkge1xuICAgIG5ldyBVUkwodXJsKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoX2Vycm9yKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG52YXIgX0ZldGNoSW50ZXJjZXB0b3IgPSBjbGFzcyBleHRlbmRzIEludGVyY2VwdG9yIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoX0ZldGNoSW50ZXJjZXB0b3Iuc3ltYm9sKTtcbiAgfVxuICBjaGVja0Vudmlyb25tZW50KCkge1xuICAgIHJldHVybiB0eXBlb2YgZ2xvYmFsVGhpcyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2YgZ2xvYmFsVGhpcy5mZXRjaCAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgfVxuICBhc3luYyBzZXR1cCgpIHtcbiAgICBjb25zdCBwdXJlRmV0Y2ggPSBnbG9iYWxUaGlzLmZldGNoO1xuICAgIGludmFyaWFudChcbiAgICAgICFwdXJlRmV0Y2hbSVNfUEFUQ0hFRF9NT0RVTEVdLFxuICAgICAgJ0ZhaWxlZCB0byBwYXRjaCB0aGUgXCJmZXRjaFwiIG1vZHVsZTogYWxyZWFkeSBwYXRjaGVkLidcbiAgICApO1xuICAgIGdsb2JhbFRoaXMuZmV0Y2ggPSBhc3luYyAoaW5wdXQsIGluaXQpID0+IHtcbiAgICAgIHZhciBfYTtcbiAgICAgIGNvbnN0IHJlcXVlc3RJZCA9IGNyZWF0ZVJlcXVlc3RJZCgpO1xuICAgICAgY29uc3QgcmVzb2x2ZWRJbnB1dCA9IHR5cGVvZiBpbnB1dCA9PT0gXCJzdHJpbmdcIiAmJiB0eXBlb2YgbG9jYXRpb24gIT09IFwidW5kZWZpbmVkXCIgJiYgIWNhblBhcnNlVXJsKGlucHV0KSA/IG5ldyBVUkwoaW5wdXQsIGxvY2F0aW9uLm9yaWdpbikgOiBpbnB1dDtcbiAgICAgIGNvbnN0IHJlcXVlc3QgPSBuZXcgUmVxdWVzdChyZXNvbHZlZElucHV0LCBpbml0KTtcbiAgICAgIHRoaXMubG9nZ2VyLmluZm8oXCJbJXNdICVzXCIsIHJlcXVlc3QubWV0aG9kLCByZXF1ZXN0LnVybCk7XG4gICAgICBjb25zdCB7IGludGVyYWN0aXZlUmVxdWVzdCwgcmVxdWVzdENvbnRyb2xsZXIgfSA9IHRvSW50ZXJhY3RpdmVSZXF1ZXN0KHJlcXVlc3QpO1xuICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcbiAgICAgICAgJ2VtaXR0aW5nIHRoZSBcInJlcXVlc3RcIiBldmVudCBmb3IgJWQgbGlzdGVuZXIocykuLi4nLFxuICAgICAgICB0aGlzLmVtaXR0ZXIubGlzdGVuZXJDb3VudChcInJlcXVlc3RcIilcbiAgICAgICk7XG4gICAgICB0aGlzLmVtaXR0ZXIub25jZShcInJlcXVlc3RcIiwgKHsgcmVxdWVzdElkOiBwZW5kaW5nUmVxdWVzdElkIH0pID0+IHtcbiAgICAgICAgaWYgKHBlbmRpbmdSZXF1ZXN0SWQgIT09IHJlcXVlc3RJZCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAocmVxdWVzdENvbnRyb2xsZXIucmVzcG9uc2VQcm9taXNlLnN0YXRlID09PSBcInBlbmRpbmdcIikge1xuICAgICAgICAgIHJlcXVlc3RDb250cm9sbGVyLnJlc3BvbnNlUHJvbWlzZS5yZXNvbHZlKHZvaWQgMCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcImF3YWl0aW5nIGZvciB0aGUgbW9ja2VkIHJlc3BvbnNlLi4uXCIpO1xuICAgICAgY29uc3Qgc2lnbmFsID0gaW50ZXJhY3RpdmVSZXF1ZXN0LnNpZ25hbDtcbiAgICAgIGNvbnN0IHJlcXVlc3RBYm9ydGVkID0gbmV3IERlZmVycmVkUHJvbWlzZSgpO1xuICAgICAgaWYgKHNpZ25hbCkge1xuICAgICAgICBzaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgICAgICBcImFib3J0XCIsXG4gICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgcmVxdWVzdEFib3J0ZWQucmVqZWN0KHNpZ25hbC5yZWFzb24pO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgeyBvbmNlOiB0cnVlIH1cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHJlc3BvbnNlUHJvbWlzZSA9IG5ldyBEZWZlcnJlZFByb21pc2UoKTtcbiAgICAgIGNvbnN0IHJlc3BvbmRXaXRoID0gKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgIHRoaXMubG9nZ2VyLmluZm8oXCJyZXNwb25kaW5nIHdpdGggYSBtb2NrIHJlc3BvbnNlOlwiLCByZXNwb25zZSk7XG4gICAgICAgIGlmICh0aGlzLmVtaXR0ZXIubGlzdGVuZXJDb3VudChcInJlc3BvbnNlXCIpID4gMCkge1xuICAgICAgICAgIHRoaXMubG9nZ2VyLmluZm8oJ2VtaXR0aW5nIHRoZSBcInJlc3BvbnNlXCIgZXZlbnQuLi4nKTtcbiAgICAgICAgICBjb25zdCByZXNwb25zZUNsb25lID0gcmVzcG9uc2UuY2xvbmUoKTtcbiAgICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdChcInJlc3BvbnNlXCIsIHtcbiAgICAgICAgICAgIHJlc3BvbnNlOiByZXNwb25zZUNsb25lLFxuICAgICAgICAgICAgaXNNb2NrZWRSZXNwb25zZTogdHJ1ZSxcbiAgICAgICAgICAgIHJlcXVlc3Q6IGludGVyYWN0aXZlUmVxdWVzdCxcbiAgICAgICAgICAgIHJlcXVlc3RJZFxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXNwb25zZSwgXCJ1cmxcIiwge1xuICAgICAgICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICAgICAgdmFsdWU6IHJlcXVlc3QudXJsXG4gICAgICAgIH0pO1xuICAgICAgICByZXNwb25zZVByb21pc2UucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICB9O1xuICAgICAgY29uc3QgZXJyb3JXaXRoID0gKHJlYXNvbikgPT4ge1xuICAgICAgICByZXNwb25zZVByb21pc2UucmVqZWN0KHJlYXNvbik7XG4gICAgICB9O1xuICAgICAgY29uc3QgcmVzb2x2ZXJSZXN1bHQgPSBhd2FpdCB1bnRpbChcbiAgICAgICAgYXN5bmMgKCkgPT4ge1xuICAgICAgICAgIGNvbnN0IGxpc3RlbmVyc0ZpbmlzaGVkID0gZW1pdEFzeW5jKHRoaXMuZW1pdHRlciwgXCJyZXF1ZXN0XCIsIHtcbiAgICAgICAgICAgIHJlcXVlc3Q6IGludGVyYWN0aXZlUmVxdWVzdCxcbiAgICAgICAgICAgIHJlcXVlc3RJZFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGF3YWl0IFByb21pc2UucmFjZShbXG4gICAgICAgICAgICByZXF1ZXN0QWJvcnRlZCxcbiAgICAgICAgICAgIC8vIFB1dCB0aGUgbGlzdGVuZXJzIGludm9jYXRpb24gUHJvbWlzZSBpbiB0aGUgc2FtZSByYWNlIGNvbmRpdGlvblxuICAgICAgICAgICAgLy8gd2l0aCB0aGUgcmVxdWVzdCBhYm9ydCBQcm9taXNlIGJlY2F1c2Ugb3RoZXJ3aXNlIGF3YWl0aW5nIHRoZSBsaXN0ZW5lcnNcbiAgICAgICAgICAgIC8vIHdvdWxkIGFsd2F5cyB5aWVsZCBzb21lIHJlc3BvbnNlIChvciB1bmRlZmluZWQpLlxuICAgICAgICAgICAgbGlzdGVuZXJzRmluaXNoZWQsXG4gICAgICAgICAgICByZXF1ZXN0Q29udHJvbGxlci5yZXNwb25zZVByb21pc2VcbiAgICAgICAgICBdKTtcbiAgICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKFwiYWxsIHJlcXVlc3QgbGlzdGVuZXJzIGhhdmUgYmVlbiByZXNvbHZlZCFcIik7XG4gICAgICAgICAgY29uc3QgbW9ja2VkUmVzcG9uc2UyID0gYXdhaXQgcmVxdWVzdENvbnRyb2xsZXIucmVzcG9uc2VQcm9taXNlO1xuICAgICAgICAgIHRoaXMubG9nZ2VyLmluZm8oXCJldmVudC5yZXNwb25kV2l0aCBjYWxsZWQgd2l0aDpcIiwgbW9ja2VkUmVzcG9uc2UyKTtcbiAgICAgICAgICByZXR1cm4gbW9ja2VkUmVzcG9uc2UyO1xuICAgICAgICB9XG4gICAgICApO1xuICAgICAgaWYgKHJlcXVlc3RBYm9ydGVkLnN0YXRlID09PSBcInJlamVjdGVkXCIpIHtcbiAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcbiAgICAgICAgICBcInJlcXVlc3QgaGFzIGJlZW4gYWJvcnRlZDpcIixcbiAgICAgICAgICByZXF1ZXN0QWJvcnRlZC5yZWplY3Rpb25SZWFzb25cbiAgICAgICAgKTtcbiAgICAgICAgcmVzcG9uc2VQcm9taXNlLnJlamVjdChyZXF1ZXN0QWJvcnRlZC5yZWplY3Rpb25SZWFzb24pO1xuICAgICAgICByZXR1cm4gcmVzcG9uc2VQcm9taXNlO1xuICAgICAgfVxuICAgICAgaWYgKHJlc29sdmVyUmVzdWx0LmVycm9yKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyLmluZm8oXG4gICAgICAgICAgXCJyZXF1ZXN0IGxpc3Rlcm5lciB0aHJldyBhbiBlcnJvcjpcIixcbiAgICAgICAgICByZXNvbHZlclJlc3VsdC5lcnJvclxuICAgICAgICApO1xuICAgICAgICBpZiAocmVzb2x2ZXJSZXN1bHQuZXJyb3IgaW5zdGFuY2VvZiBSZXNwb25zZSkge1xuICAgICAgICAgIGlmIChpc1Jlc3BvbnNlRXJyb3IocmVzb2x2ZXJSZXN1bHQuZXJyb3IpKSB7XG4gICAgICAgICAgICBlcnJvcldpdGgoY3JlYXRlTmV0d29ya0Vycm9yKHJlc29sdmVyUmVzdWx0LmVycm9yKSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3BvbmRXaXRoKHJlc29sdmVyUmVzdWx0LmVycm9yKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuZW1pdHRlci5saXN0ZW5lckNvdW50KFwidW5oYW5kbGVkRXhjZXB0aW9uXCIpID4gMCkge1xuICAgICAgICAgIGF3YWl0IGVtaXRBc3luYyh0aGlzLmVtaXR0ZXIsIFwidW5oYW5kbGVkRXhjZXB0aW9uXCIsIHtcbiAgICAgICAgICAgIGVycm9yOiByZXNvbHZlclJlc3VsdC5lcnJvcixcbiAgICAgICAgICAgIHJlcXVlc3QsXG4gICAgICAgICAgICByZXF1ZXN0SWQsXG4gICAgICAgICAgICBjb250cm9sbGVyOiB7XG4gICAgICAgICAgICAgIHJlc3BvbmRXaXRoLFxuICAgICAgICAgICAgICBlcnJvcldpdGhcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgICBpZiAocmVzcG9uc2VQcm9taXNlLnN0YXRlICE9PSBcInBlbmRpbmdcIikge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlUHJvbWlzZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmVzcG9uZFdpdGgoY3JlYXRlU2VydmVyRXJyb3JSZXNwb25zZShyZXNvbHZlclJlc3VsdC5lcnJvcikpO1xuICAgICAgICByZXR1cm4gcmVzcG9uc2VQcm9taXNlO1xuICAgICAgfVxuICAgICAgY29uc3QgbW9ja2VkUmVzcG9uc2UgPSByZXNvbHZlclJlc3VsdC5kYXRhO1xuICAgICAgaWYgKG1vY2tlZFJlc3BvbnNlICYmICEoKF9hID0gcmVxdWVzdC5zaWduYWwpID09IG51bGwgPyB2b2lkIDAgOiBfYS5hYm9ydGVkKSkge1xuICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKFwicmVjZWl2ZWQgbW9ja2VkIHJlc3BvbnNlOlwiLCBtb2NrZWRSZXNwb25zZSk7XG4gICAgICAgIGlmIChpc1Jlc3BvbnNlRXJyb3IobW9ja2VkUmVzcG9uc2UpKSB7XG4gICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcbiAgICAgICAgICAgIFwicmVjZWl2ZWQgYSBuZXR3b3JrIGVycm9yIHJlc3BvbnNlLCByZWplY3RpbmcgdGhlIHJlcXVlc3QgcHJvbWlzZS4uLlwiXG4gICAgICAgICAgKTtcbiAgICAgICAgICBlcnJvcldpdGgoY3JlYXRlTmV0d29ya0Vycm9yKG1vY2tlZFJlc3BvbnNlKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVzcG9uZFdpdGgobW9ja2VkUmVzcG9uc2UpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXNwb25zZVByb21pc2U7XG4gICAgICB9XG4gICAgICB0aGlzLmxvZ2dlci5pbmZvKFwibm8gbW9ja2VkIHJlc3BvbnNlIHJlY2VpdmVkIVwiKTtcbiAgICAgIHJldHVybiBwdXJlRmV0Y2gocmVxdWVzdCkudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcIm9yaWdpbmFsIGZldGNoIHBlcmZvcm1lZFwiLCByZXNwb25zZSk7XG4gICAgICAgIGlmICh0aGlzLmVtaXR0ZXIubGlzdGVuZXJDb3VudChcInJlc3BvbnNlXCIpID4gMCkge1xuICAgICAgICAgIHRoaXMubG9nZ2VyLmluZm8oJ2VtaXR0aW5nIHRoZSBcInJlc3BvbnNlXCIgZXZlbnQuLi4nKTtcbiAgICAgICAgICBjb25zdCByZXNwb25zZUNsb25lID0gcmVzcG9uc2UuY2xvbmUoKTtcbiAgICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdChcInJlc3BvbnNlXCIsIHtcbiAgICAgICAgICAgIHJlc3BvbnNlOiByZXNwb25zZUNsb25lLFxuICAgICAgICAgICAgaXNNb2NrZWRSZXNwb25zZTogZmFsc2UsXG4gICAgICAgICAgICByZXF1ZXN0OiBpbnRlcmFjdGl2ZVJlcXVlc3QsXG4gICAgICAgICAgICByZXF1ZXN0SWRcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICB9KTtcbiAgICB9O1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShnbG9iYWxUaGlzLmZldGNoLCBJU19QQVRDSEVEX01PRFVMRSwge1xuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiB0cnVlXG4gICAgfSk7XG4gICAgdGhpcy5zdWJzY3JpcHRpb25zLnB1c2goKCkgPT4ge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGdsb2JhbFRoaXMuZmV0Y2gsIElTX1BBVENIRURfTU9EVUxFLCB7XG4gICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgIH0pO1xuICAgICAgZ2xvYmFsVGhpcy5mZXRjaCA9IHB1cmVGZXRjaDtcbiAgICAgIHRoaXMubG9nZ2VyLmluZm8oXG4gICAgICAgICdyZXN0b3JlZCBuYXRpdmUgXCJnbG9iYWxUaGlzLmZldGNoXCIhJyxcbiAgICAgICAgZ2xvYmFsVGhpcy5mZXRjaC5uYW1lXG4gICAgICApO1xuICAgIH0pO1xuICB9XG59O1xudmFyIEZldGNoSW50ZXJjZXB0b3IgPSBfRmV0Y2hJbnRlcmNlcHRvcjtcbkZldGNoSW50ZXJjZXB0b3Iuc3ltYm9sID0gU3ltYm9sKFwiZmV0Y2hcIik7XG5mdW5jdGlvbiBjcmVhdGVOZXR3b3JrRXJyb3IoY2F1c2UpIHtcbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24obmV3IFR5cGVFcnJvcihcIkZhaWxlZCB0byBmZXRjaFwiKSwge1xuICAgIGNhdXNlXG4gIH0pO1xufVxuXG4vLyBub2RlX21vZHVsZXMvLnBucG0vQG1zd2pzK2ludGVyY2VwdG9yc0AwLjI5LjAvbm9kZV9tb2R1bGVzL0Btc3dqcy9pbnRlcmNlcHRvcnMvbGliL2Jyb3dzZXIvY2h1bmstNzMyUkVGUFgubWpzXG5mdW5jdGlvbiBjb25jYXRBcnJheUJ1ZmZlcihsZWZ0LCByaWdodCkge1xuICBjb25zdCByZXN1bHQgPSBuZXcgVWludDhBcnJheShsZWZ0LmJ5dGVMZW5ndGggKyByaWdodC5ieXRlTGVuZ3RoKTtcbiAgcmVzdWx0LnNldChsZWZ0LCAwKTtcbiAgcmVzdWx0LnNldChyaWdodCwgbGVmdC5ieXRlTGVuZ3RoKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cbnZhciBFdmVudFBvbHlmaWxsID0gY2xhc3Mge1xuICBjb25zdHJ1Y3Rvcih0eXBlLCBvcHRpb25zKSB7XG4gICAgdGhpcy5BVF9UQVJHRVQgPSAwO1xuICAgIHRoaXMuQlVCQkxJTkdfUEhBU0UgPSAwO1xuICAgIHRoaXMuQ0FQVFVSSU5HX1BIQVNFID0gMDtcbiAgICB0aGlzLk5PTkUgPSAwO1xuICAgIHRoaXMudHlwZSA9IFwiXCI7XG4gICAgdGhpcy5zcmNFbGVtZW50ID0gbnVsbDtcbiAgICB0aGlzLmN1cnJlbnRUYXJnZXQgPSBudWxsO1xuICAgIHRoaXMuZXZlbnRQaGFzZSA9IDA7XG4gICAgdGhpcy5pc1RydXN0ZWQgPSB0cnVlO1xuICAgIHRoaXMuY29tcG9zZWQgPSBmYWxzZTtcbiAgICB0aGlzLmNhbmNlbGFibGUgPSB0cnVlO1xuICAgIHRoaXMuZGVmYXVsdFByZXZlbnRlZCA9IGZhbHNlO1xuICAgIHRoaXMuYnViYmxlcyA9IHRydWU7XG4gICAgdGhpcy5sZW5ndGhDb21wdXRhYmxlID0gdHJ1ZTtcbiAgICB0aGlzLmxvYWRlZCA9IDA7XG4gICAgdGhpcy50b3RhbCA9IDA7XG4gICAgdGhpcy5jYW5jZWxCdWJibGUgPSBmYWxzZTtcbiAgICB0aGlzLnJldHVyblZhbHVlID0gdHJ1ZTtcbiAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgIHRoaXMudGFyZ2V0ID0gKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMudGFyZ2V0KSB8fCBudWxsO1xuICAgIHRoaXMuY3VycmVudFRhcmdldCA9IChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmN1cnJlbnRUYXJnZXQpIHx8IG51bGw7XG4gICAgdGhpcy50aW1lU3RhbXAgPSBEYXRlLm5vdygpO1xuICB9XG4gIGNvbXBvc2VkUGF0aCgpIHtcbiAgICByZXR1cm4gW107XG4gIH1cbiAgaW5pdEV2ZW50KHR5cGUsIGJ1YmJsZXMsIGNhbmNlbGFibGUpIHtcbiAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgIHRoaXMuYnViYmxlcyA9ICEhYnViYmxlcztcbiAgICB0aGlzLmNhbmNlbGFibGUgPSAhIWNhbmNlbGFibGU7XG4gIH1cbiAgcHJldmVudERlZmF1bHQoKSB7XG4gICAgdGhpcy5kZWZhdWx0UHJldmVudGVkID0gdHJ1ZTtcbiAgfVxuICBzdG9wUHJvcGFnYXRpb24oKSB7XG4gIH1cbiAgc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCkge1xuICB9XG59O1xudmFyIFByb2dyZXNzRXZlbnRQb2x5ZmlsbCA9IGNsYXNzIGV4dGVuZHMgRXZlbnRQb2x5ZmlsbCB7XG4gIGNvbnN0cnVjdG9yKHR5cGUsIGluaXQpIHtcbiAgICBzdXBlcih0eXBlKTtcbiAgICB0aGlzLmxlbmd0aENvbXB1dGFibGUgPSAoaW5pdCA9PSBudWxsID8gdm9pZCAwIDogaW5pdC5sZW5ndGhDb21wdXRhYmxlKSB8fCBmYWxzZTtcbiAgICB0aGlzLmNvbXBvc2VkID0gKGluaXQgPT0gbnVsbCA/IHZvaWQgMCA6IGluaXQuY29tcG9zZWQpIHx8IGZhbHNlO1xuICAgIHRoaXMubG9hZGVkID0gKGluaXQgPT0gbnVsbCA/IHZvaWQgMCA6IGluaXQubG9hZGVkKSB8fCAwO1xuICAgIHRoaXMudG90YWwgPSAoaW5pdCA9PSBudWxsID8gdm9pZCAwIDogaW5pdC50b3RhbCkgfHwgMDtcbiAgfVxufTtcbnZhciBTVVBQT1JUU19QUk9HUkVTU19FVkVOVCA9IHR5cGVvZiBQcm9ncmVzc0V2ZW50ICE9PSBcInVuZGVmaW5lZFwiO1xuZnVuY3Rpb24gY3JlYXRlRXZlbnQodGFyZ2V0LCB0eXBlLCBpbml0KSB7XG4gIGNvbnN0IHByb2dyZXNzRXZlbnRzID0gW1xuICAgIFwiZXJyb3JcIixcbiAgICBcInByb2dyZXNzXCIsXG4gICAgXCJsb2Fkc3RhcnRcIixcbiAgICBcImxvYWRlbmRcIixcbiAgICBcImxvYWRcIixcbiAgICBcInRpbWVvdXRcIixcbiAgICBcImFib3J0XCJcbiAgXTtcbiAgY29uc3QgUHJvZ3Jlc3NFdmVudENsYXNzID0gU1VQUE9SVFNfUFJPR1JFU1NfRVZFTlQgPyBQcm9ncmVzc0V2ZW50IDogUHJvZ3Jlc3NFdmVudFBvbHlmaWxsO1xuICBjb25zdCBldmVudCA9IHByb2dyZXNzRXZlbnRzLmluY2x1ZGVzKHR5cGUpID8gbmV3IFByb2dyZXNzRXZlbnRDbGFzcyh0eXBlLCB7XG4gICAgbGVuZ3RoQ29tcHV0YWJsZTogdHJ1ZSxcbiAgICBsb2FkZWQ6IChpbml0ID09IG51bGwgPyB2b2lkIDAgOiBpbml0LmxvYWRlZCkgfHwgMCxcbiAgICB0b3RhbDogKGluaXQgPT0gbnVsbCA/IHZvaWQgMCA6IGluaXQudG90YWwpIHx8IDBcbiAgfSkgOiBuZXcgRXZlbnRQb2x5ZmlsbCh0eXBlLCB7XG4gICAgdGFyZ2V0LFxuICAgIGN1cnJlbnRUYXJnZXQ6IHRhcmdldFxuICB9KTtcbiAgcmV0dXJuIGV2ZW50O1xufVxuZnVuY3Rpb24gZmluZFByb3BlcnR5U291cmNlKHRhcmdldCwgcHJvcGVydHlOYW1lKSB7XG4gIGlmICghKHByb3BlcnR5TmFtZSBpbiB0YXJnZXQpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3QgaGFzUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGFyZ2V0LCBwcm9wZXJ0eU5hbWUpO1xuICBpZiAoaGFzUHJvcGVydHkpIHtcbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9XG4gIGNvbnN0IHByb3RvdHlwZSA9IFJlZmxlY3QuZ2V0UHJvdG90eXBlT2YodGFyZ2V0KTtcbiAgcmV0dXJuIHByb3RvdHlwZSA/IGZpbmRQcm9wZXJ0eVNvdXJjZShwcm90b3R5cGUsIHByb3BlcnR5TmFtZSkgOiBudWxsO1xufVxuZnVuY3Rpb24gY3JlYXRlUHJveHkodGFyZ2V0LCBvcHRpb25zKSB7XG4gIGNvbnN0IHByb3h5ID0gbmV3IFByb3h5KHRhcmdldCwgb3B0aW9uc1RvUHJveHlIYW5kbGVyKG9wdGlvbnMpKTtcbiAgcmV0dXJuIHByb3h5O1xufVxuZnVuY3Rpb24gb3B0aW9uc1RvUHJveHlIYW5kbGVyKG9wdGlvbnMpIHtcbiAgY29uc3QgeyBjb25zdHJ1Y3RvckNhbGwsIG1ldGhvZENhbGwsIGdldFByb3BlcnR5LCBzZXRQcm9wZXJ0eSB9ID0gb3B0aW9ucztcbiAgY29uc3QgaGFuZGxlciA9IHt9O1xuICBpZiAodHlwZW9mIGNvbnN0cnVjdG9yQ2FsbCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGhhbmRsZXIuY29uc3RydWN0ID0gZnVuY3Rpb24odGFyZ2V0LCBhcmdzLCBuZXdUYXJnZXQpIHtcbiAgICAgIGNvbnN0IG5leHQgPSBSZWZsZWN0LmNvbnN0cnVjdC5iaW5kKG51bGwsIHRhcmdldCwgYXJncywgbmV3VGFyZ2V0KTtcbiAgICAgIHJldHVybiBjb25zdHJ1Y3RvckNhbGwuY2FsbChuZXdUYXJnZXQsIGFyZ3MsIG5leHQpO1xuICAgIH07XG4gIH1cbiAgaGFuZGxlci5zZXQgPSBmdW5jdGlvbih0YXJnZXQsIHByb3BlcnR5TmFtZSwgbmV4dFZhbHVlKSB7XG4gICAgY29uc3QgbmV4dCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHByb3BlcnR5U291cmNlID0gZmluZFByb3BlcnR5U291cmNlKHRhcmdldCwgcHJvcGVydHlOYW1lKSB8fCB0YXJnZXQ7XG4gICAgICBjb25zdCBvd25EZXNjcmlwdG9ycyA9IFJlZmxlY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFxuICAgICAgICBwcm9wZXJ0eVNvdXJjZSxcbiAgICAgICAgcHJvcGVydHlOYW1lXG4gICAgICApO1xuICAgICAgaWYgKHR5cGVvZiAob3duRGVzY3JpcHRvcnMgPT0gbnVsbCA/IHZvaWQgMCA6IG93bkRlc2NyaXB0b3JzLnNldCkgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgb3duRGVzY3JpcHRvcnMuc2V0LmFwcGx5KHRhcmdldCwgW25leHRWYWx1ZV0pO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBSZWZsZWN0LmRlZmluZVByb3BlcnR5KHByb3BlcnR5U291cmNlLCBwcm9wZXJ0eU5hbWUsIHtcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IG5leHRWYWx1ZVxuICAgICAgfSk7XG4gICAgfTtcbiAgICBpZiAodHlwZW9mIHNldFByb3BlcnR5ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICByZXR1cm4gc2V0UHJvcGVydHkuY2FsbCh0YXJnZXQsIFtwcm9wZXJ0eU5hbWUsIG5leHRWYWx1ZV0sIG5leHQpO1xuICAgIH1cbiAgICByZXR1cm4gbmV4dCgpO1xuICB9O1xuICBoYW5kbGVyLmdldCA9IGZ1bmN0aW9uKHRhcmdldCwgcHJvcGVydHlOYW1lLCByZWNlaXZlcikge1xuICAgIGNvbnN0IG5leHQgPSAoKSA9PiB0YXJnZXRbcHJvcGVydHlOYW1lXTtcbiAgICBjb25zdCB2YWx1ZSA9IHR5cGVvZiBnZXRQcm9wZXJ0eSAhPT0gXCJ1bmRlZmluZWRcIiA/IGdldFByb3BlcnR5LmNhbGwodGFyZ2V0LCBbcHJvcGVydHlOYW1lLCByZWNlaXZlcl0sIG5leHQpIDogbmV4dCgpO1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgcmV0dXJuICguLi5hcmdzKSA9PiB7XG4gICAgICAgIGNvbnN0IG5leHQyID0gdmFsdWUuYmluZCh0YXJnZXQsIC4uLmFyZ3MpO1xuICAgICAgICBpZiAodHlwZW9mIG1ldGhvZENhbGwgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICByZXR1cm4gbWV0aG9kQ2FsbC5jYWxsKHRhcmdldCwgW3Byb3BlcnR5TmFtZSwgYXJnc10sIG5leHQyKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV4dDIoKTtcbiAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZTtcbiAgfTtcbiAgcmV0dXJuIGhhbmRsZXI7XG59XG5mdW5jdGlvbiBpc0RvbVBhcnNlclN1cHBvcnRlZFR5cGUodHlwZSkge1xuICBjb25zdCBzdXBwb3J0ZWRUeXBlcyA9IFtcbiAgICBcImFwcGxpY2F0aW9uL3hodG1sK3htbFwiLFxuICAgIFwiYXBwbGljYXRpb24veG1sXCIsXG4gICAgXCJpbWFnZS9zdmcreG1sXCIsXG4gICAgXCJ0ZXh0L2h0bWxcIixcbiAgICBcInRleHQveG1sXCJcbiAgXTtcbiAgcmV0dXJuIHN1cHBvcnRlZFR5cGVzLnNvbWUoKHN1cHBvcnRlZFR5cGUpID0+IHtcbiAgICByZXR1cm4gdHlwZS5zdGFydHNXaXRoKHN1cHBvcnRlZFR5cGUpO1xuICB9KTtcbn1cbmZ1bmN0aW9uIHBhcnNlSnNvbihkYXRhKSB7XG4gIHRyeSB7XG4gICAgY29uc3QganNvbiA9IEpTT04ucGFyc2UoZGF0YSk7XG4gICAgcmV0dXJuIGpzb247XG4gIH0gY2F0Y2ggKF8pIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuZnVuY3Rpb24gY3JlYXRlUmVzcG9uc2UocmVxdWVzdCwgYm9keSkge1xuICBjb25zdCByZXNwb25zZUJvZHlPck51bGwgPSBpc1Jlc3BvbnNlV2l0aG91dEJvZHkocmVxdWVzdC5zdGF0dXMpID8gbnVsbCA6IGJvZHk7XG4gIHJldHVybiBuZXcgUmVzcG9uc2UocmVzcG9uc2VCb2R5T3JOdWxsLCB7XG4gICAgc3RhdHVzOiByZXF1ZXN0LnN0YXR1cyxcbiAgICBzdGF0dXNUZXh0OiByZXF1ZXN0LnN0YXR1c1RleHQsXG4gICAgaGVhZGVyczogY3JlYXRlSGVhZGVyc0Zyb21YTUxIdHRwUmVxZXN0SGVhZGVycyhcbiAgICAgIHJlcXVlc3QuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKClcbiAgICApXG4gIH0pO1xufVxuZnVuY3Rpb24gY3JlYXRlSGVhZGVyc0Zyb21YTUxIdHRwUmVxZXN0SGVhZGVycyhoZWFkZXJzU3RyaW5nKSB7XG4gIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xuICBjb25zdCBsaW5lcyA9IGhlYWRlcnNTdHJpbmcuc3BsaXQoL1tcXHJcXG5dKy8pO1xuICBmb3IgKGNvbnN0IGxpbmUgb2YgbGluZXMpIHtcbiAgICBpZiAobGluZS50cmltKCkgPT09IFwiXCIpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBjb25zdCBbbmFtZSwgLi4ucGFydHNdID0gbGluZS5zcGxpdChcIjogXCIpO1xuICAgIGNvbnN0IHZhbHVlID0gcGFydHMuam9pbihcIjogXCIpO1xuICAgIGhlYWRlcnMuYXBwZW5kKG5hbWUsIHZhbHVlKTtcbiAgfVxuICByZXR1cm4gaGVhZGVycztcbn1cbnZhciBJU19NT0NLRURfUkVTUE9OU0UgPSBTeW1ib2woXCJpc01vY2tlZFJlc3BvbnNlXCIpO1xudmFyIElTX05PREUyID0gaXNOb2RlUHJvY2VzcygpO1xudmFyIFhNTEh0dHBSZXF1ZXN0Q29udHJvbGxlciA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IoaW5pdGlhbFJlcXVlc3QsIGxvZ2dlcikge1xuICAgIHRoaXMuaW5pdGlhbFJlcXVlc3QgPSBpbml0aWFsUmVxdWVzdDtcbiAgICB0aGlzLmxvZ2dlciA9IGxvZ2dlcjtcbiAgICB0aGlzLm1ldGhvZCA9IFwiR0VUXCI7XG4gICAgdGhpcy51cmwgPSBudWxsO1xuICAgIHRoaXMuZXZlbnRzID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgICB0aGlzLnJlcXVlc3RJZCA9IGNyZWF0ZVJlcXVlc3RJZCgpO1xuICAgIHRoaXMucmVxdWVzdEhlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xuICAgIHRoaXMucmVzcG9uc2VCdWZmZXIgPSBuZXcgVWludDhBcnJheSgpO1xuICAgIHRoaXMucmVxdWVzdCA9IGNyZWF0ZVByb3h5KGluaXRpYWxSZXF1ZXN0LCB7XG4gICAgICBzZXRQcm9wZXJ0eTogKFtwcm9wZXJ0eU5hbWUsIG5leHRWYWx1ZV0sIGludm9rZSkgPT4ge1xuICAgICAgICBzd2l0Y2ggKHByb3BlcnR5TmFtZSkge1xuICAgICAgICAgIGNhc2UgXCJvbnRpbWVvdXRcIjoge1xuICAgICAgICAgICAgY29uc3QgZXZlbnROYW1lID0gcHJvcGVydHlOYW1lLnNsaWNlKFxuICAgICAgICAgICAgICAyXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgdGhpcy5yZXF1ZXN0LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBuZXh0VmFsdWUpO1xuICAgICAgICAgICAgcmV0dXJuIGludm9rZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICByZXR1cm4gaW52b2tlKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgbWV0aG9kQ2FsbDogKFttZXRob2ROYW1lLCBhcmdzXSwgaW52b2tlKSA9PiB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgc3dpdGNoIChtZXRob2ROYW1lKSB7XG4gICAgICAgICAgY2FzZSBcIm9wZW5cIjoge1xuICAgICAgICAgICAgY29uc3QgW21ldGhvZCwgdXJsXSA9IGFyZ3M7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHVybCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgICB0aGlzLm1ldGhvZCA9IFwiR0VUXCI7XG4gICAgICAgICAgICAgIHRoaXMudXJsID0gdG9BYnNvbHV0ZVVybChtZXRob2QpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdGhpcy5tZXRob2QgPSBtZXRob2Q7XG4gICAgICAgICAgICAgIHRoaXMudXJsID0gdG9BYnNvbHV0ZVVybCh1cmwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5sb2dnZXIgPSB0aGlzLmxvZ2dlci5leHRlbmQoYCR7dGhpcy5tZXRob2R9ICR7dGhpcy51cmwuaHJlZn1gKTtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLmluZm8oXCJvcGVuXCIsIHRoaXMubWV0aG9kLCB0aGlzLnVybC5ocmVmKTtcbiAgICAgICAgICAgIHJldHVybiBpbnZva2UoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY2FzZSBcImFkZEV2ZW50TGlzdGVuZXJcIjoge1xuICAgICAgICAgICAgY29uc3QgW2V2ZW50TmFtZSwgbGlzdGVuZXJdID0gYXJncztcbiAgICAgICAgICAgIHRoaXMucmVnaXN0ZXJFdmVudChldmVudE5hbWUsIGxpc3RlbmVyKTtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLmluZm8oXCJhZGRFdmVudExpc3RlbmVyXCIsIGV2ZW50TmFtZSwgbGlzdGVuZXIpO1xuICAgICAgICAgICAgcmV0dXJuIGludm9rZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjYXNlIFwic2V0UmVxdWVzdEhlYWRlclwiOiB7XG4gICAgICAgICAgICBjb25zdCBbbmFtZSwgdmFsdWVdID0gYXJncztcbiAgICAgICAgICAgIHRoaXMucmVxdWVzdEhlYWRlcnMuc2V0KG5hbWUsIHZhbHVlKTtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLmluZm8oXCJzZXRSZXF1ZXN0SGVhZGVyXCIsIG5hbWUsIHZhbHVlKTtcbiAgICAgICAgICAgIHJldHVybiBpbnZva2UoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY2FzZSBcInNlbmRcIjoge1xuICAgICAgICAgICAgY29uc3QgW2JvZHldID0gYXJncztcbiAgICAgICAgICAgIGlmIChib2R5ICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgdGhpcy5yZXF1ZXN0Qm9keSA9IHR5cGVvZiBib2R5ID09PSBcInN0cmluZ1wiID8gZW5jb2RlQnVmZmVyKGJvZHkpIDogYm9keTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMucmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5vblJlc3BvbnNlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmV0Y2hSZXNwb25zZSA9IGNyZWF0ZVJlc3BvbnNlKFxuICAgICAgICAgICAgICAgICAgdGhpcy5yZXF1ZXN0LFxuICAgICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICAgKiBUaGUgYHJlc3BvbnNlYCBwcm9wZXJ0eSBpcyB0aGUgcmlnaHQgd2F5IHRvIHJlYWRcbiAgICAgICAgICAgICAgICAgICAqIHRoZSBhbWJpZ3VvdXMgcmVzcG9uc2UgYm9keSwgYXMgdGhlIHJlcXVlc3QncyBcInJlc3BvbnNlVHlwZVwiIG1heSBkaWZmZXIuXG4gICAgICAgICAgICAgICAgICAgKiBAc2VlIGh0dHBzOi8veGhyLnNwZWMud2hhdHdnLm9yZy8jdGhlLXJlc3BvbnNlLWF0dHJpYnV0ZVxuICAgICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgICB0aGlzLnJlcXVlc3QucmVzcG9uc2VcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIHRoaXMub25SZXNwb25zZS5jYWxsKHRoaXMsIHtcbiAgICAgICAgICAgICAgICAgIHJlc3BvbnNlOiBmZXRjaFJlc3BvbnNlLFxuICAgICAgICAgICAgICAgICAgaXNNb2NrZWRSZXNwb25zZTogSVNfTU9DS0VEX1JFU1BPTlNFIGluIHRoaXMucmVxdWVzdCxcbiAgICAgICAgICAgICAgICAgIHJlcXVlc3Q6IGZldGNoUmVxdWVzdCxcbiAgICAgICAgICAgICAgICAgIHJlcXVlc3RJZDogdGhpcy5yZXF1ZXN0SWRcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb25zdCBmZXRjaFJlcXVlc3QgPSB0aGlzLnRvRmV0Y2hBcGlSZXF1ZXN0KCk7XG4gICAgICAgICAgICBjb25zdCBvbmNlUmVxdWVzdFNldHRsZWQgPSAoKF9hID0gdGhpcy5vblJlcXVlc3QpID09IG51bGwgPyB2b2lkIDAgOiBfYS5jYWxsKHRoaXMsIHtcbiAgICAgICAgICAgICAgcmVxdWVzdDogZmV0Y2hSZXF1ZXN0LFxuICAgICAgICAgICAgICByZXF1ZXN0SWQ6IHRoaXMucmVxdWVzdElkXG4gICAgICAgICAgICB9KSkgfHwgUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgICAgICAgICBvbmNlUmVxdWVzdFNldHRsZWQuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgICAgIGlmICh0aGlzLnJlcXVlc3QucmVhZHlTdGF0ZSA8IHRoaXMucmVxdWVzdC5MT0FESU5HKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcbiAgICAgICAgICAgICAgICAgIFwicmVxdWVzdCBjYWxsYmFjayBzZXR0bGVkIGJ1dCByZXF1ZXN0IGhhcyBub3QgYmVlbiBoYW5kbGVkIChyZWFkeXN0YXRlICVkKSwgcGVyZm9ybWluZyBhcy1pcy4uLlwiLFxuICAgICAgICAgICAgICAgICAgdGhpcy5yZXF1ZXN0LnJlYWR5U3RhdGVcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIGlmIChJU19OT0RFMikge1xuICAgICAgICAgICAgICAgICAgdGhpcy5yZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIoXG4gICAgICAgICAgICAgICAgICAgIElOVEVSTkFMX1JFUVVFU1RfSURfSEVBREVSX05BTUUsXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVxdWVzdElkXG4gICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gaW52b2tlKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgIHJldHVybiBpbnZva2UoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICByZWdpc3RlckV2ZW50KGV2ZW50TmFtZSwgbGlzdGVuZXIpIHtcbiAgICBjb25zdCBwcmV2RXZlbnRzID0gdGhpcy5ldmVudHMuZ2V0KGV2ZW50TmFtZSkgfHwgW107XG4gICAgY29uc3QgbmV4dEV2ZW50cyA9IHByZXZFdmVudHMuY29uY2F0KGxpc3RlbmVyKTtcbiAgICB0aGlzLmV2ZW50cy5zZXQoZXZlbnROYW1lLCBuZXh0RXZlbnRzKTtcbiAgICB0aGlzLmxvZ2dlci5pbmZvKCdyZWdpc3RlcmVkIGV2ZW50IFwiJXNcIicsIGV2ZW50TmFtZSwgbGlzdGVuZXIpO1xuICB9XG4gIC8qKlxuICAgKiBSZXNwb25kcyB0byB0aGUgY3VycmVudCByZXF1ZXN0IHdpdGggdGhlIGdpdmVuXG4gICAqIEZldGNoIEFQSSBgUmVzcG9uc2VgIGluc3RhbmNlLlxuICAgKi9cbiAgcmVzcG9uZFdpdGgocmVzcG9uc2UpIHtcbiAgICB0aGlzLmxvZ2dlci5pbmZvKFxuICAgICAgXCJyZXNwb25kaW5nIHdpdGggYSBtb2NrZWQgcmVzcG9uc2U6ICVkICVzXCIsXG4gICAgICByZXNwb25zZS5zdGF0dXMsXG4gICAgICByZXNwb25zZS5zdGF0dXNUZXh0XG4gICAgKTtcbiAgICBkZWZpbmUodGhpcy5yZXF1ZXN0LCBJU19NT0NLRURfUkVTUE9OU0UsIHRydWUpO1xuICAgIGRlZmluZSh0aGlzLnJlcXVlc3QsIFwic3RhdHVzXCIsIHJlc3BvbnNlLnN0YXR1cyk7XG4gICAgZGVmaW5lKHRoaXMucmVxdWVzdCwgXCJzdGF0dXNUZXh0XCIsIHJlc3BvbnNlLnN0YXR1c1RleHQpO1xuICAgIGRlZmluZSh0aGlzLnJlcXVlc3QsIFwicmVzcG9uc2VVUkxcIiwgdGhpcy51cmwuaHJlZik7XG4gICAgdGhpcy5yZXF1ZXN0LmdldFJlc3BvbnNlSGVhZGVyID0gbmV3IFByb3h5KHRoaXMucmVxdWVzdC5nZXRSZXNwb25zZUhlYWRlciwge1xuICAgICAgYXBwbHk6IChfLCBfXywgYXJncykgPT4ge1xuICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKFwiZ2V0UmVzcG9uc2VIZWFkZXJcIiwgYXJnc1swXSk7XG4gICAgICAgIGlmICh0aGlzLnJlcXVlc3QucmVhZHlTdGF0ZSA8IHRoaXMucmVxdWVzdC5IRUFERVJTX1JFQ0VJVkVEKSB7XG4gICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcImhlYWRlcnMgbm90IHJlY2VpdmVkIHlldCwgcmV0dXJuaW5nIG51bGxcIik7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaGVhZGVyVmFsdWUgPSByZXNwb25zZS5oZWFkZXJzLmdldChhcmdzWzBdKTtcbiAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcbiAgICAgICAgICAncmVzb2x2ZWQgcmVzcG9uc2UgaGVhZGVyIFwiJXNcIiB0bycsXG4gICAgICAgICAgYXJnc1swXSxcbiAgICAgICAgICBoZWFkZXJWYWx1ZVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gaGVhZGVyVmFsdWU7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5yZXF1ZXN0LmdldEFsbFJlc3BvbnNlSGVhZGVycyA9IG5ldyBQcm94eShcbiAgICAgIHRoaXMucmVxdWVzdC5nZXRBbGxSZXNwb25zZUhlYWRlcnMsXG4gICAgICB7XG4gICAgICAgIGFwcGx5OiAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcImdldEFsbFJlc3BvbnNlSGVhZGVyc1wiKTtcbiAgICAgICAgICBpZiAodGhpcy5yZXF1ZXN0LnJlYWR5U3RhdGUgPCB0aGlzLnJlcXVlc3QuSEVBREVSU19SRUNFSVZFRCkge1xuICAgICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcImhlYWRlcnMgbm90IHJlY2VpdmVkIHlldCwgcmV0dXJuaW5nIGVtcHR5IHN0cmluZ1wiKTtcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCBoZWFkZXJzTGlzdCA9IEFycmF5LmZyb20ocmVzcG9uc2UuaGVhZGVycy5lbnRyaWVzKCkpO1xuICAgICAgICAgIGNvbnN0IGFsbEhlYWRlcnMgPSBoZWFkZXJzTGlzdC5tYXAoKFtoZWFkZXJOYW1lLCBoZWFkZXJWYWx1ZV0pID0+IHtcbiAgICAgICAgICAgIHJldHVybiBgJHtoZWFkZXJOYW1lfTogJHtoZWFkZXJWYWx1ZX1gO1xuICAgICAgICAgIH0pLmpvaW4oXCJcXHJcXG5cIik7XG4gICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcInJlc29sdmVkIGFsbCByZXNwb25zZSBoZWFkZXJzIHRvXCIsIGFsbEhlYWRlcnMpO1xuICAgICAgICAgIHJldHVybiBhbGxIZWFkZXJzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgKTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLnJlcXVlc3QsIHtcbiAgICAgIHJlc3BvbnNlOiB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICAgIGdldDogKCkgPT4gdGhpcy5yZXNwb25zZVxuICAgICAgfSxcbiAgICAgIHJlc3BvbnNlVGV4dDoge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICBnZXQ6ICgpID0+IHRoaXMucmVzcG9uc2VUZXh0XG4gICAgICB9LFxuICAgICAgcmVzcG9uc2VYTUw6IHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgZ2V0OiAoKSA9PiB0aGlzLnJlc3BvbnNlWE1MXG4gICAgICB9XG4gICAgfSk7XG4gICAgY29uc3QgdG90YWxSZXNwb25zZUJvZHlMZW5ndGggPSByZXNwb25zZS5oZWFkZXJzLmhhcyhcIkNvbnRlbnQtTGVuZ3RoXCIpID8gTnVtYmVyKHJlc3BvbnNlLmhlYWRlcnMuZ2V0KFwiQ29udGVudC1MZW5ndGhcIikpIDogKFxuICAgICAgLyoqXG4gICAgICAgKiBAdG9kbyBJbmZlciB0aGUgcmVzcG9uc2UgYm9keSBsZW5ndGggZnJvbSB0aGUgcmVzcG9uc2UgYm9keS5cbiAgICAgICAqL1xuICAgICAgdm9pZCAwXG4gICAgKTtcbiAgICB0aGlzLmxvZ2dlci5pbmZvKFwiY2FsY3VsYXRlZCByZXNwb25zZSBib2R5IGxlbmd0aFwiLCB0b3RhbFJlc3BvbnNlQm9keUxlbmd0aCk7XG4gICAgdGhpcy50cmlnZ2VyKFwibG9hZHN0YXJ0XCIsIHtcbiAgICAgIGxvYWRlZDogMCxcbiAgICAgIHRvdGFsOiB0b3RhbFJlc3BvbnNlQm9keUxlbmd0aFxuICAgIH0pO1xuICAgIHRoaXMuc2V0UmVhZHlTdGF0ZSh0aGlzLnJlcXVlc3QuSEVBREVSU19SRUNFSVZFRCk7XG4gICAgdGhpcy5zZXRSZWFkeVN0YXRlKHRoaXMucmVxdWVzdC5MT0FESU5HKTtcbiAgICBjb25zdCBmaW5hbGl6ZVJlc3BvbnNlID0gKCkgPT4ge1xuICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcImZpbmFsaXppbmcgdGhlIG1vY2tlZCByZXNwb25zZS4uLlwiKTtcbiAgICAgIHRoaXMuc2V0UmVhZHlTdGF0ZSh0aGlzLnJlcXVlc3QuRE9ORSk7XG4gICAgICB0aGlzLnRyaWdnZXIoXCJsb2FkXCIsIHtcbiAgICAgICAgbG9hZGVkOiB0aGlzLnJlc3BvbnNlQnVmZmVyLmJ5dGVMZW5ndGgsXG4gICAgICAgIHRvdGFsOiB0b3RhbFJlc3BvbnNlQm9keUxlbmd0aFxuICAgICAgfSk7XG4gICAgICB0aGlzLnRyaWdnZXIoXCJsb2FkZW5kXCIsIHtcbiAgICAgICAgbG9hZGVkOiB0aGlzLnJlc3BvbnNlQnVmZmVyLmJ5dGVMZW5ndGgsXG4gICAgICAgIHRvdGFsOiB0b3RhbFJlc3BvbnNlQm9keUxlbmd0aFxuICAgICAgfSk7XG4gICAgfTtcbiAgICBpZiAocmVzcG9uc2UuYm9keSkge1xuICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcIm1vY2tlZCByZXNwb25zZSBoYXMgYm9keSwgc3RyZWFtaW5nLi4uXCIpO1xuICAgICAgY29uc3QgcmVhZGVyID0gcmVzcG9uc2UuYm9keS5nZXRSZWFkZXIoKTtcbiAgICAgIGNvbnN0IHJlYWROZXh0UmVzcG9uc2VCb2R5Q2h1bmsgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgdmFsdWUsIGRvbmUgfSA9IGF3YWl0IHJlYWRlci5yZWFkKCk7XG4gICAgICAgIGlmIChkb25lKSB7XG4gICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcInJlc3BvbnNlIGJvZHkgc3RyZWFtIGRvbmUhXCIpO1xuICAgICAgICAgIGZpbmFsaXplUmVzcG9uc2UoKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcInJlYWQgcmVzcG9uc2UgYm9keSBjaHVuazpcIiwgdmFsdWUpO1xuICAgICAgICAgIHRoaXMucmVzcG9uc2VCdWZmZXIgPSBjb25jYXRBcnJheUJ1ZmZlcih0aGlzLnJlc3BvbnNlQnVmZmVyLCB2YWx1ZSk7XG4gICAgICAgICAgdGhpcy50cmlnZ2VyKFwicHJvZ3Jlc3NcIiwge1xuICAgICAgICAgICAgbG9hZGVkOiB0aGlzLnJlc3BvbnNlQnVmZmVyLmJ5dGVMZW5ndGgsXG4gICAgICAgICAgICB0b3RhbDogdG90YWxSZXNwb25zZUJvZHlMZW5ndGhcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZWFkTmV4dFJlc3BvbnNlQm9keUNodW5rKCk7XG4gICAgICB9O1xuICAgICAgcmVhZE5leHRSZXNwb25zZUJvZHlDaHVuaygpO1xuICAgIH0gZWxzZSB7XG4gICAgICBmaW5hbGl6ZVJlc3BvbnNlKCk7XG4gICAgfVxuICB9XG4gIHJlc3BvbnNlQnVmZmVyVG9UZXh0KCkge1xuICAgIHJldHVybiBkZWNvZGVCdWZmZXIodGhpcy5yZXNwb25zZUJ1ZmZlcik7XG4gIH1cbiAgZ2V0IHJlc3BvbnNlKCkge1xuICAgIHRoaXMubG9nZ2VyLmluZm8oXG4gICAgICBcImdldFJlc3BvbnNlIChyZXNwb25zZVR5cGU6ICVzKVwiLFxuICAgICAgdGhpcy5yZXF1ZXN0LnJlc3BvbnNlVHlwZVxuICAgICk7XG4gICAgaWYgKHRoaXMucmVxdWVzdC5yZWFkeVN0YXRlICE9PSB0aGlzLnJlcXVlc3QuRE9ORSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHN3aXRjaCAodGhpcy5yZXF1ZXN0LnJlc3BvbnNlVHlwZSkge1xuICAgICAgY2FzZSBcImpzb25cIjoge1xuICAgICAgICBjb25zdCByZXNwb25zZUpzb24gPSBwYXJzZUpzb24odGhpcy5yZXNwb25zZUJ1ZmZlclRvVGV4dCgpKTtcbiAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcInJlc29sdmVkIHJlc3BvbnNlIEpTT05cIiwgcmVzcG9uc2VKc29uKTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlSnNvbjtcbiAgICAgIH1cbiAgICAgIGNhc2UgXCJhcnJheWJ1ZmZlclwiOiB7XG4gICAgICAgIGNvbnN0IGFycmF5QnVmZmVyID0gdG9BcnJheUJ1ZmZlcih0aGlzLnJlc3BvbnNlQnVmZmVyKTtcbiAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcInJlc29sdmVkIHJlc3BvbnNlIEFycmF5QnVmZmVyXCIsIGFycmF5QnVmZmVyKTtcbiAgICAgICAgcmV0dXJuIGFycmF5QnVmZmVyO1xuICAgICAgfVxuICAgICAgY2FzZSBcImJsb2JcIjoge1xuICAgICAgICBjb25zdCBtaW1lVHlwZSA9IHRoaXMucmVxdWVzdC5nZXRSZXNwb25zZUhlYWRlcihcIkNvbnRlbnQtVHlwZVwiKSB8fCBcInRleHQvcGxhaW5cIjtcbiAgICAgICAgY29uc3QgcmVzcG9uc2VCbG9iID0gbmV3IEJsb2IoW3RoaXMucmVzcG9uc2VCdWZmZXJUb1RleHQoKV0sIHtcbiAgICAgICAgICB0eXBlOiBtaW1lVHlwZVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcbiAgICAgICAgICBcInJlc29sdmVkIHJlc3BvbnNlIEJsb2IgKG1pbWUgdHlwZTogJXMpXCIsXG4gICAgICAgICAgcmVzcG9uc2VCbG9iLFxuICAgICAgICAgIG1pbWVUeXBlXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXNwb25zZUJsb2I7XG4gICAgICB9XG4gICAgICBkZWZhdWx0OiB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlVGV4dCA9IHRoaXMucmVzcG9uc2VCdWZmZXJUb1RleHQoKTtcbiAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcbiAgICAgICAgICAncmVzb2x2aW5nIFwiJXNcIiByZXNwb25zZSB0eXBlIGFzIHRleHQnLFxuICAgICAgICAgIHRoaXMucmVxdWVzdC5yZXNwb25zZVR5cGUsXG4gICAgICAgICAgcmVzcG9uc2VUZXh0XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXNwb25zZVRleHQ7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGdldCByZXNwb25zZVRleHQoKSB7XG4gICAgaW52YXJpYW50KFxuICAgICAgdGhpcy5yZXF1ZXN0LnJlc3BvbnNlVHlwZSA9PT0gXCJcIiB8fCB0aGlzLnJlcXVlc3QucmVzcG9uc2VUeXBlID09PSBcInRleHRcIixcbiAgICAgIFwiSW52YWxpZFN0YXRlRXJyb3I6IFRoZSBvYmplY3QgaXMgaW4gaW52YWxpZCBzdGF0ZS5cIlxuICAgICk7XG4gICAgaWYgKHRoaXMucmVxdWVzdC5yZWFkeVN0YXRlICE9PSB0aGlzLnJlcXVlc3QuTE9BRElORyAmJiB0aGlzLnJlcXVlc3QucmVhZHlTdGF0ZSAhPT0gdGhpcy5yZXF1ZXN0LkRPTkUpIHtcbiAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cbiAgICBjb25zdCByZXNwb25zZVRleHQgPSB0aGlzLnJlc3BvbnNlQnVmZmVyVG9UZXh0KCk7XG4gICAgdGhpcy5sb2dnZXIuaW5mbygnZ2V0UmVzcG9uc2VUZXh0OiBcIiVzXCInLCByZXNwb25zZVRleHQpO1xuICAgIHJldHVybiByZXNwb25zZVRleHQ7XG4gIH1cbiAgZ2V0IHJlc3BvbnNlWE1MKCkge1xuICAgIGludmFyaWFudChcbiAgICAgIHRoaXMucmVxdWVzdC5yZXNwb25zZVR5cGUgPT09IFwiXCIgfHwgdGhpcy5yZXF1ZXN0LnJlc3BvbnNlVHlwZSA9PT0gXCJkb2N1bWVudFwiLFxuICAgICAgXCJJbnZhbGlkU3RhdGVFcnJvcjogVGhlIG9iamVjdCBpcyBpbiBpbnZhbGlkIHN0YXRlLlwiXG4gICAgKTtcbiAgICBpZiAodGhpcy5yZXF1ZXN0LnJlYWR5U3RhdGUgIT09IHRoaXMucmVxdWVzdC5ET05FKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgY29uc3QgY29udGVudFR5cGUgPSB0aGlzLnJlcXVlc3QuZ2V0UmVzcG9uc2VIZWFkZXIoXCJDb250ZW50LVR5cGVcIikgfHwgXCJcIjtcbiAgICBpZiAodHlwZW9mIERPTVBhcnNlciA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICBcIkNhbm5vdCByZXRyaWV2ZSBYTUxIdHRwUmVxdWVzdCByZXNwb25zZSBib2R5IGFzIFhNTDogRE9NUGFyc2VyIGlzIG5vdCBkZWZpbmVkLiBZb3UgYXJlIGxpa2VseSB1c2luZyBhbiBlbnZpcm9ubWVudCB0aGF0IGlzIG5vdCBicm93c2VyIG9yIGRvZXMgbm90IHBvbHlmaWxsIGJyb3dzZXIgZ2xvYmFscyBjb3JyZWN0bHkuXCJcbiAgICAgICk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgaWYgKGlzRG9tUGFyc2VyU3VwcG9ydGVkVHlwZShjb250ZW50VHlwZSkpIHtcbiAgICAgIHJldHVybiBuZXcgRE9NUGFyc2VyKCkucGFyc2VGcm9tU3RyaW5nKFxuICAgICAgICB0aGlzLnJlc3BvbnNlQnVmZmVyVG9UZXh0KCksXG4gICAgICAgIGNvbnRlbnRUeXBlXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBlcnJvcldpdGgoZXJyb3IyKSB7XG4gICAgdGhpcy5sb2dnZXIuaW5mbyhcInJlc3BvbmRpbmcgd2l0aCBhbiBlcnJvclwiKTtcbiAgICB0aGlzLnNldFJlYWR5U3RhdGUodGhpcy5yZXF1ZXN0LkRPTkUpO1xuICAgIHRoaXMudHJpZ2dlcihcImVycm9yXCIpO1xuICAgIHRoaXMudHJpZ2dlcihcImxvYWRlbmRcIik7XG4gIH1cbiAgLyoqXG4gICAqIFRyYW5zaXRpb25zIHRoaXMgcmVxdWVzdCdzIGByZWFkeVN0YXRlYCB0byB0aGUgZ2l2ZW4gb25lLlxuICAgKi9cbiAgc2V0UmVhZHlTdGF0ZShuZXh0UmVhZHlTdGF0ZSkge1xuICAgIHRoaXMubG9nZ2VyLmluZm8oXG4gICAgICBcInNldFJlYWR5U3RhdGU6ICVkIC0+ICVkXCIsXG4gICAgICB0aGlzLnJlcXVlc3QucmVhZHlTdGF0ZSxcbiAgICAgIG5leHRSZWFkeVN0YXRlXG4gICAgKTtcbiAgICBpZiAodGhpcy5yZXF1ZXN0LnJlYWR5U3RhdGUgPT09IG5leHRSZWFkeVN0YXRlKSB7XG4gICAgICB0aGlzLmxvZ2dlci5pbmZvKFwicmVhZHkgc3RhdGUgaWRlbnRpY2FsLCBza2lwcGluZyB0cmFuc2l0aW9uLi4uXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkZWZpbmUodGhpcy5yZXF1ZXN0LCBcInJlYWR5U3RhdGVcIiwgbmV4dFJlYWR5U3RhdGUpO1xuICAgIHRoaXMubG9nZ2VyLmluZm8oXCJzZXQgcmVhZHlTdGF0ZSB0bzogJWRcIiwgbmV4dFJlYWR5U3RhdGUpO1xuICAgIGlmIChuZXh0UmVhZHlTdGF0ZSAhPT0gdGhpcy5yZXF1ZXN0LlVOU0VOVCkge1xuICAgICAgdGhpcy5sb2dnZXIuaW5mbygndHJpZ2dlcnJpbmcgXCJyZWFkeXN0YXRlY2hhbmdlXCIgZXZlbnQuLi4nKTtcbiAgICAgIHRoaXMudHJpZ2dlcihcInJlYWR5c3RhdGVjaGFuZ2VcIik7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBUcmlnZ2VycyBnaXZlbiBldmVudCBvbiB0aGUgYFhNTEh0dHBSZXF1ZXN0YCBpbnN0YW5jZS5cbiAgICovXG4gIHRyaWdnZXIoZXZlbnROYW1lLCBvcHRpb25zKSB7XG4gICAgY29uc3QgY2FsbGJhY2sgPSB0aGlzLnJlcXVlc3RbYG9uJHtldmVudE5hbWV9YF07XG4gICAgY29uc3QgZXZlbnQgPSBjcmVhdGVFdmVudCh0aGlzLnJlcXVlc3QsIGV2ZW50TmFtZSwgb3B0aW9ucyk7XG4gICAgdGhpcy5sb2dnZXIuaW5mbygndHJpZ2dlciBcIiVzXCInLCBldmVudE5hbWUsIG9wdGlvbnMgfHwgXCJcIik7XG4gICAgaWYgKHR5cGVvZiBjYWxsYmFjayA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICB0aGlzLmxvZ2dlci5pbmZvKCdmb3VuZCBhIGRpcmVjdCBcIiVzXCIgY2FsbGJhY2ssIGNhbGxpbmcuLi4nLCBldmVudE5hbWUpO1xuICAgICAgY2FsbGJhY2suY2FsbCh0aGlzLnJlcXVlc3QsIGV2ZW50KTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBbcmVnaXN0ZXJlZEV2ZW50TmFtZSwgbGlzdGVuZXJzXSBvZiB0aGlzLmV2ZW50cykge1xuICAgICAgaWYgKHJlZ2lzdGVyZWRFdmVudE5hbWUgPT09IGV2ZW50TmFtZSkge1xuICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKFxuICAgICAgICAgICdmb3VuZCAlZCBsaXN0ZW5lcihzKSBmb3IgXCIlc1wiIGV2ZW50LCBjYWxsaW5nLi4uJyxcbiAgICAgICAgICBsaXN0ZW5lcnMubGVuZ3RoLFxuICAgICAgICAgIGV2ZW50TmFtZVxuICAgICAgICApO1xuICAgICAgICBsaXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXIpID0+IGxpc3RlbmVyLmNhbGwodGhpcy5yZXF1ZXN0LCBldmVudCkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAvKipcbiAgICogQ29udmVydHMgdGhpcyBgWE1MSHR0cFJlcXVlc3RgIGluc3RhbmNlIGludG8gYSBGZXRjaCBBUEkgYFJlcXVlc3RgIGluc3RhbmNlLlxuICAgKi9cbiAgdG9GZXRjaEFwaVJlcXVlc3QoKSB7XG4gICAgdGhpcy5sb2dnZXIuaW5mbyhcImNvbnZlcnRpbmcgcmVxdWVzdCB0byBhIEZldGNoIEFQSSBSZXF1ZXN0Li4uXCIpO1xuICAgIGNvbnN0IGZldGNoUmVxdWVzdCA9IG5ldyBSZXF1ZXN0KHRoaXMudXJsLmhyZWYsIHtcbiAgICAgIG1ldGhvZDogdGhpcy5tZXRob2QsXG4gICAgICBoZWFkZXJzOiB0aGlzLnJlcXVlc3RIZWFkZXJzLFxuICAgICAgLyoqXG4gICAgICAgKiBAc2VlIGh0dHBzOi8veGhyLnNwZWMud2hhdHdnLm9yZy8jY3Jvc3Mtb3JpZ2luLWNyZWRlbnRpYWxzXG4gICAgICAgKi9cbiAgICAgIGNyZWRlbnRpYWxzOiB0aGlzLnJlcXVlc3Qud2l0aENyZWRlbnRpYWxzID8gXCJpbmNsdWRlXCIgOiBcInNhbWUtb3JpZ2luXCIsXG4gICAgICBib2R5OiBbXCJHRVRcIiwgXCJIRUFEXCJdLmluY2x1ZGVzKHRoaXMubWV0aG9kKSA/IG51bGwgOiB0aGlzLnJlcXVlc3RCb2R5XG4gICAgfSk7XG4gICAgY29uc3QgcHJveHlIZWFkZXJzID0gY3JlYXRlUHJveHkoZmV0Y2hSZXF1ZXN0LmhlYWRlcnMsIHtcbiAgICAgIG1ldGhvZENhbGw6IChbbWV0aG9kTmFtZSwgYXJnc10sIGludm9rZSkgPT4ge1xuICAgICAgICBzd2l0Y2ggKG1ldGhvZE5hbWUpIHtcbiAgICAgICAgICBjYXNlIFwiYXBwZW5kXCI6XG4gICAgICAgICAgY2FzZSBcInNldFwiOiB7XG4gICAgICAgICAgICBjb25zdCBbaGVhZGVyTmFtZSwgaGVhZGVyVmFsdWVdID0gYXJncztcbiAgICAgICAgICAgIHRoaXMucmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKGhlYWRlck5hbWUsIGhlYWRlclZhbHVlKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjYXNlIFwiZGVsZXRlXCI6IHtcbiAgICAgICAgICAgIGNvbnN0IFtoZWFkZXJOYW1lXSA9IGFyZ3M7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICAgICAgIGBYTUxIdHRwUmVxdWVzdDogQ2Fubm90IHJlbW92ZSBhIFwiJHtoZWFkZXJOYW1lfVwiIGhlYWRlciBmcm9tIHRoZSBGZXRjaCBBUEkgcmVwcmVzZW50YXRpb24gb2YgdGhlIFwiJHtmZXRjaFJlcXVlc3QubWV0aG9kfSAke2ZldGNoUmVxdWVzdC51cmx9XCIgcmVxdWVzdC4gWE1MSHR0cFJlcXVlc3QgaGVhZGVycyBjYW5ub3QgYmUgcmVtb3ZlZC5gXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpbnZva2UoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBkZWZpbmUoZmV0Y2hSZXF1ZXN0LCBcImhlYWRlcnNcIiwgcHJveHlIZWFkZXJzKTtcbiAgICB0aGlzLmxvZ2dlci5pbmZvKFwiY29udmVydGVkIHJlcXVlc3QgdG8gYSBGZXRjaCBBUEkgUmVxdWVzdCFcIiwgZmV0Y2hSZXF1ZXN0KTtcbiAgICByZXR1cm4gZmV0Y2hSZXF1ZXN0O1xuICB9XG59O1xuZnVuY3Rpb24gdG9BYnNvbHV0ZVVybCh1cmwpIHtcbiAgaWYgKHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiBuZXcgVVJMKHVybCk7XG4gIH1cbiAgcmV0dXJuIG5ldyBVUkwodXJsLnRvU3RyaW5nKCksIGxvY2F0aW9uLmhyZWYpO1xufVxuZnVuY3Rpb24gZGVmaW5lKHRhcmdldCwgcHJvcGVydHksIHZhbHVlKSB7XG4gIFJlZmxlY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eSwge1xuICAgIC8vIEVuc3VyZSB3cml0YWJsZSBwcm9wZXJ0aWVzIHRvIGFsbG93IHJlZGVmaW5pbmcgcmVhZG9ubHkgcHJvcGVydGllcy5cbiAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIHZhbHVlXG4gIH0pO1xufVxuZnVuY3Rpb24gY3JlYXRlWE1MSHR0cFJlcXVlc3RQcm94eSh7XG4gIGVtaXR0ZXIsXG4gIGxvZ2dlclxufSkge1xuICBjb25zdCBYTUxIdHRwUmVxdWVzdFByb3h5ID0gbmV3IFByb3h5KGdsb2JhbFRoaXMuWE1MSHR0cFJlcXVlc3QsIHtcbiAgICBjb25zdHJ1Y3QodGFyZ2V0LCBhcmdzLCBuZXdUYXJnZXQpIHtcbiAgICAgIGxvZ2dlci5pbmZvKFwiY29uc3RydWN0ZWQgbmV3IFhNTEh0dHBSZXF1ZXN0XCIpO1xuICAgICAgY29uc3Qgb3JpZ2luYWxSZXF1ZXN0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoXG4gICAgICAgIHRhcmdldCxcbiAgICAgICAgYXJncyxcbiAgICAgICAgbmV3VGFyZ2V0XG4gICAgICApO1xuICAgICAgY29uc3QgcHJvdG90eXBlRGVzY3JpcHRvcnMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhcbiAgICAgICAgdGFyZ2V0LnByb3RvdHlwZVxuICAgICAgKTtcbiAgICAgIGZvciAoY29uc3QgcHJvcGVydHlOYW1lIGluIHByb3RvdHlwZURlc2NyaXB0b3JzKSB7XG4gICAgICAgIFJlZmxlY3QuZGVmaW5lUHJvcGVydHkoXG4gICAgICAgICAgb3JpZ2luYWxSZXF1ZXN0LFxuICAgICAgICAgIHByb3BlcnR5TmFtZSxcbiAgICAgICAgICBwcm90b3R5cGVEZXNjcmlwdG9yc1twcm9wZXJ0eU5hbWVdXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBjb25zdCB4aHJSZXF1ZXN0Q29udHJvbGxlciA9IG5ldyBYTUxIdHRwUmVxdWVzdENvbnRyb2xsZXIoXG4gICAgICAgIG9yaWdpbmFsUmVxdWVzdCxcbiAgICAgICAgbG9nZ2VyXG4gICAgICApO1xuICAgICAgeGhyUmVxdWVzdENvbnRyb2xsZXIub25SZXF1ZXN0ID0gYXN5bmMgZnVuY3Rpb24oeyByZXF1ZXN0LCByZXF1ZXN0SWQgfSkge1xuICAgICAgICBjb25zdCB7IGludGVyYWN0aXZlUmVxdWVzdCwgcmVxdWVzdENvbnRyb2xsZXIgfSA9IHRvSW50ZXJhY3RpdmVSZXF1ZXN0KHJlcXVlc3QpO1xuICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKFwiYXdhaXRpbmcgbW9ja2VkIHJlc3BvbnNlLi4uXCIpO1xuICAgICAgICBlbWl0dGVyLm9uY2UoXCJyZXF1ZXN0XCIsICh7IHJlcXVlc3RJZDogcGVuZGluZ1JlcXVlc3RJZCB9KSA9PiB7XG4gICAgICAgICAgaWYgKHBlbmRpbmdSZXF1ZXN0SWQgIT09IHJlcXVlc3RJZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAocmVxdWVzdENvbnRyb2xsZXIucmVzcG9uc2VQcm9taXNlLnN0YXRlID09PSBcInBlbmRpbmdcIikge1xuICAgICAgICAgICAgcmVxdWVzdENvbnRyb2xsZXIucmVzcG9uZFdpdGgodm9pZCAwKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCByZXNvbHZlclJlc3VsdCA9IGF3YWl0IHVudGlsKGFzeW5jICgpID0+IHtcbiAgICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKFxuICAgICAgICAgICAgJ2VtaXR0aW5nIHRoZSBcInJlcXVlc3RcIiBldmVudCBmb3IgJXMgbGlzdGVuZXIocykuLi4nLFxuICAgICAgICAgICAgZW1pdHRlci5saXN0ZW5lckNvdW50KFwicmVxdWVzdFwiKVxuICAgICAgICAgICk7XG4gICAgICAgICAgYXdhaXQgZW1pdEFzeW5jKGVtaXR0ZXIsIFwicmVxdWVzdFwiLCB7XG4gICAgICAgICAgICByZXF1ZXN0OiBpbnRlcmFjdGl2ZVJlcXVlc3QsXG4gICAgICAgICAgICByZXF1ZXN0SWRcbiAgICAgICAgICB9KTtcbiAgICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKCdhbGwgXCJyZXF1ZXN0XCIgbGlzdGVuZXJzIHNldHRsZWQhJyk7XG4gICAgICAgICAgY29uc3QgbW9ja2VkUmVzcG9uc2UyID0gYXdhaXQgcmVxdWVzdENvbnRyb2xsZXIucmVzcG9uc2VQcm9taXNlO1xuICAgICAgICAgIHRoaXMubG9nZ2VyLmluZm8oXCJldmVudC5yZXNwb25kV2l0aCBjYWxsZWQgd2l0aDpcIiwgbW9ja2VkUmVzcG9uc2UyKTtcbiAgICAgICAgICByZXR1cm4gbW9ja2VkUmVzcG9uc2UyO1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHJlc29sdmVyUmVzdWx0LmVycm9yKSB7XG4gICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcbiAgICAgICAgICAgIFwicmVxdWVzdCBsaXN0ZW5lciB0aHJldyBhbiBleGNlcHRpb24sIGFib3J0aW5nIHJlcXVlc3QuLi5cIixcbiAgICAgICAgICAgIHJlc29sdmVyUmVzdWx0LmVycm9yXG4gICAgICAgICAgKTtcbiAgICAgICAgICBpZiAocmVzb2x2ZXJSZXN1bHQuZXJyb3IgaW5zdGFuY2VvZiBSZXNwb25zZSkge1xuICAgICAgICAgICAgaWYgKGlzUmVzcG9uc2VFcnJvcihyZXNvbHZlclJlc3VsdC5lcnJvcikpIHtcbiAgICAgICAgICAgICAgeGhyUmVxdWVzdENvbnRyb2xsZXIuZXJyb3JXaXRoKG5ldyBUeXBlRXJyb3IoXCJOZXR3b3JrIGVycm9yXCIpKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHRoaXMucmVzcG9uZFdpdGgocmVzb2x2ZXJSZXN1bHQuZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoZW1pdHRlci5saXN0ZW5lckNvdW50KFwidW5oYW5kbGVkRXhjZXB0aW9uXCIpID4gMCkge1xuICAgICAgICAgICAgYXdhaXQgZW1pdEFzeW5jKGVtaXR0ZXIsIFwidW5oYW5kbGVkRXhjZXB0aW9uXCIsIHtcbiAgICAgICAgICAgICAgZXJyb3I6IHJlc29sdmVyUmVzdWx0LmVycm9yLFxuICAgICAgICAgICAgICByZXF1ZXN0LFxuICAgICAgICAgICAgICByZXF1ZXN0SWQsXG4gICAgICAgICAgICAgIGNvbnRyb2xsZXI6IHtcbiAgICAgICAgICAgICAgICByZXNwb25kV2l0aDogeGhyUmVxdWVzdENvbnRyb2xsZXIucmVzcG9uZFdpdGguYmluZCh4aHJSZXF1ZXN0Q29udHJvbGxlciksXG4gICAgICAgICAgICAgICAgZXJyb3JXaXRoOiB4aHJSZXF1ZXN0Q29udHJvbGxlci5lcnJvcldpdGguYmluZCh4aHJSZXF1ZXN0Q29udHJvbGxlcilcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAob3JpZ2luYWxSZXF1ZXN0LnJlYWR5U3RhdGUgPiBYTUxIdHRwUmVxdWVzdC5PUEVORUQpIHtcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICB4aHJSZXF1ZXN0Q29udHJvbGxlci5yZXNwb25kV2l0aChcbiAgICAgICAgICAgIGNyZWF0ZVNlcnZlckVycm9yUmVzcG9uc2UocmVzb2x2ZXJSZXN1bHQuZXJyb3IpXG4gICAgICAgICAgKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbW9ja2VkUmVzcG9uc2UgPSByZXNvbHZlclJlc3VsdC5kYXRhO1xuICAgICAgICBpZiAodHlwZW9mIG1vY2tlZFJlc3BvbnNlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcbiAgICAgICAgICAgIFwicmVjZWl2ZWQgbW9ja2VkIHJlc3BvbnNlOiAlZCAlc1wiLFxuICAgICAgICAgICAgbW9ja2VkUmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgICAgICAgbW9ja2VkUmVzcG9uc2Uuc3RhdHVzVGV4dFxuICAgICAgICAgICk7XG4gICAgICAgICAgaWYgKGlzUmVzcG9uc2VFcnJvcihtb2NrZWRSZXNwb25zZSkpIHtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLmluZm8oXG4gICAgICAgICAgICAgIFwicmVjZWl2ZWQgYSBuZXR3b3JrIGVycm9yIHJlc3BvbnNlLCByZWplY3RpbmcgdGhlIHJlcXVlc3QgcHJvbWlzZS4uLlwiXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgeGhyUmVxdWVzdENvbnRyb2xsZXIuZXJyb3JXaXRoKG5ldyBUeXBlRXJyb3IoXCJOZXR3b3JrIGVycm9yXCIpKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHhoclJlcXVlc3RDb250cm9sbGVyLnJlc3BvbmRXaXRoKG1vY2tlZFJlc3BvbnNlKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKFxuICAgICAgICAgIFwibm8gbW9ja2VkIHJlc3BvbnNlIHJlY2VpdmVkLCBwZXJmb3JtaW5nIHJlcXVlc3QgYXMtaXMuLi5cIlxuICAgICAgICApO1xuICAgICAgfTtcbiAgICAgIHhoclJlcXVlc3RDb250cm9sbGVyLm9uUmVzcG9uc2UgPSBhc3luYyBmdW5jdGlvbih7XG4gICAgICAgIHJlc3BvbnNlLFxuICAgICAgICBpc01vY2tlZFJlc3BvbnNlLFxuICAgICAgICByZXF1ZXN0LFxuICAgICAgICByZXF1ZXN0SWRcbiAgICAgIH0pIHtcbiAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcbiAgICAgICAgICAnZW1pdHRpbmcgdGhlIFwicmVzcG9uc2VcIiBldmVudCBmb3IgJXMgbGlzdGVuZXIocykuLi4nLFxuICAgICAgICAgIGVtaXR0ZXIubGlzdGVuZXJDb3VudChcInJlc3BvbnNlXCIpXG4gICAgICAgICk7XG4gICAgICAgIGVtaXR0ZXIuZW1pdChcInJlc3BvbnNlXCIsIHtcbiAgICAgICAgICByZXNwb25zZSxcbiAgICAgICAgICBpc01vY2tlZFJlc3BvbnNlLFxuICAgICAgICAgIHJlcXVlc3QsXG4gICAgICAgICAgcmVxdWVzdElkXG4gICAgICAgIH0pO1xuICAgICAgfTtcbiAgICAgIHJldHVybiB4aHJSZXF1ZXN0Q29udHJvbGxlci5yZXF1ZXN0O1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBYTUxIdHRwUmVxdWVzdFByb3h5O1xufVxudmFyIF9YTUxIdHRwUmVxdWVzdEludGVyY2VwdG9yID0gY2xhc3MgZXh0ZW5kcyBJbnRlcmNlcHRvciB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKF9YTUxIdHRwUmVxdWVzdEludGVyY2VwdG9yLmludGVyY2VwdG9yU3ltYm9sKTtcbiAgfVxuICBjaGVja0Vudmlyb25tZW50KCkge1xuICAgIHJldHVybiB0eXBlb2YgZ2xvYmFsVGhpcy5YTUxIdHRwUmVxdWVzdCAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgfVxuICBzZXR1cCgpIHtcbiAgICBjb25zdCBsb2dnZXIgPSB0aGlzLmxvZ2dlci5leHRlbmQoXCJzZXR1cFwiKTtcbiAgICBsb2dnZXIuaW5mbygncGF0Y2hpbmcgXCJYTUxIdHRwUmVxdWVzdFwiIG1vZHVsZS4uLicpO1xuICAgIGNvbnN0IFB1cmVYTUxIdHRwUmVxdWVzdCA9IGdsb2JhbFRoaXMuWE1MSHR0cFJlcXVlc3Q7XG4gICAgaW52YXJpYW50KFxuICAgICAgIVB1cmVYTUxIdHRwUmVxdWVzdFtJU19QQVRDSEVEX01PRFVMRV0sXG4gICAgICAnRmFpbGVkIHRvIHBhdGNoIHRoZSBcIlhNTEh0dHBSZXF1ZXN0XCIgbW9kdWxlOiBhbHJlYWR5IHBhdGNoZWQuJ1xuICAgICk7XG4gICAgZ2xvYmFsVGhpcy5YTUxIdHRwUmVxdWVzdCA9IGNyZWF0ZVhNTEh0dHBSZXF1ZXN0UHJveHkoe1xuICAgICAgZW1pdHRlcjogdGhpcy5lbWl0dGVyLFxuICAgICAgbG9nZ2VyOiB0aGlzLmxvZ2dlclxuICAgIH0pO1xuICAgIGxvZ2dlci5pbmZvKFxuICAgICAgJ25hdGl2ZSBcIlhNTEh0dHBSZXF1ZXN0XCIgbW9kdWxlIHBhdGNoZWQhJyxcbiAgICAgIGdsb2JhbFRoaXMuWE1MSHR0cFJlcXVlc3QubmFtZVxuICAgICk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGdsb2JhbFRoaXMuWE1MSHR0cFJlcXVlc3QsIElTX1BBVENIRURfTU9EVUxFLCB7XG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgdmFsdWU6IHRydWVcbiAgICB9KTtcbiAgICB0aGlzLnN1YnNjcmlwdGlvbnMucHVzaCgoKSA9PiB7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZ2xvYmFsVGhpcy5YTUxIdHRwUmVxdWVzdCwgSVNfUEFUQ0hFRF9NT0RVTEUsIHtcbiAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgfSk7XG4gICAgICBnbG9iYWxUaGlzLlhNTEh0dHBSZXF1ZXN0ID0gUHVyZVhNTEh0dHBSZXF1ZXN0O1xuICAgICAgbG9nZ2VyLmluZm8oXG4gICAgICAgICduYXRpdmUgXCJYTUxIdHRwUmVxdWVzdFwiIG1vZHVsZSByZXN0b3JlZCEnLFxuICAgICAgICBnbG9iYWxUaGlzLlhNTEh0dHBSZXF1ZXN0Lm5hbWVcbiAgICAgICk7XG4gICAgfSk7XG4gIH1cbn07XG52YXIgWE1MSHR0cFJlcXVlc3RJbnRlcmNlcHRvciA9IF9YTUxIdHRwUmVxdWVzdEludGVyY2VwdG9yO1xuWE1MSHR0cFJlcXVlc3RJbnRlcmNlcHRvci5pbnRlcmNlcHRvclN5bWJvbCA9IFN5bWJvbChcInhoclwiKTtcblxuLy8gc3JjL2Jyb3dzZXIvc2V0dXBXb3JrZXIvc3RhcnQvY3JlYXRlRmFsbGJhY2tSZXF1ZXN0TGlzdGVuZXIudHNcbmltcG9ydCB7IGhhbmRsZVJlcXVlc3QgYXMgaGFuZGxlUmVxdWVzdDIgfSBmcm9tICcuLi9jb3JlL3V0aWxzL2hhbmRsZVJlcXVlc3QubWpzJztcbmZ1bmN0aW9uIGNyZWF0ZUZhbGxiYWNrUmVxdWVzdExpc3RlbmVyKGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgY29uc3QgaW50ZXJjZXB0b3IgPSBuZXcgQmF0Y2hJbnRlcmNlcHRvcih7XG4gICAgbmFtZTogXCJmYWxsYmFja1wiLFxuICAgIGludGVyY2VwdG9yczogW25ldyBGZXRjaEludGVyY2VwdG9yKCksIG5ldyBYTUxIdHRwUmVxdWVzdEludGVyY2VwdG9yKCldXG4gIH0pO1xuICBpbnRlcmNlcHRvci5vbihcInJlcXVlc3RcIiwgYXN5bmMgKHsgcmVxdWVzdCwgcmVxdWVzdElkIH0pID0+IHtcbiAgICBjb25zdCByZXF1ZXN0Q2xvbmVGb3JMb2dzID0gcmVxdWVzdC5jbG9uZSgpO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgaGFuZGxlUmVxdWVzdDIoXG4gICAgICByZXF1ZXN0LFxuICAgICAgcmVxdWVzdElkLFxuICAgICAgY29udGV4dC5nZXRSZXF1ZXN0SGFuZGxlcnMoKSxcbiAgICAgIG9wdGlvbnMsXG4gICAgICBjb250ZXh0LmVtaXR0ZXIsXG4gICAgICB7XG4gICAgICAgIG9uTW9ja2VkUmVzcG9uc2UoXywgeyBoYW5kbGVyLCBwYXJzZWRSZXN1bHQgfSkge1xuICAgICAgICAgIGlmICghb3B0aW9ucy5xdWlldCkge1xuICAgICAgICAgICAgY29udGV4dC5lbWl0dGVyLm9uY2UoXCJyZXNwb25zZTptb2NrZWRcIiwgKHsgcmVzcG9uc2U6IHJlc3BvbnNlMiB9KSA9PiB7XG4gICAgICAgICAgICAgIGhhbmRsZXIubG9nKHtcbiAgICAgICAgICAgICAgICByZXF1ZXN0OiByZXF1ZXN0Q2xvbmVGb3JMb2dzLFxuICAgICAgICAgICAgICAgIHJlc3BvbnNlOiByZXNwb25zZTIsXG4gICAgICAgICAgICAgICAgcGFyc2VkUmVzdWx0XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgKTtcbiAgICBpZiAocmVzcG9uc2UpIHtcbiAgICAgIHJlcXVlc3QucmVzcG9uZFdpdGgocmVzcG9uc2UpO1xuICAgIH1cbiAgfSk7XG4gIGludGVyY2VwdG9yLm9uKFxuICAgIFwicmVzcG9uc2VcIixcbiAgICAoeyByZXNwb25zZSwgaXNNb2NrZWRSZXNwb25zZSwgcmVxdWVzdCwgcmVxdWVzdElkIH0pID0+IHtcbiAgICAgIGNvbnRleHQuZW1pdHRlci5lbWl0KFxuICAgICAgICBpc01vY2tlZFJlc3BvbnNlID8gXCJyZXNwb25zZTptb2NrZWRcIiA6IFwicmVzcG9uc2U6YnlwYXNzXCIsXG4gICAgICAgIHtcbiAgICAgICAgICByZXNwb25zZSxcbiAgICAgICAgICByZXF1ZXN0LFxuICAgICAgICAgIHJlcXVlc3RJZFxuICAgICAgICB9XG4gICAgICApO1xuICAgIH1cbiAgKTtcbiAgaW50ZXJjZXB0b3IuYXBwbHkoKTtcbiAgcmV0dXJuIGludGVyY2VwdG9yO1xufVxuXG4vLyBzcmMvYnJvd3Nlci9zZXR1cFdvcmtlci9zdGFydC9jcmVhdGVGYWxsYmFja1N0YXJ0LnRzXG5mdW5jdGlvbiBjcmVhdGVGYWxsYmFja1N0YXJ0KGNvbnRleHQpIHtcbiAgcmV0dXJuIGFzeW5jIGZ1bmN0aW9uIHN0YXJ0KG9wdGlvbnMpIHtcbiAgICBjb250ZXh0LmZhbGxiYWNrSW50ZXJjZXB0b3IgPSBjcmVhdGVGYWxsYmFja1JlcXVlc3RMaXN0ZW5lcihcbiAgICAgIGNvbnRleHQsXG4gICAgICBvcHRpb25zXG4gICAgKTtcbiAgICBwcmludFN0YXJ0TWVzc2FnZSh7XG4gICAgICBtZXNzYWdlOiBcIk1vY2tpbmcgZW5hYmxlZCAoZmFsbGJhY2sgbW9kZSkuXCIsXG4gICAgICBxdWlldDogb3B0aW9ucy5xdWlldFxuICAgIH0pO1xuICAgIHJldHVybiB2b2lkIDA7XG4gIH07XG59XG5cbi8vIHNyYy9icm93c2VyL3NldHVwV29ya2VyL3N0b3AvY3JlYXRlRmFsbGJhY2tTdG9wLnRzXG5mdW5jdGlvbiBjcmVhdGVGYWxsYmFja1N0b3AoY29udGV4dCkge1xuICByZXR1cm4gZnVuY3Rpb24gc3RvcCgpIHtcbiAgICBjb250ZXh0LmZhbGxiYWNrSW50ZXJjZXB0b3I/LmRpc3Bvc2UoKTtcbiAgICBwcmludFN0b3BNZXNzYWdlKHsgcXVpZXQ6IGNvbnRleHQuc3RhcnRPcHRpb25zPy5xdWlldCB9KTtcbiAgfTtcbn1cblxuLy8gc3JjL2Jyb3dzZXIvc2V0dXBXb3JrZXIvc2V0dXBXb3JrZXIudHNcbmltcG9ydCB7IGRldlV0aWxzIGFzIGRldlV0aWxzMTAgfSBmcm9tICcuLi9jb3JlL3V0aWxzL2ludGVybmFsL2RldlV0aWxzLm1qcyc7XG5pbXBvcnQgeyBTZXR1cEFwaSB9IGZyb20gJy4uL2NvcmUvU2V0dXBBcGkubWpzJztcbmltcG9ydCB7IG1lcmdlUmlnaHQgYXMgbWVyZ2VSaWdodDIgfSBmcm9tICcuLi9jb3JlL3V0aWxzL2ludGVybmFsL21lcmdlUmlnaHQubWpzJztcblxuLy8gc3JjL2Jyb3dzZXIvdXRpbHMvc3VwcG9ydHNSZWFkYWJsZVN0cmVhbVRyYW5zZmVyLnRzXG5mdW5jdGlvbiBzdXBwb3J0c1JlYWRhYmxlU3RyZWFtVHJhbnNmZXIoKSB7XG4gIHRyeSB7XG4gICAgY29uc3Qgc3RyZWFtID0gbmV3IFJlYWRhYmxlU3RyZWFtKHtcbiAgICAgIHN0YXJ0OiAoY29udHJvbGxlcikgPT4gY29udHJvbGxlci5jbG9zZSgpXG4gICAgfSk7XG4gICAgY29uc3QgbWVzc2FnZSA9IG5ldyBNZXNzYWdlQ2hhbm5lbCgpO1xuICAgIG1lc3NhZ2UucG9ydDEucG9zdE1lc3NhZ2Uoc3RyZWFtLCBbc3RyZWFtXSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGVycm9yMikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG4vLyBzcmMvYnJvd3Nlci9zZXR1cFdvcmtlci9zZXR1cFdvcmtlci50c1xudmFyIFNldHVwV29ya2VyQXBpID0gY2xhc3MgZXh0ZW5kcyBTZXR1cEFwaSB7XG4gIGNvbnRleHQ7XG4gIHN0YXJ0SGFuZGxlciA9IG51bGw7XG4gIHN0b3BIYW5kbGVyID0gbnVsbDtcbiAgbGlzdGVuZXJzO1xuICBjb25zdHJ1Y3RvciguLi5oYW5kbGVycykge1xuICAgIHN1cGVyKC4uLmhhbmRsZXJzKTtcbiAgICBpbnZhcmlhbnQoXG4gICAgICAhaXNOb2RlUHJvY2VzcygpLFxuICAgICAgZGV2VXRpbHMxMC5mb3JtYXRNZXNzYWdlKFxuICAgICAgICBcIkZhaWxlZCB0byBleGVjdXRlIGBzZXR1cFdvcmtlcmAgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudC4gQ29uc2lkZXIgdXNpbmcgYHNldHVwU2VydmVyYCBmb3IgTm9kZS5qcyBlbnZpcm9ubWVudCBpbnN0ZWFkLlwiXG4gICAgICApXG4gICAgKTtcbiAgICB0aGlzLmxpc3RlbmVycyA9IFtdO1xuICAgIHRoaXMuY29udGV4dCA9IHRoaXMuY3JlYXRlV29ya2VyQ29udGV4dCgpO1xuICB9XG4gIGNyZWF0ZVdvcmtlckNvbnRleHQoKSB7XG4gICAgY29uc3QgY29udGV4dCA9IHtcbiAgICAgIC8vIE1vY2tpbmcgaXMgbm90IGNvbnNpZGVyZWQgZW5hYmxlZCB1bnRpbCB0aGUgd29ya2VyXG4gICAgICAvLyBzaWduYWxzIGJhY2sgdGhlIHN1Y2Nlc3NmdWwgYWN0aXZhdGlvbiBldmVudC5cbiAgICAgIGlzTW9ja2luZ0VuYWJsZWQ6IGZhbHNlLFxuICAgICAgc3RhcnRPcHRpb25zOiBudWxsLFxuICAgICAgd29ya2VyOiBudWxsLFxuICAgICAgZ2V0UmVxdWVzdEhhbmRsZXJzOiAoKSA9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmhhbmRsZXJzQ29udHJvbGxlci5jdXJyZW50SGFuZGxlcnMoKTtcbiAgICAgIH0sXG4gICAgICByZWdpc3RyYXRpb246IG51bGwsXG4gICAgICByZXF1ZXN0czogLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKSxcbiAgICAgIGVtaXR0ZXI6IHRoaXMuZW1pdHRlcixcbiAgICAgIHdvcmtlckNoYW5uZWw6IHtcbiAgICAgICAgb246IChldmVudFR5cGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgdGhpcy5jb250ZXh0LmV2ZW50cy5hZGRMaXN0ZW5lcihuYXZpZ2F0b3Iuc2VydmljZVdvcmtlciwgXCJtZXNzYWdlXCIsIChldmVudCkgPT4ge1xuICAgICAgICAgICAgaWYgKGV2ZW50LnNvdXJjZSAhPT0gdGhpcy5jb250ZXh0Lndvcmtlcikge1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gZXZlbnQuZGF0YTtcbiAgICAgICAgICAgIGlmICghbWVzc2FnZSkge1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobWVzc2FnZS50eXBlID09PSBldmVudFR5cGUpIHtcbiAgICAgICAgICAgICAgY2FsbGJhY2soZXZlbnQsIG1lc3NhZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBzZW5kOiAodHlwZSkgPT4ge1xuICAgICAgICAgIHRoaXMuY29udGV4dC53b3JrZXI/LnBvc3RNZXNzYWdlKHR5cGUpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgZXZlbnRzOiB7XG4gICAgICAgIGFkZExpc3RlbmVyOiAodGFyZ2V0LCBldmVudFR5cGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjayk7XG4gICAgICAgICAgdGhpcy5saXN0ZW5lcnMucHVzaCh7XG4gICAgICAgICAgICBldmVudFR5cGUsXG4gICAgICAgICAgICB0YXJnZXQsXG4gICAgICAgICAgICBjYWxsYmFja1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICB0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGNhbGxiYWNrKTtcbiAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgICAgICByZW1vdmVBbGxMaXN0ZW5lcnM6ICgpID0+IHtcbiAgICAgICAgICBmb3IgKGNvbnN0IHsgdGFyZ2V0LCBldmVudFR5cGUsIGNhbGxiYWNrIH0gb2YgdGhpcy5saXN0ZW5lcnMpIHtcbiAgICAgICAgICAgIHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgY2FsbGJhY2spO1xuICAgICAgICAgIH1cbiAgICAgICAgICB0aGlzLmxpc3RlbmVycyA9IFtdO1xuICAgICAgICB9LFxuICAgICAgICBvbmNlOiAoZXZlbnRUeXBlKSA9PiB7XG4gICAgICAgICAgY29uc3QgYmluZGluZ3MgPSBbXTtcbiAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaGFuZGxlSW5jb21pbmdNZXNzYWdlID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbWVzc2FnZSA9IGV2ZW50LmRhdGE7XG4gICAgICAgICAgICAgICAgaWYgKG1lc3NhZ2UudHlwZSA9PT0gZXZlbnRUeXBlKSB7XG4gICAgICAgICAgICAgICAgICByZXNvbHZlKG1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IyKSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yMik7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBiaW5kaW5ncy5wdXNoKFxuICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZXZlbnRzLmFkZExpc3RlbmVyKFxuICAgICAgICAgICAgICAgIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLFxuICAgICAgICAgICAgICAgIFwibWVzc2FnZVwiLFxuICAgICAgICAgICAgICAgIGhhbmRsZUluY29taW5nTWVzc2FnZVxuICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZXZlbnRzLmFkZExpc3RlbmVyKFxuICAgICAgICAgICAgICAgIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLFxuICAgICAgICAgICAgICAgIFwibWVzc2FnZWVycm9yXCIsXG4gICAgICAgICAgICAgICAgcmVqZWN0XG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSkuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgICBiaW5kaW5ncy5mb3JFYWNoKCh1bmJpbmQpID0+IHVuYmluZCgpKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHN1cHBvcnRzOiB7XG4gICAgICAgIHNlcnZpY2VXb3JrZXJBcGk6ICEoXCJzZXJ2aWNlV29ya2VyXCIgaW4gbmF2aWdhdG9yKSB8fCBsb2NhdGlvbi5wcm90b2NvbCA9PT0gXCJmaWxlOlwiLFxuICAgICAgICByZWFkYWJsZVN0cmVhbVRyYW5zZmVyOiBzdXBwb3J0c1JlYWRhYmxlU3RyZWFtVHJhbnNmZXIoKVxuICAgICAgfVxuICAgIH07XG4gICAgdGhpcy5zdGFydEhhbmRsZXIgPSBjb250ZXh0LnN1cHBvcnRzLnNlcnZpY2VXb3JrZXJBcGkgPyBjcmVhdGVGYWxsYmFja1N0YXJ0KGNvbnRleHQpIDogY3JlYXRlU3RhcnRIYW5kbGVyKGNvbnRleHQpO1xuICAgIHRoaXMuc3RvcEhhbmRsZXIgPSBjb250ZXh0LnN1cHBvcnRzLnNlcnZpY2VXb3JrZXJBcGkgPyBjcmVhdGVGYWxsYmFja1N0b3AoY29udGV4dCkgOiBjcmVhdGVTdG9wKGNvbnRleHQpO1xuICAgIHJldHVybiBjb250ZXh0O1xuICB9XG4gIGFzeW5jIHN0YXJ0KG9wdGlvbnMgPSB7fSkge1xuICAgIGlmIChvcHRpb25zLndhaXRVbnRpbFJlYWR5ID09PSB0cnVlKSB7XG4gICAgICBkZXZVdGlsczEwLndhcm4oXG4gICAgICAgICdUaGUgXCJ3YWl0VW50aWxSZWFkeVwiIG9wdGlvbiBoYXMgYmVlbiBkZXByZWNhdGVkLiBQbGVhc2UgcmVtb3ZlIGl0IGZyb20gdGhpcyBcIndvcmtlci5zdGFydCgpXCIgY2FsbC4gRm9sbG93IHRoZSByZWNvbW1lbmRlZCBCcm93c2VyIGludGVncmF0aW9uIChodHRwczovL21zd2pzLmlvL2RvY3MvaW50ZWdyYXRpb25zL2Jyb3dzZXIpIHRvIGVsaW1pbmF0ZSBhbnkgcmFjZSBjb25kaXRpb25zIGJldHdlZW4gdGhlIFNlcnZpY2UgV29ya2VyIHJlZ2lzdHJhdGlvbiBhbmQgYW55IHJlcXVlc3RzIG1hZGUgYnkgeW91ciBhcHBsaWNhdGlvbiBvbiBpbml0aWFsIHJlbmRlci4nXG4gICAgICApO1xuICAgIH1cbiAgICB0aGlzLmNvbnRleHQuc3RhcnRPcHRpb25zID0gbWVyZ2VSaWdodDIoXG4gICAgICBERUZBVUxUX1NUQVJUX09QVElPTlMsXG4gICAgICBvcHRpb25zXG4gICAgKTtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5zdGFydEhhbmRsZXIodGhpcy5jb250ZXh0LnN0YXJ0T3B0aW9ucywgb3B0aW9ucyk7XG4gIH1cbiAgc3RvcCgpIHtcbiAgICBzdXBlci5kaXNwb3NlKCk7XG4gICAgdGhpcy5jb250ZXh0LmV2ZW50cy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLmNvbnRleHQuZW1pdHRlci5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLnN0b3BIYW5kbGVyKCk7XG4gIH1cbn07XG5mdW5jdGlvbiBzZXR1cFdvcmtlciguLi5oYW5kbGVycykge1xuICByZXR1cm4gbmV3IFNldHVwV29ya2VyQXBpKC4uLmhhbmRsZXJzKTtcbn1cbmV4cG9ydCB7XG4gIFNldHVwV29ya2VyQXBpLFxuICBzZXR1cFdvcmtlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/browser/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/HttpResponse.mjs":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/HttpResponse.mjs ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpResponse: function() { return /* binding */ HttpResponse; }\n/* harmony export */ });\n/* harmony import */ var _utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/HttpResponse/decorators.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/HttpResponse/decorators.mjs\");\n\nclass HttpResponse extends Response {\n  constructor(body, init) {\n    const responseInit = (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__.normalizeResponseInit)(init);\n    super(body, responseInit);\n    (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__.decorateResponse)(this, responseInit);\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"text/plain\"` body.\n   * @example\n   * HttpResponse.text('hello world')\n   * HttpResponse.text('Error', { status: 500 })\n   */\n  static text(body, init) {\n    const responseInit = (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__.normalizeResponseInit)(init);\n    if (!responseInit.headers.has(\"Content-Type\")) {\n      responseInit.headers.set(\"Content-Type\", \"text/plain\");\n    }\n    if (!responseInit.headers.has(\"Content-Length\")) {\n      responseInit.headers.set(\n        \"Content-Length\",\n        body ? new Blob([body]).size.toString() : \"0\"\n      );\n    }\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"application/json\"` body.\n   * @example\n   * HttpResponse.json({ firstName: 'John' })\n   * HttpResponse.json({ error: 'Not Authorized' }, { status: 401 })\n   */\n  static json(body, init) {\n    const responseInit = (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__.normalizeResponseInit)(init);\n    if (!responseInit.headers.has(\"Content-Type\")) {\n      responseInit.headers.set(\"Content-Type\", \"application/json\");\n    }\n    const responseText = JSON.stringify(body);\n    if (!responseInit.headers.has(\"Content-Length\")) {\n      responseInit.headers.set(\n        \"Content-Length\",\n        responseText ? new Blob([responseText]).size.toString() : \"0\"\n      );\n    }\n    return new HttpResponse(\n      responseText,\n      responseInit\n    );\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"application/xml\"` body.\n   * @example\n   * HttpResponse.xml(`<user name=\"John\" />`)\n   * HttpResponse.xml(`<article id=\"abc-123\" />`, { status: 201 })\n   */\n  static xml(body, init) {\n    const responseInit = (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__.normalizeResponseInit)(init);\n    if (!responseInit.headers.has(\"Content-Type\")) {\n      responseInit.headers.set(\"Content-Type\", \"text/xml\");\n    }\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with an `ArrayBuffer` body.\n   * @example\n   * const buffer = new ArrayBuffer(3)\n   * const view = new Uint8Array(buffer)\n   * view.set([1, 2, 3])\n   *\n   * HttpResponse.arrayBuffer(buffer)\n   */\n  static arrayBuffer(body, init) {\n    const responseInit = (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__.normalizeResponseInit)(init);\n    if (body) {\n      responseInit.headers.set(\"Content-Length\", body.byteLength.toString());\n    }\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with a `FormData` body.\n   * @example\n   * const data = new FormData()\n   * data.set('name', 'Alice')\n   *\n   * HttpResponse.formData(data)\n   */\n  static formData(body, init) {\n    return new HttpResponse(body, (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__.normalizeResponseInit)(init));\n  }\n}\n\n//# sourceMappingURL=HttpResponse.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL0h0dHBSZXNwb25zZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFHNkM7QUFDN0M7QUFDQTtBQUNBLHlCQUF5Qix5RkFBcUI7QUFDOUM7QUFDQSxJQUFJLG9GQUFnQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLGFBQWE7QUFDL0M7QUFDQTtBQUNBLHlCQUF5Qix5RkFBcUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixtQkFBbUI7QUFDNUMseUJBQXlCLHlCQUF5QixJQUFJLGFBQWE7QUFDbkU7QUFDQTtBQUNBLHlCQUF5Qix5RkFBcUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsYUFBYTtBQUNqRTtBQUNBO0FBQ0EseUJBQXlCLHlGQUFxQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIseUZBQXFCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MseUZBQXFCO0FBQ3ZEO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL0h0dHBSZXNwb25zZS5tanM/NGU0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBkZWNvcmF0ZVJlc3BvbnNlLFxuICBub3JtYWxpemVSZXNwb25zZUluaXRcbn0gZnJvbSAnLi91dGlscy9IdHRwUmVzcG9uc2UvZGVjb3JhdG9ycy5tanMnO1xuY2xhc3MgSHR0cFJlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuICBjb25zdHJ1Y3Rvcihib2R5LCBpbml0KSB7XG4gICAgY29uc3QgcmVzcG9uc2VJbml0ID0gbm9ybWFsaXplUmVzcG9uc2VJbml0KGluaXQpO1xuICAgIHN1cGVyKGJvZHksIHJlc3BvbnNlSW5pdCk7XG4gICAgZGVjb3JhdGVSZXNwb25zZSh0aGlzLCByZXNwb25zZUluaXQpO1xuICB9XG4gIC8qKlxuICAgKiBDcmVhdGUgYSBgUmVzcG9uc2VgIHdpdGggYSBgQ29udGVudC1UeXBlOiBcInRleHQvcGxhaW5cImAgYm9keS5cbiAgICogQGV4YW1wbGVcbiAgICogSHR0cFJlc3BvbnNlLnRleHQoJ2hlbGxvIHdvcmxkJylcbiAgICogSHR0cFJlc3BvbnNlLnRleHQoJ0Vycm9yJywgeyBzdGF0dXM6IDUwMCB9KVxuICAgKi9cbiAgc3RhdGljIHRleHQoYm9keSwgaW5pdCkge1xuICAgIGNvbnN0IHJlc3BvbnNlSW5pdCA9IG5vcm1hbGl6ZVJlc3BvbnNlSW5pdChpbml0KTtcbiAgICBpZiAoIXJlc3BvbnNlSW5pdC5oZWFkZXJzLmhhcyhcIkNvbnRlbnQtVHlwZVwiKSkge1xuICAgICAgcmVzcG9uc2VJbml0LmhlYWRlcnMuc2V0KFwiQ29udGVudC1UeXBlXCIsIFwidGV4dC9wbGFpblwiKTtcbiAgICB9XG4gICAgaWYgKCFyZXNwb25zZUluaXQuaGVhZGVycy5oYXMoXCJDb250ZW50LUxlbmd0aFwiKSkge1xuICAgICAgcmVzcG9uc2VJbml0LmhlYWRlcnMuc2V0KFxuICAgICAgICBcIkNvbnRlbnQtTGVuZ3RoXCIsXG4gICAgICAgIGJvZHkgPyBuZXcgQmxvYihbYm9keV0pLnNpemUudG9TdHJpbmcoKSA6IFwiMFwiXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IEh0dHBSZXNwb25zZShib2R5LCByZXNwb25zZUluaXQpO1xuICB9XG4gIC8qKlxuICAgKiBDcmVhdGUgYSBgUmVzcG9uc2VgIHdpdGggYSBgQ29udGVudC1UeXBlOiBcImFwcGxpY2F0aW9uL2pzb25cImAgYm9keS5cbiAgICogQGV4YW1wbGVcbiAgICogSHR0cFJlc3BvbnNlLmpzb24oeyBmaXJzdE5hbWU6ICdKb2huJyB9KVxuICAgKiBIdHRwUmVzcG9uc2UuanNvbih7IGVycm9yOiAnTm90IEF1dGhvcml6ZWQnIH0sIHsgc3RhdHVzOiA0MDEgfSlcbiAgICovXG4gIHN0YXRpYyBqc29uKGJvZHksIGluaXQpIHtcbiAgICBjb25zdCByZXNwb25zZUluaXQgPSBub3JtYWxpemVSZXNwb25zZUluaXQoaW5pdCk7XG4gICAgaWYgKCFyZXNwb25zZUluaXQuaGVhZGVycy5oYXMoXCJDb250ZW50LVR5cGVcIikpIHtcbiAgICAgIHJlc3BvbnNlSW5pdC5oZWFkZXJzLnNldChcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIik7XG4gICAgfVxuICAgIGNvbnN0IHJlc3BvbnNlVGV4dCA9IEpTT04uc3RyaW5naWZ5KGJvZHkpO1xuICAgIGlmICghcmVzcG9uc2VJbml0LmhlYWRlcnMuaGFzKFwiQ29udGVudC1MZW5ndGhcIikpIHtcbiAgICAgIHJlc3BvbnNlSW5pdC5oZWFkZXJzLnNldChcbiAgICAgICAgXCJDb250ZW50LUxlbmd0aFwiLFxuICAgICAgICByZXNwb25zZVRleHQgPyBuZXcgQmxvYihbcmVzcG9uc2VUZXh0XSkuc2l6ZS50b1N0cmluZygpIDogXCIwXCJcbiAgICAgICk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgSHR0cFJlc3BvbnNlKFxuICAgICAgcmVzcG9uc2VUZXh0LFxuICAgICAgcmVzcG9uc2VJbml0XG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlIGEgYFJlc3BvbnNlYCB3aXRoIGEgYENvbnRlbnQtVHlwZTogXCJhcHBsaWNhdGlvbi94bWxcImAgYm9keS5cbiAgICogQGV4YW1wbGVcbiAgICogSHR0cFJlc3BvbnNlLnhtbChgPHVzZXIgbmFtZT1cIkpvaG5cIiAvPmApXG4gICAqIEh0dHBSZXNwb25zZS54bWwoYDxhcnRpY2xlIGlkPVwiYWJjLTEyM1wiIC8+YCwgeyBzdGF0dXM6IDIwMSB9KVxuICAgKi9cbiAgc3RhdGljIHhtbChib2R5LCBpbml0KSB7XG4gICAgY29uc3QgcmVzcG9uc2VJbml0ID0gbm9ybWFsaXplUmVzcG9uc2VJbml0KGluaXQpO1xuICAgIGlmICghcmVzcG9uc2VJbml0LmhlYWRlcnMuaGFzKFwiQ29udGVudC1UeXBlXCIpKSB7XG4gICAgICByZXNwb25zZUluaXQuaGVhZGVycy5zZXQoXCJDb250ZW50LVR5cGVcIiwgXCJ0ZXh0L3htbFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBIdHRwUmVzcG9uc2UoYm9keSwgcmVzcG9uc2VJbml0KTtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlIGEgYFJlc3BvbnNlYCB3aXRoIGFuIGBBcnJheUJ1ZmZlcmAgYm9keS5cbiAgICogQGV4YW1wbGVcbiAgICogY29uc3QgYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKDMpXG4gICAqIGNvbnN0IHZpZXcgPSBuZXcgVWludDhBcnJheShidWZmZXIpXG4gICAqIHZpZXcuc2V0KFsxLCAyLCAzXSlcbiAgICpcbiAgICogSHR0cFJlc3BvbnNlLmFycmF5QnVmZmVyKGJ1ZmZlcilcbiAgICovXG4gIHN0YXRpYyBhcnJheUJ1ZmZlcihib2R5LCBpbml0KSB7XG4gICAgY29uc3QgcmVzcG9uc2VJbml0ID0gbm9ybWFsaXplUmVzcG9uc2VJbml0KGluaXQpO1xuICAgIGlmIChib2R5KSB7XG4gICAgICByZXNwb25zZUluaXQuaGVhZGVycy5zZXQoXCJDb250ZW50LUxlbmd0aFwiLCBib2R5LmJ5dGVMZW5ndGgudG9TdHJpbmcoKSk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgSHR0cFJlc3BvbnNlKGJvZHksIHJlc3BvbnNlSW5pdCk7XG4gIH1cbiAgLyoqXG4gICAqIENyZWF0ZSBhIGBSZXNwb25zZWAgd2l0aCBhIGBGb3JtRGF0YWAgYm9keS5cbiAgICogQGV4YW1wbGVcbiAgICogY29uc3QgZGF0YSA9IG5ldyBGb3JtRGF0YSgpXG4gICAqIGRhdGEuc2V0KCduYW1lJywgJ0FsaWNlJylcbiAgICpcbiAgICogSHR0cFJlc3BvbnNlLmZvcm1EYXRhKGRhdGEpXG4gICAqL1xuICBzdGF0aWMgZm9ybURhdGEoYm9keSwgaW5pdCkge1xuICAgIHJldHVybiBuZXcgSHR0cFJlc3BvbnNlKGJvZHksIG5vcm1hbGl6ZVJlc3BvbnNlSW5pdChpbml0KSk7XG4gIH1cbn1cbmV4cG9ydCB7XG4gIEh0dHBSZXNwb25zZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUh0dHBSZXNwb25zZS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/HttpResponse.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/SetupApi.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/SetupApi.mjs ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HandlersController: function() { return /* binding */ HandlersController; },\n/* harmony export */   InMemoryHandlersController: function() { return /* binding */ InMemoryHandlersController; },\n/* harmony export */   SetupApi: function() { return /* binding */ SetupApi; }\n/* harmony export */ });\n/* harmony import */ var outvariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! outvariant */ \"(app-pages-browser)/./node_modules/.pnpm/outvariant@1.4.2/node_modules/outvariant/lib/index.mjs\");\n/* harmony import */ var strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! strict-event-emitter */ \"(app-pages-browser)/./node_modules/.pnpm/strict-event-emitter@0.5.1/node_modules/strict-event-emitter/lib/index.mjs\");\n/* harmony import */ var _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/internal/devUtils.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/devUtils.mjs\");\n/* harmony import */ var _utils_internal_pipeEvents_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/internal/pipeEvents.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/pipeEvents.mjs\");\n/* harmony import */ var _utils_internal_toReadonlyArray_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/internal/toReadonlyArray.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/toReadonlyArray.mjs\");\n/* harmony import */ var _utils_internal_Disposable_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/internal/Disposable.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/Disposable.mjs\");\n\n\n\n\n\n\nclass HandlersController {\n}\nclass InMemoryHandlersController {\n  constructor(initialHandlers) {\n    this.initialHandlers = initialHandlers;\n    this.handlers = [...initialHandlers];\n  }\n  handlers;\n  prepend(runtimeHandles) {\n    this.handlers.unshift(...runtimeHandles);\n  }\n  reset(nextHandlers) {\n    this.handlers = nextHandlers.length > 0 ? [...nextHandlers] : [...this.initialHandlers];\n  }\n  currentHandlers() {\n    return this.handlers;\n  }\n}\nclass SetupApi extends _utils_internal_Disposable_mjs__WEBPACK_IMPORTED_MODULE_2__.Disposable {\n  handlersController;\n  emitter;\n  publicEmitter;\n  events;\n  constructor(...initialHandlers) {\n    super();\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(\n      this.validateHandlers(initialHandlers),\n      _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.devUtils.formatMessage(\n        `Failed to apply given request handlers: invalid input. Did you forget to spread the request handlers Array?`\n      )\n    );\n    this.handlersController = new InMemoryHandlersController(initialHandlers);\n    this.emitter = new strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__.Emitter();\n    this.publicEmitter = new strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__.Emitter();\n    (0,_utils_internal_pipeEvents_mjs__WEBPACK_IMPORTED_MODULE_4__.pipeEvents)(this.emitter, this.publicEmitter);\n    this.events = this.createLifeCycleEvents();\n    this.subscriptions.push(() => {\n      this.emitter.removeAllListeners();\n      this.publicEmitter.removeAllListeners();\n    });\n  }\n  validateHandlers(handlers) {\n    return handlers.every((handler) => !Array.isArray(handler));\n  }\n  use(...runtimeHandlers) {\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(\n      this.validateHandlers(runtimeHandlers),\n      _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.devUtils.formatMessage(\n        `Failed to call \"use()\" with the given request handlers: invalid input. Did you forget to spread the array of request handlers?`\n      )\n    );\n    this.handlersController.prepend(runtimeHandlers);\n  }\n  restoreHandlers() {\n    this.handlersController.currentHandlers().forEach((handler) => {\n      handler.isUsed = false;\n    });\n  }\n  resetHandlers(...nextHandlers) {\n    this.handlersController.reset(nextHandlers);\n  }\n  listHandlers() {\n    return (0,_utils_internal_toReadonlyArray_mjs__WEBPACK_IMPORTED_MODULE_5__.toReadonlyArray)(this.handlersController.currentHandlers());\n  }\n  createLifeCycleEvents() {\n    return {\n      on: (...args) => {\n        return this.publicEmitter.on(...args);\n      },\n      removeListener: (...args) => {\n        return this.publicEmitter.removeListener(...args);\n      },\n      removeAllListeners: (...args) => {\n        return this.publicEmitter.removeAllListeners(...args);\n      }\n    };\n  }\n}\n\n//# sourceMappingURL=SetupApi.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL1NldHVwQXBpLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBdUM7QUFDUTtBQUNVO0FBQ0k7QUFDVTtBQUNWO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzRUFBVTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHFEQUFTO0FBQ2I7QUFDQSxNQUFNLGtFQUFRO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIseURBQU87QUFDOUIsNkJBQTZCLHlEQUFPO0FBQ3BDLElBQUksMEVBQVU7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxxREFBUztBQUNiO0FBQ0EsTUFBTSxrRUFBUTtBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0ZBQWU7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL21zd0AyLjMuMV90eXBlc2NyaXB0QDUuNS4yL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvU2V0dXBBcGkubWpzPzUxMzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW52YXJpYW50IH0gZnJvbSBcIm91dHZhcmlhbnRcIjtcbmltcG9ydCB7IEVtaXR0ZXIgfSBmcm9tIFwic3RyaWN0LWV2ZW50LWVtaXR0ZXJcIjtcbmltcG9ydCB7IGRldlV0aWxzIH0gZnJvbSAnLi91dGlscy9pbnRlcm5hbC9kZXZVdGlscy5tanMnO1xuaW1wb3J0IHsgcGlwZUV2ZW50cyB9IGZyb20gJy4vdXRpbHMvaW50ZXJuYWwvcGlwZUV2ZW50cy5tanMnO1xuaW1wb3J0IHsgdG9SZWFkb25seUFycmF5IH0gZnJvbSAnLi91dGlscy9pbnRlcm5hbC90b1JlYWRvbmx5QXJyYXkubWpzJztcbmltcG9ydCB7IERpc3Bvc2FibGUgfSBmcm9tICcuL3V0aWxzL2ludGVybmFsL0Rpc3Bvc2FibGUubWpzJztcbmNsYXNzIEhhbmRsZXJzQ29udHJvbGxlciB7XG59XG5jbGFzcyBJbk1lbW9yeUhhbmRsZXJzQ29udHJvbGxlciB7XG4gIGNvbnN0cnVjdG9yKGluaXRpYWxIYW5kbGVycykge1xuICAgIHRoaXMuaW5pdGlhbEhhbmRsZXJzID0gaW5pdGlhbEhhbmRsZXJzO1xuICAgIHRoaXMuaGFuZGxlcnMgPSBbLi4uaW5pdGlhbEhhbmRsZXJzXTtcbiAgfVxuICBoYW5kbGVycztcbiAgcHJlcGVuZChydW50aW1lSGFuZGxlcykge1xuICAgIHRoaXMuaGFuZGxlcnMudW5zaGlmdCguLi5ydW50aW1lSGFuZGxlcyk7XG4gIH1cbiAgcmVzZXQobmV4dEhhbmRsZXJzKSB7XG4gICAgdGhpcy5oYW5kbGVycyA9IG5leHRIYW5kbGVycy5sZW5ndGggPiAwID8gWy4uLm5leHRIYW5kbGVyc10gOiBbLi4udGhpcy5pbml0aWFsSGFuZGxlcnNdO1xuICB9XG4gIGN1cnJlbnRIYW5kbGVycygpIHtcbiAgICByZXR1cm4gdGhpcy5oYW5kbGVycztcbiAgfVxufVxuY2xhc3MgU2V0dXBBcGkgZXh0ZW5kcyBEaXNwb3NhYmxlIHtcbiAgaGFuZGxlcnNDb250cm9sbGVyO1xuICBlbWl0dGVyO1xuICBwdWJsaWNFbWl0dGVyO1xuICBldmVudHM7XG4gIGNvbnN0cnVjdG9yKC4uLmluaXRpYWxIYW5kbGVycykge1xuICAgIHN1cGVyKCk7XG4gICAgaW52YXJpYW50KFxuICAgICAgdGhpcy52YWxpZGF0ZUhhbmRsZXJzKGluaXRpYWxIYW5kbGVycyksXG4gICAgICBkZXZVdGlscy5mb3JtYXRNZXNzYWdlKFxuICAgICAgICBgRmFpbGVkIHRvIGFwcGx5IGdpdmVuIHJlcXVlc3QgaGFuZGxlcnM6IGludmFsaWQgaW5wdXQuIERpZCB5b3UgZm9yZ2V0IHRvIHNwcmVhZCB0aGUgcmVxdWVzdCBoYW5kbGVycyBBcnJheT9gXG4gICAgICApXG4gICAgKTtcbiAgICB0aGlzLmhhbmRsZXJzQ29udHJvbGxlciA9IG5ldyBJbk1lbW9yeUhhbmRsZXJzQ29udHJvbGxlcihpbml0aWFsSGFuZGxlcnMpO1xuICAgIHRoaXMuZW1pdHRlciA9IG5ldyBFbWl0dGVyKCk7XG4gICAgdGhpcy5wdWJsaWNFbWl0dGVyID0gbmV3IEVtaXR0ZXIoKTtcbiAgICBwaXBlRXZlbnRzKHRoaXMuZW1pdHRlciwgdGhpcy5wdWJsaWNFbWl0dGVyKTtcbiAgICB0aGlzLmV2ZW50cyA9IHRoaXMuY3JlYXRlTGlmZUN5Y2xlRXZlbnRzKCk7XG4gICAgdGhpcy5zdWJzY3JpcHRpb25zLnB1c2goKCkgPT4ge1xuICAgICAgdGhpcy5lbWl0dGVyLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICAgICAgdGhpcy5wdWJsaWNFbWl0dGVyLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICAgIH0pO1xuICB9XG4gIHZhbGlkYXRlSGFuZGxlcnMoaGFuZGxlcnMpIHtcbiAgICByZXR1cm4gaGFuZGxlcnMuZXZlcnkoKGhhbmRsZXIpID0+ICFBcnJheS5pc0FycmF5KGhhbmRsZXIpKTtcbiAgfVxuICB1c2UoLi4ucnVudGltZUhhbmRsZXJzKSB7XG4gICAgaW52YXJpYW50KFxuICAgICAgdGhpcy52YWxpZGF0ZUhhbmRsZXJzKHJ1bnRpbWVIYW5kbGVycyksXG4gICAgICBkZXZVdGlscy5mb3JtYXRNZXNzYWdlKFxuICAgICAgICBgRmFpbGVkIHRvIGNhbGwgXCJ1c2UoKVwiIHdpdGggdGhlIGdpdmVuIHJlcXVlc3QgaGFuZGxlcnM6IGludmFsaWQgaW5wdXQuIERpZCB5b3UgZm9yZ2V0IHRvIHNwcmVhZCB0aGUgYXJyYXkgb2YgcmVxdWVzdCBoYW5kbGVycz9gXG4gICAgICApXG4gICAgKTtcbiAgICB0aGlzLmhhbmRsZXJzQ29udHJvbGxlci5wcmVwZW5kKHJ1bnRpbWVIYW5kbGVycyk7XG4gIH1cbiAgcmVzdG9yZUhhbmRsZXJzKCkge1xuICAgIHRoaXMuaGFuZGxlcnNDb250cm9sbGVyLmN1cnJlbnRIYW5kbGVycygpLmZvckVhY2goKGhhbmRsZXIpID0+IHtcbiAgICAgIGhhbmRsZXIuaXNVc2VkID0gZmFsc2U7XG4gICAgfSk7XG4gIH1cbiAgcmVzZXRIYW5kbGVycyguLi5uZXh0SGFuZGxlcnMpIHtcbiAgICB0aGlzLmhhbmRsZXJzQ29udHJvbGxlci5yZXNldChuZXh0SGFuZGxlcnMpO1xuICB9XG4gIGxpc3RIYW5kbGVycygpIHtcbiAgICByZXR1cm4gdG9SZWFkb25seUFycmF5KHRoaXMuaGFuZGxlcnNDb250cm9sbGVyLmN1cnJlbnRIYW5kbGVycygpKTtcbiAgfVxuICBjcmVhdGVMaWZlQ3ljbGVFdmVudHMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG9uOiAoLi4uYXJncykgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNFbWl0dGVyLm9uKC4uLmFyZ3MpO1xuICAgICAgfSxcbiAgICAgIHJlbW92ZUxpc3RlbmVyOiAoLi4uYXJncykgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNFbWl0dGVyLnJlbW92ZUxpc3RlbmVyKC4uLmFyZ3MpO1xuICAgICAgfSxcbiAgICAgIHJlbW92ZUFsbExpc3RlbmVyczogKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHVibGljRW1pdHRlci5yZW1vdmVBbGxMaXN0ZW5lcnMoLi4uYXJncyk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgSGFuZGxlcnNDb250cm9sbGVyLFxuICBJbk1lbW9yeUhhbmRsZXJzQ29udHJvbGxlcixcbiAgU2V0dXBBcGlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TZXR1cEFwaS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/SetupApi.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/handlers/HttpHandler.mjs":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/handlers/HttpHandler.mjs ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpHandler: function() { return /* binding */ HttpHandler; },\n/* harmony export */   HttpMethods: function() { return /* binding */ HttpMethods; }\n/* harmony export */ });\n/* harmony import */ var _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/internal/devUtils.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/devUtils.mjs\");\n/* harmony import */ var _utils_internal_isStringEqual_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/internal/isStringEqual.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/isStringEqual.mjs\");\n/* harmony import */ var _utils_logging_getStatusCodeColor_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/logging/getStatusCodeColor.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/logging/getStatusCodeColor.mjs\");\n/* harmony import */ var _utils_logging_getTimestamp_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/logging/getTimestamp.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/logging/getTimestamp.mjs\");\n/* harmony import */ var _utils_logging_serializeRequest_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/logging/serializeRequest.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/logging/serializeRequest.mjs\");\n/* harmony import */ var _utils_logging_serializeResponse_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/logging/serializeResponse.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/logging/serializeResponse.mjs\");\n/* harmony import */ var _utils_matching_matchRequestUrl_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/matching/matchRequestUrl.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/matching/matchRequestUrl.mjs\");\n/* harmony import */ var _utils_request_toPublicUrl_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/request/toPublicUrl.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/request/toPublicUrl.mjs\");\n/* harmony import */ var _utils_request_getRequestCookies_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/request/getRequestCookies.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/request/getRequestCookies.mjs\");\n/* harmony import */ var _utils_url_cleanUrl_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/url/cleanUrl.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/url/cleanUrl.mjs\");\n/* harmony import */ var _RequestHandler_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RequestHandler.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/handlers/RequestHandler.mjs\");\n\n\n\n\n\n\n\n\n\n\n\nvar HttpMethods = /* @__PURE__ */ ((HttpMethods2) => {\n  HttpMethods2[\"HEAD\"] = \"HEAD\";\n  HttpMethods2[\"GET\"] = \"GET\";\n  HttpMethods2[\"POST\"] = \"POST\";\n  HttpMethods2[\"PUT\"] = \"PUT\";\n  HttpMethods2[\"PATCH\"] = \"PATCH\";\n  HttpMethods2[\"OPTIONS\"] = \"OPTIONS\";\n  HttpMethods2[\"DELETE\"] = \"DELETE\";\n  return HttpMethods2;\n})(HttpMethods || {});\nclass HttpHandler extends _RequestHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.RequestHandler {\n  constructor(method, path, resolver, options) {\n    super({\n      info: {\n        header: `${method} ${path}`,\n        path,\n        method\n      },\n      resolver,\n      options\n    });\n    this.checkRedundantQueryParameters();\n  }\n  checkRedundantQueryParameters() {\n    const { method, path } = this.info;\n    if (path instanceof RegExp) {\n      return;\n    }\n    const url = (0,_utils_url_cleanUrl_mjs__WEBPACK_IMPORTED_MODULE_1__.cleanUrl)(path);\n    if (url === path) {\n      return;\n    }\n    const searchParams = (0,_utils_url_cleanUrl_mjs__WEBPACK_IMPORTED_MODULE_1__.getSearchParams)(path);\n    const queryParams = [];\n    searchParams.forEach((_, paramName) => {\n      queryParams.push(paramName);\n    });\n    _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.devUtils.warn(\n      `Found a redundant usage of query parameters in the request handler URL for \"${method} ${path}\". Please match against a path instead and access query parameters using \"new URL(request.url).searchParams\" instead. Learn more: https://mswjs.io/docs/recipes/query-parameters`\n    );\n  }\n  async parse(args) {\n    const url = new URL(args.request.url);\n    const match = (0,_utils_matching_matchRequestUrl_mjs__WEBPACK_IMPORTED_MODULE_3__.matchRequestUrl)(\n      url,\n      this.info.path,\n      args.resolutionContext?.baseUrl\n    );\n    const cookies = (0,_utils_request_getRequestCookies_mjs__WEBPACK_IMPORTED_MODULE_4__.getAllRequestCookies)(args.request);\n    return {\n      match,\n      cookies\n    };\n  }\n  predicate(args) {\n    const hasMatchingMethod = this.matchMethod(args.request.method);\n    const hasMatchingUrl = args.parsedResult.match.matches;\n    return hasMatchingMethod && hasMatchingUrl;\n  }\n  matchMethod(actualMethod) {\n    return this.info.method instanceof RegExp ? this.info.method.test(actualMethod) : (0,_utils_internal_isStringEqual_mjs__WEBPACK_IMPORTED_MODULE_5__.isStringEqual)(this.info.method, actualMethod);\n  }\n  extendResolverArgs(args) {\n    return {\n      params: args.parsedResult.match?.params || {},\n      cookies: args.parsedResult.cookies\n    };\n  }\n  async log(args) {\n    const publicUrl = (0,_utils_request_toPublicUrl_mjs__WEBPACK_IMPORTED_MODULE_6__.toPublicUrl)(args.request.url);\n    const loggedRequest = await (0,_utils_logging_serializeRequest_mjs__WEBPACK_IMPORTED_MODULE_7__.serializeRequest)(args.request);\n    const loggedResponse = await (0,_utils_logging_serializeResponse_mjs__WEBPACK_IMPORTED_MODULE_8__.serializeResponse)(args.response);\n    const statusColor = (0,_utils_logging_getStatusCodeColor_mjs__WEBPACK_IMPORTED_MODULE_9__.getStatusCodeColor)(loggedResponse.status);\n    console.groupCollapsed(\n      _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.devUtils.formatMessage(\n        `${(0,_utils_logging_getTimestamp_mjs__WEBPACK_IMPORTED_MODULE_10__.getTimestamp)()} ${args.request.method} ${publicUrl} (%c${loggedResponse.status} ${loggedResponse.statusText}%c)`\n      ),\n      `color:${statusColor}`,\n      \"color:inherit\"\n    );\n    console.log(\"Request\", loggedRequest);\n    console.log(\"Handler:\", this);\n    console.log(\"Response\", loggedResponse);\n    console.groupEnd();\n  }\n}\n\n//# sourceMappingURL=HttpHandler.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL2hhbmRsZXJzL0h0dHBIYW5kbGVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQTBEO0FBQ1U7QUFDUztBQUNaO0FBQ1E7QUFDRTtBQUc1QjtBQUNnQjtBQUNlO0FBQ1I7QUFHeEM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxtQkFBbUI7QUFDcEIsMEJBQTBCLCtEQUFjO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixRQUFRLEVBQUUsS0FBSztBQUNsQztBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsWUFBWSxlQUFlO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixpRUFBUTtBQUN4QjtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsd0VBQWU7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUksa0VBQVE7QUFDWixxRkFBcUYsUUFBUSxFQUFFLEtBQUs7QUFDcEc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isb0ZBQWU7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsMEZBQW9CO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzRkFBc0YsZ0ZBQWE7QUFDbkc7QUFDQTtBQUNBO0FBQ0EsbURBQW1EO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDJFQUFXO0FBQ2pDLGdDQUFnQyxxRkFBZ0I7QUFDaEQsaUNBQWlDLHVGQUFpQjtBQUNsRCx3QkFBd0IseUZBQWtCO0FBQzFDO0FBQ0EsTUFBTSxrRUFBUTtBQUNkLFdBQVcsOEVBQVksSUFBSSxFQUFFLHFCQUFxQixFQUFFLFdBQVcsS0FBSyx1QkFBdUIsRUFBRSwwQkFBMEI7QUFDdkg7QUFDQSxlQUFlLFlBQVk7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL21zd0AyLjMuMV90eXBlc2NyaXB0QDUuNS4yL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvaGFuZGxlcnMvSHR0cEhhbmRsZXIubWpzPzI2MzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGV2VXRpbHMgfSBmcm9tICcuLi91dGlscy9pbnRlcm5hbC9kZXZVdGlscy5tanMnO1xuaW1wb3J0IHsgaXNTdHJpbmdFcXVhbCB9IGZyb20gJy4uL3V0aWxzL2ludGVybmFsL2lzU3RyaW5nRXF1YWwubWpzJztcbmltcG9ydCB7IGdldFN0YXR1c0NvZGVDb2xvciB9IGZyb20gJy4uL3V0aWxzL2xvZ2dpbmcvZ2V0U3RhdHVzQ29kZUNvbG9yLm1qcyc7XG5pbXBvcnQgeyBnZXRUaW1lc3RhbXAgfSBmcm9tICcuLi91dGlscy9sb2dnaW5nL2dldFRpbWVzdGFtcC5tanMnO1xuaW1wb3J0IHsgc2VyaWFsaXplUmVxdWVzdCB9IGZyb20gJy4uL3V0aWxzL2xvZ2dpbmcvc2VyaWFsaXplUmVxdWVzdC5tanMnO1xuaW1wb3J0IHsgc2VyaWFsaXplUmVzcG9uc2UgfSBmcm9tICcuLi91dGlscy9sb2dnaW5nL3NlcmlhbGl6ZVJlc3BvbnNlLm1qcyc7XG5pbXBvcnQge1xuICBtYXRjaFJlcXVlc3RVcmxcbn0gZnJvbSAnLi4vdXRpbHMvbWF0Y2hpbmcvbWF0Y2hSZXF1ZXN0VXJsLm1qcyc7XG5pbXBvcnQgeyB0b1B1YmxpY1VybCB9IGZyb20gJy4uL3V0aWxzL3JlcXVlc3QvdG9QdWJsaWNVcmwubWpzJztcbmltcG9ydCB7IGdldEFsbFJlcXVlc3RDb29raWVzIH0gZnJvbSAnLi4vdXRpbHMvcmVxdWVzdC9nZXRSZXF1ZXN0Q29va2llcy5tanMnO1xuaW1wb3J0IHsgY2xlYW5VcmwsIGdldFNlYXJjaFBhcmFtcyB9IGZyb20gJy4uL3V0aWxzL3VybC9jbGVhblVybC5tanMnO1xuaW1wb3J0IHtcbiAgUmVxdWVzdEhhbmRsZXJcbn0gZnJvbSAnLi9SZXF1ZXN0SGFuZGxlci5tanMnO1xudmFyIEh0dHBNZXRob2RzID0gLyogQF9fUFVSRV9fICovICgoSHR0cE1ldGhvZHMyKSA9PiB7XG4gIEh0dHBNZXRob2RzMltcIkhFQURcIl0gPSBcIkhFQURcIjtcbiAgSHR0cE1ldGhvZHMyW1wiR0VUXCJdID0gXCJHRVRcIjtcbiAgSHR0cE1ldGhvZHMyW1wiUE9TVFwiXSA9IFwiUE9TVFwiO1xuICBIdHRwTWV0aG9kczJbXCJQVVRcIl0gPSBcIlBVVFwiO1xuICBIdHRwTWV0aG9kczJbXCJQQVRDSFwiXSA9IFwiUEFUQ0hcIjtcbiAgSHR0cE1ldGhvZHMyW1wiT1BUSU9OU1wiXSA9IFwiT1BUSU9OU1wiO1xuICBIdHRwTWV0aG9kczJbXCJERUxFVEVcIl0gPSBcIkRFTEVURVwiO1xuICByZXR1cm4gSHR0cE1ldGhvZHMyO1xufSkoSHR0cE1ldGhvZHMgfHwge30pO1xuY2xhc3MgSHR0cEhhbmRsZXIgZXh0ZW5kcyBSZXF1ZXN0SGFuZGxlciB7XG4gIGNvbnN0cnVjdG9yKG1ldGhvZCwgcGF0aCwgcmVzb2x2ZXIsIG9wdGlvbnMpIHtcbiAgICBzdXBlcih7XG4gICAgICBpbmZvOiB7XG4gICAgICAgIGhlYWRlcjogYCR7bWV0aG9kfSAke3BhdGh9YCxcbiAgICAgICAgcGF0aCxcbiAgICAgICAgbWV0aG9kXG4gICAgICB9LFxuICAgICAgcmVzb2x2ZXIsXG4gICAgICBvcHRpb25zXG4gICAgfSk7XG4gICAgdGhpcy5jaGVja1JlZHVuZGFudFF1ZXJ5UGFyYW1ldGVycygpO1xuICB9XG4gIGNoZWNrUmVkdW5kYW50UXVlcnlQYXJhbWV0ZXJzKCkge1xuICAgIGNvbnN0IHsgbWV0aG9kLCBwYXRoIH0gPSB0aGlzLmluZm87XG4gICAgaWYgKHBhdGggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgdXJsID0gY2xlYW5VcmwocGF0aCk7XG4gICAgaWYgKHVybCA9PT0gcGF0aCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBzZWFyY2hQYXJhbXMgPSBnZXRTZWFyY2hQYXJhbXMocGF0aCk7XG4gICAgY29uc3QgcXVlcnlQYXJhbXMgPSBbXTtcbiAgICBzZWFyY2hQYXJhbXMuZm9yRWFjaCgoXywgcGFyYW1OYW1lKSA9PiB7XG4gICAgICBxdWVyeVBhcmFtcy5wdXNoKHBhcmFtTmFtZSk7XG4gICAgfSk7XG4gICAgZGV2VXRpbHMud2FybihcbiAgICAgIGBGb3VuZCBhIHJlZHVuZGFudCB1c2FnZSBvZiBxdWVyeSBwYXJhbWV0ZXJzIGluIHRoZSByZXF1ZXN0IGhhbmRsZXIgVVJMIGZvciBcIiR7bWV0aG9kfSAke3BhdGh9XCIuIFBsZWFzZSBtYXRjaCBhZ2FpbnN0IGEgcGF0aCBpbnN0ZWFkIGFuZCBhY2Nlc3MgcXVlcnkgcGFyYW1ldGVycyB1c2luZyBcIm5ldyBVUkwocmVxdWVzdC51cmwpLnNlYXJjaFBhcmFtc1wiIGluc3RlYWQuIExlYXJuIG1vcmU6IGh0dHBzOi8vbXN3anMuaW8vZG9jcy9yZWNpcGVzL3F1ZXJ5LXBhcmFtZXRlcnNgXG4gICAgKTtcbiAgfVxuICBhc3luYyBwYXJzZShhcmdzKSB7XG4gICAgY29uc3QgdXJsID0gbmV3IFVSTChhcmdzLnJlcXVlc3QudXJsKTtcbiAgICBjb25zdCBtYXRjaCA9IG1hdGNoUmVxdWVzdFVybChcbiAgICAgIHVybCxcbiAgICAgIHRoaXMuaW5mby5wYXRoLFxuICAgICAgYXJncy5yZXNvbHV0aW9uQ29udGV4dD8uYmFzZVVybFxuICAgICk7XG4gICAgY29uc3QgY29va2llcyA9IGdldEFsbFJlcXVlc3RDb29raWVzKGFyZ3MucmVxdWVzdCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIG1hdGNoLFxuICAgICAgY29va2llc1xuICAgIH07XG4gIH1cbiAgcHJlZGljYXRlKGFyZ3MpIHtcbiAgICBjb25zdCBoYXNNYXRjaGluZ01ldGhvZCA9IHRoaXMubWF0Y2hNZXRob2QoYXJncy5yZXF1ZXN0Lm1ldGhvZCk7XG4gICAgY29uc3QgaGFzTWF0Y2hpbmdVcmwgPSBhcmdzLnBhcnNlZFJlc3VsdC5tYXRjaC5tYXRjaGVzO1xuICAgIHJldHVybiBoYXNNYXRjaGluZ01ldGhvZCAmJiBoYXNNYXRjaGluZ1VybDtcbiAgfVxuICBtYXRjaE1ldGhvZChhY3R1YWxNZXRob2QpIHtcbiAgICByZXR1cm4gdGhpcy5pbmZvLm1ldGhvZCBpbnN0YW5jZW9mIFJlZ0V4cCA/IHRoaXMuaW5mby5tZXRob2QudGVzdChhY3R1YWxNZXRob2QpIDogaXNTdHJpbmdFcXVhbCh0aGlzLmluZm8ubWV0aG9kLCBhY3R1YWxNZXRob2QpO1xuICB9XG4gIGV4dGVuZFJlc29sdmVyQXJncyhhcmdzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhcmFtczogYXJncy5wYXJzZWRSZXN1bHQubWF0Y2g/LnBhcmFtcyB8fCB7fSxcbiAgICAgIGNvb2tpZXM6IGFyZ3MucGFyc2VkUmVzdWx0LmNvb2tpZXNcbiAgICB9O1xuICB9XG4gIGFzeW5jIGxvZyhhcmdzKSB7XG4gICAgY29uc3QgcHVibGljVXJsID0gdG9QdWJsaWNVcmwoYXJncy5yZXF1ZXN0LnVybCk7XG4gICAgY29uc3QgbG9nZ2VkUmVxdWVzdCA9IGF3YWl0IHNlcmlhbGl6ZVJlcXVlc3QoYXJncy5yZXF1ZXN0KTtcbiAgICBjb25zdCBsb2dnZWRSZXNwb25zZSA9IGF3YWl0IHNlcmlhbGl6ZVJlc3BvbnNlKGFyZ3MucmVzcG9uc2UpO1xuICAgIGNvbnN0IHN0YXR1c0NvbG9yID0gZ2V0U3RhdHVzQ29kZUNvbG9yKGxvZ2dlZFJlc3BvbnNlLnN0YXR1cyk7XG4gICAgY29uc29sZS5ncm91cENvbGxhcHNlZChcbiAgICAgIGRldlV0aWxzLmZvcm1hdE1lc3NhZ2UoXG4gICAgICAgIGAke2dldFRpbWVzdGFtcCgpfSAke2FyZ3MucmVxdWVzdC5tZXRob2R9ICR7cHVibGljVXJsfSAoJWMke2xvZ2dlZFJlc3BvbnNlLnN0YXR1c30gJHtsb2dnZWRSZXNwb25zZS5zdGF0dXNUZXh0fSVjKWBcbiAgICAgICksXG4gICAgICBgY29sb3I6JHtzdGF0dXNDb2xvcn1gLFxuICAgICAgXCJjb2xvcjppbmhlcml0XCJcbiAgICApO1xuICAgIGNvbnNvbGUubG9nKFwiUmVxdWVzdFwiLCBsb2dnZWRSZXF1ZXN0KTtcbiAgICBjb25zb2xlLmxvZyhcIkhhbmRsZXI6XCIsIHRoaXMpO1xuICAgIGNvbnNvbGUubG9nKFwiUmVzcG9uc2VcIiwgbG9nZ2VkUmVzcG9uc2UpO1xuICAgIGNvbnNvbGUuZ3JvdXBFbmQoKTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgSHR0cEhhbmRsZXIsXG4gIEh0dHBNZXRob2RzXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SHR0cEhhbmRsZXIubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/handlers/HttpHandler.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/handlers/RequestHandler.mjs":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/handlers/RequestHandler.mjs ***!
  \*************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestHandler: function() { return /* binding */ RequestHandler; }\n/* harmony export */ });\n/* harmony import */ var outvariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! outvariant */ \"(app-pages-browser)/./node_modules/.pnpm/outvariant@1.4.2/node_modules/outvariant/lib/index.mjs\");\n/* harmony import */ var _utils_internal_getCallFrame_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/internal/getCallFrame.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/getCallFrame.mjs\");\n/* harmony import */ var _utils_internal_isIterable_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/internal/isIterable.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/isIterable.mjs\");\n\n\n\nclass RequestHandler {\n  static cache = /* @__PURE__ */ new WeakMap();\n  info;\n  /**\n   * Indicates whether this request handler has been used\n   * (its resolver has successfully executed).\n   */\n  isUsed;\n  resolver;\n  resolverGenerator;\n  resolverGeneratorResult;\n  options;\n  constructor(args) {\n    this.resolver = args.resolver;\n    this.options = args.options;\n    const callFrame = (0,_utils_internal_getCallFrame_mjs__WEBPACK_IMPORTED_MODULE_1__.getCallFrame)(new Error());\n    this.info = {\n      ...args.info,\n      callFrame\n    };\n    this.isUsed = false;\n  }\n  /**\n   * Parse the intercepted request to extract additional information from it.\n   * Parsed result is then exposed to other methods of this request handler.\n   */\n  async parse(_args) {\n    return {};\n  }\n  /**\n   * Test if this handler matches the given request.\n   *\n   * This method is not used internally but is exposed\n   * as a convenience method for consumers writing custom\n   * handlers.\n   */\n  async test(args) {\n    const parsedResult = await this.parse({\n      request: args.request,\n      resolutionContext: args.resolutionContext\n    });\n    return this.predicate({\n      request: args.request,\n      parsedResult,\n      resolutionContext: args.resolutionContext\n    });\n  }\n  extendResolverArgs(_args) {\n    return {};\n  }\n  // Clone the request instance before it's passed to the handler phases\n  // and the response resolver so we can always read it for logging.\n  // We only clone it once per request to avoid unnecessary overhead.\n  cloneRequestOrGetFromCache(request) {\n    const existingClone = RequestHandler.cache.get(request);\n    if (typeof existingClone !== \"undefined\") {\n      return existingClone;\n    }\n    const clonedRequest = request.clone();\n    RequestHandler.cache.set(request, clonedRequest);\n    return clonedRequest;\n  }\n  /**\n   * Execute this request handler and produce a mocked response\n   * using the given resolver function.\n   */\n  async run(args) {\n    if (this.isUsed && this.options?.once) {\n      return null;\n    }\n    const requestClone = this.cloneRequestOrGetFromCache(args.request);\n    const parsedResult = await this.parse({\n      request: args.request,\n      resolutionContext: args.resolutionContext\n    });\n    const shouldInterceptRequest = this.predicate({\n      request: args.request,\n      parsedResult,\n      resolutionContext: args.resolutionContext\n    });\n    if (!shouldInterceptRequest) {\n      return null;\n    }\n    if (this.isUsed && this.options?.once) {\n      return null;\n    }\n    this.isUsed = true;\n    const executeResolver = this.wrapResolver(this.resolver);\n    const resolverExtras = this.extendResolverArgs({\n      request: args.request,\n      parsedResult\n    });\n    const mockedResponsePromise = executeResolver({\n      ...resolverExtras,\n      requestId: args.requestId,\n      request: args.request\n    }).catch((errorOrResponse) => {\n      if (errorOrResponse instanceof Response) {\n        return errorOrResponse;\n      }\n      throw errorOrResponse;\n    });\n    const mockedResponse = await mockedResponsePromise;\n    const executionResult = this.createExecutionResult({\n      // Pass the cloned request to the result so that logging\n      // and other consumers could read its body once more.\n      request: requestClone,\n      requestId: args.requestId,\n      response: mockedResponse,\n      parsedResult\n    });\n    return executionResult;\n  }\n  wrapResolver(resolver) {\n    return async (info) => {\n      const result = this.resolverGenerator || await resolver(info);\n      if ((0,_utils_internal_isIterable_mjs__WEBPACK_IMPORTED_MODULE_2__.isIterable)(result)) {\n        this.isUsed = false;\n        const { value, done } = result[Symbol.iterator]().next();\n        const nextResponse = await value;\n        if (done) {\n          this.isUsed = true;\n        }\n        if (!nextResponse && done) {\n          (0,outvariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(\n            this.resolverGeneratorResult,\n            \"Failed to returned a previously stored generator response: the value is not a valid Response.\"\n          );\n          return this.resolverGeneratorResult.clone();\n        }\n        if (!this.resolverGenerator) {\n          this.resolverGenerator = result;\n        }\n        if (nextResponse) {\n          this.resolverGeneratorResult = nextResponse?.clone();\n        }\n        return nextResponse;\n      }\n      return result;\n    };\n  }\n  createExecutionResult(args) {\n    return {\n      handler: this,\n      request: args.request,\n      requestId: args.requestId,\n      response: args.response,\n      parsedResult: args.parsedResult\n    };\n  }\n}\n\n//# sourceMappingURL=RequestHandler.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/handlers/RequestHandler.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/http.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/http.mjs ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   http: function() { return /* binding */ http; }\n/* harmony export */ });\n/* harmony import */ var _handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handlers/HttpHandler.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/handlers/HttpHandler.mjs\");\n\nfunction createHttpHandler(method) {\n  return (path, resolver, options = {}) => {\n    return new _handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpHandler(method, path, resolver, options);\n  };\n}\nconst http = {\n  all: createHttpHandler(/.+/),\n  head: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.HEAD),\n  get: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.GET),\n  post: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.POST),\n  put: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.PUT),\n  delete: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.DELETE),\n  patch: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.PATCH),\n  options: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.OPTIONS)\n};\n\n//# sourceMappingURL=http.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL2h0dHAubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBR29DO0FBQ3BDO0FBQ0Esc0NBQXNDO0FBQ3RDLGVBQWUsa0VBQVc7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsa0VBQVc7QUFDckMseUJBQXlCLGtFQUFXO0FBQ3BDLDBCQUEwQixrRUFBVztBQUNyQyx5QkFBeUIsa0VBQVc7QUFDcEMsNEJBQTRCLGtFQUFXO0FBQ3ZDLDJCQUEyQixrRUFBVztBQUN0Qyw2QkFBNkIsa0VBQVc7QUFDeEM7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL2h0dHAubWpzPzU0NjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgSHR0cE1ldGhvZHMsXG4gIEh0dHBIYW5kbGVyXG59IGZyb20gJy4vaGFuZGxlcnMvSHR0cEhhbmRsZXIubWpzJztcbmZ1bmN0aW9uIGNyZWF0ZUh0dHBIYW5kbGVyKG1ldGhvZCkge1xuICByZXR1cm4gKHBhdGgsIHJlc29sdmVyLCBvcHRpb25zID0ge30pID0+IHtcbiAgICByZXR1cm4gbmV3IEh0dHBIYW5kbGVyKG1ldGhvZCwgcGF0aCwgcmVzb2x2ZXIsIG9wdGlvbnMpO1xuICB9O1xufVxuY29uc3QgaHR0cCA9IHtcbiAgYWxsOiBjcmVhdGVIdHRwSGFuZGxlcigvLisvKSxcbiAgaGVhZDogY3JlYXRlSHR0cEhhbmRsZXIoSHR0cE1ldGhvZHMuSEVBRCksXG4gIGdldDogY3JlYXRlSHR0cEhhbmRsZXIoSHR0cE1ldGhvZHMuR0VUKSxcbiAgcG9zdDogY3JlYXRlSHR0cEhhbmRsZXIoSHR0cE1ldGhvZHMuUE9TVCksXG4gIHB1dDogY3JlYXRlSHR0cEhhbmRsZXIoSHR0cE1ldGhvZHMuUFVUKSxcbiAgZGVsZXRlOiBjcmVhdGVIdHRwSGFuZGxlcihIdHRwTWV0aG9kcy5ERUxFVEUpLFxuICBwYXRjaDogY3JlYXRlSHR0cEhhbmRsZXIoSHR0cE1ldGhvZHMuUEFUQ0gpLFxuICBvcHRpb25zOiBjcmVhdGVIdHRwSGFuZGxlcihIdHRwTWV0aG9kcy5PUFRJT05TKVxufTtcbmV4cG9ydCB7XG4gIGh0dHBcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1odHRwLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/http.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/HttpResponse/decorators.mjs":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/HttpResponse/decorators.mjs ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decorateResponse: function() { return /* binding */ decorateResponse; },\n/* harmony export */   normalizeResponseInit: function() { return /* binding */ normalizeResponseInit; }\n/* harmony export */ });\n/* harmony import */ var _bundled_es_modules_statuses__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bundled-es-modules/statuses */ \"(app-pages-browser)/./node_modules/.pnpm/@bundled-es-modules+statuses@1.0.1/node_modules/@bundled-es-modules/statuses/index-esm.js\");\n/* harmony import */ var headers_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! headers-polyfill */ \"(app-pages-browser)/./node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/lib/index.mjs\");\n\n\nconst { message } = _bundled_es_modules_statuses__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\nfunction normalizeResponseInit(init = {}) {\n  const status = init?.status || 200;\n  const statusText = init?.statusText || message[status] || \"\";\n  const headers = new Headers(init?.headers);\n  return {\n    ...init,\n    headers,\n    status,\n    statusText\n  };\n}\nfunction decorateResponse(response, init) {\n  if (init.type) {\n    Object.defineProperty(response, \"type\", {\n      value: init.type,\n      enumerable: true,\n      writable: false\n    });\n  }\n  if (typeof document !== \"undefined\") {\n    const responseCookies = headers_polyfill__WEBPACK_IMPORTED_MODULE_1__.Headers.prototype.getSetCookie.call(\n      init.headers\n    );\n    for (const cookieString of responseCookies) {\n      document.cookie = cookieString;\n    }\n  }\n  return response;\n}\n\n//# sourceMappingURL=decorators.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL0h0dHBSZXNwb25zZS9kZWNvcmF0b3JzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9EO0FBQ1U7QUFDOUQsUUFBUSxVQUFVLEVBQUUsb0VBQVE7QUFDNUIsd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSw0QkFBNEIscURBQWU7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL21zd0AyLjMuMV90eXBlc2NyaXB0QDUuNS4yL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvSHR0cFJlc3BvbnNlL2RlY29yYXRvcnMubWpzPzg1YTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0YXR1c2VzIGZyb20gXCJAYnVuZGxlZC1lcy1tb2R1bGVzL3N0YXR1c2VzXCI7XG5pbXBvcnQgeyBIZWFkZXJzIGFzIEhlYWRlcnNQb2x5ZmlsbCB9IGZyb20gXCJoZWFkZXJzLXBvbHlmaWxsXCI7XG5jb25zdCB7IG1lc3NhZ2UgfSA9IHN0YXR1c2VzO1xuZnVuY3Rpb24gbm9ybWFsaXplUmVzcG9uc2VJbml0KGluaXQgPSB7fSkge1xuICBjb25zdCBzdGF0dXMgPSBpbml0Py5zdGF0dXMgfHwgMjAwO1xuICBjb25zdCBzdGF0dXNUZXh0ID0gaW5pdD8uc3RhdHVzVGV4dCB8fCBtZXNzYWdlW3N0YXR1c10gfHwgXCJcIjtcbiAgY29uc3QgaGVhZGVycyA9IG5ldyBIZWFkZXJzKGluaXQ/LmhlYWRlcnMpO1xuICByZXR1cm4ge1xuICAgIC4uLmluaXQsXG4gICAgaGVhZGVycyxcbiAgICBzdGF0dXMsXG4gICAgc3RhdHVzVGV4dFxuICB9O1xufVxuZnVuY3Rpb24gZGVjb3JhdGVSZXNwb25zZShyZXNwb25zZSwgaW5pdCkge1xuICBpZiAoaW5pdC50eXBlKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlc3BvbnNlLCBcInR5cGVcIiwge1xuICAgICAgdmFsdWU6IGluaXQudHlwZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogZmFsc2VcbiAgICB9KTtcbiAgfVxuICBpZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY29uc3QgcmVzcG9uc2VDb29raWVzID0gSGVhZGVyc1BvbHlmaWxsLnByb3RvdHlwZS5nZXRTZXRDb29raWUuY2FsbChcbiAgICAgIGluaXQuaGVhZGVyc1xuICAgICk7XG4gICAgZm9yIChjb25zdCBjb29raWVTdHJpbmcgb2YgcmVzcG9uc2VDb29raWVzKSB7XG4gICAgICBkb2N1bWVudC5jb29raWUgPSBjb29raWVTdHJpbmc7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXNwb25zZTtcbn1cbmV4cG9ydCB7XG4gIGRlY29yYXRlUmVzcG9uc2UsXG4gIG5vcm1hbGl6ZVJlc3BvbnNlSW5pdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlY29yYXRvcnMubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/HttpResponse/decorators.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/executeHandlers.mjs":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/executeHandlers.mjs ***!
  \***********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   executeHandlers: function() { return /* binding */ executeHandlers; }\n/* harmony export */ });\nconst executeHandlers = async ({\n  request,\n  requestId,\n  handlers,\n  resolutionContext\n}) => {\n  let matchingHandler = null;\n  let result = null;\n  for (const handler of handlers) {\n    result = await handler.run({ request, requestId, resolutionContext });\n    if (result !== null) {\n      matchingHandler = handler;\n    }\n    if (result?.response) {\n      break;\n    }\n  }\n  if (matchingHandler) {\n    return {\n      handler: matchingHandler,\n      parsedResult: result?.parsedResult,\n      response: result?.response\n    };\n  }\n  return null;\n};\n\n//# sourceMappingURL=executeHandlers.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2V4ZWN1dGVIYW5kbGVycy5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLHVDQUF1QztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL21zd0AyLjMuMV90eXBlc2NyaXB0QDUuNS4yL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvZXhlY3V0ZUhhbmRsZXJzLm1qcz9iYzIxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4ZWN1dGVIYW5kbGVycyA9IGFzeW5jICh7XG4gIHJlcXVlc3QsXG4gIHJlcXVlc3RJZCxcbiAgaGFuZGxlcnMsXG4gIHJlc29sdXRpb25Db250ZXh0XG59KSA9PiB7XG4gIGxldCBtYXRjaGluZ0hhbmRsZXIgPSBudWxsO1xuICBsZXQgcmVzdWx0ID0gbnVsbDtcbiAgZm9yIChjb25zdCBoYW5kbGVyIG9mIGhhbmRsZXJzKSB7XG4gICAgcmVzdWx0ID0gYXdhaXQgaGFuZGxlci5ydW4oeyByZXF1ZXN0LCByZXF1ZXN0SWQsIHJlc29sdXRpb25Db250ZXh0IH0pO1xuICAgIGlmIChyZXN1bHQgIT09IG51bGwpIHtcbiAgICAgIG1hdGNoaW5nSGFuZGxlciA9IGhhbmRsZXI7XG4gICAgfVxuICAgIGlmIChyZXN1bHQ/LnJlc3BvbnNlKSB7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgaWYgKG1hdGNoaW5nSGFuZGxlcikge1xuICAgIHJldHVybiB7XG4gICAgICBoYW5kbGVyOiBtYXRjaGluZ0hhbmRsZXIsXG4gICAgICBwYXJzZWRSZXN1bHQ6IHJlc3VsdD8ucGFyc2VkUmVzdWx0LFxuICAgICAgcmVzcG9uc2U6IHJlc3VsdD8ucmVzcG9uc2VcbiAgICB9O1xuICB9XG4gIHJldHVybiBudWxsO1xufTtcbmV4cG9ydCB7XG4gIGV4ZWN1dGVIYW5kbGVyc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4ZWN1dGVIYW5kbGVycy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/executeHandlers.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/handleRequest.mjs":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/handleRequest.mjs ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleRequest: function() { return /* binding */ handleRequest; }\n/* harmony export */ });\n/* harmony import */ var _open_draft_until__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @open-draft/until */ \"(app-pages-browser)/./node_modules/.pnpm/@open-draft+until@2.1.0/node_modules/@open-draft/until/lib/index.mjs\");\n/* harmony import */ var _executeHandlers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./executeHandlers.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/executeHandlers.mjs\");\n/* harmony import */ var _request_onUnhandledRequest_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./request/onUnhandledRequest.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/request/onUnhandledRequest.mjs\");\n/* harmony import */ var _request_readResponseCookies_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./request/readResponseCookies.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/request/readResponseCookies.mjs\");\n\n\n\n\nasync function handleRequest(request, requestId, handlers, options, emitter, handleRequestOptions) {\n  emitter.emit(\"request:start\", { request, requestId });\n  if (request.headers.get(\"x-msw-intention\") === \"bypass\") {\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  const lookupResult = await (0,_open_draft_until__WEBPACK_IMPORTED_MODULE_0__.until)(() => {\n    return (0,_executeHandlers_mjs__WEBPACK_IMPORTED_MODULE_1__.executeHandlers)({\n      request,\n      requestId,\n      handlers,\n      resolutionContext: handleRequestOptions?.resolutionContext\n    });\n  });\n  if (lookupResult.error) {\n    emitter.emit(\"unhandledException\", {\n      error: lookupResult.error,\n      request,\n      requestId\n    });\n    throw lookupResult.error;\n  }\n  if (!lookupResult.data) {\n    await (0,_request_onUnhandledRequest_mjs__WEBPACK_IMPORTED_MODULE_2__.onUnhandledRequest)(request, options.onUnhandledRequest);\n    emitter.emit(\"request:unhandled\", { request, requestId });\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  const { response } = lookupResult.data;\n  if (!response) {\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  if (response.status === 302 && response.headers.get(\"x-msw-intention\") === \"passthrough\") {\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  (0,_request_readResponseCookies_mjs__WEBPACK_IMPORTED_MODULE_3__.readResponseCookies)(request, response);\n  emitter.emit(\"request:match\", { request, requestId });\n  const requiredLookupResult = lookupResult.data;\n  const transformedResponse = handleRequestOptions?.transformResponse?.(response) || response;\n  handleRequestOptions?.onMockedResponse?.(\n    transformedResponse,\n    requiredLookupResult\n  );\n  emitter.emit(\"request:end\", { request, requestId });\n  return transformedResponse;\n}\n\n//# sourceMappingURL=handleRequest.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2hhbmRsZVJlcXVlc3QubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTBDO0FBQ2M7QUFDYztBQUNFO0FBQ3hFO0FBQ0Esa0NBQWtDLG9CQUFvQjtBQUN0RDtBQUNBLGtDQUFrQyxvQkFBb0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHdEQUFLO0FBQ2xDLFdBQVcscUVBQWU7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsVUFBVSxtRkFBa0I7QUFDNUIsd0NBQXdDLG9CQUFvQjtBQUM1RCxrQ0FBa0Msb0JBQW9CO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLFVBQVUsV0FBVztBQUNyQjtBQUNBLGtDQUFrQyxvQkFBb0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msb0JBQW9CO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLEVBQUUscUZBQW1CO0FBQ3JCLGtDQUFrQyxvQkFBb0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLG9CQUFvQjtBQUNwRDtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvLnBucG0vbXN3QDIuMy4xX3R5cGVzY3JpcHRANS41LjIvbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS91dGlscy9oYW5kbGVSZXF1ZXN0Lm1qcz9kNjA0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVudGlsIH0gZnJvbSBcIkBvcGVuLWRyYWZ0L3VudGlsXCI7XG5pbXBvcnQgeyBleGVjdXRlSGFuZGxlcnMgfSBmcm9tICcuL2V4ZWN1dGVIYW5kbGVycy5tanMnO1xuaW1wb3J0IHsgb25VbmhhbmRsZWRSZXF1ZXN0IH0gZnJvbSAnLi9yZXF1ZXN0L29uVW5oYW5kbGVkUmVxdWVzdC5tanMnO1xuaW1wb3J0IHsgcmVhZFJlc3BvbnNlQ29va2llcyB9IGZyb20gJy4vcmVxdWVzdC9yZWFkUmVzcG9uc2VDb29raWVzLm1qcyc7XG5hc3luYyBmdW5jdGlvbiBoYW5kbGVSZXF1ZXN0KHJlcXVlc3QsIHJlcXVlc3RJZCwgaGFuZGxlcnMsIG9wdGlvbnMsIGVtaXR0ZXIsIGhhbmRsZVJlcXVlc3RPcHRpb25zKSB7XG4gIGVtaXR0ZXIuZW1pdChcInJlcXVlc3Q6c3RhcnRcIiwgeyByZXF1ZXN0LCByZXF1ZXN0SWQgfSk7XG4gIGlmIChyZXF1ZXN0LmhlYWRlcnMuZ2V0KFwieC1tc3ctaW50ZW50aW9uXCIpID09PSBcImJ5cGFzc1wiKSB7XG4gICAgZW1pdHRlci5lbWl0KFwicmVxdWVzdDplbmRcIiwgeyByZXF1ZXN0LCByZXF1ZXN0SWQgfSk7XG4gICAgaGFuZGxlUmVxdWVzdE9wdGlvbnM/Lm9uUGFzc3Rocm91Z2hSZXNwb25zZT8uKHJlcXVlc3QpO1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBsb29rdXBSZXN1bHQgPSBhd2FpdCB1bnRpbCgoKSA9PiB7XG4gICAgcmV0dXJuIGV4ZWN1dGVIYW5kbGVycyh7XG4gICAgICByZXF1ZXN0LFxuICAgICAgcmVxdWVzdElkLFxuICAgICAgaGFuZGxlcnMsXG4gICAgICByZXNvbHV0aW9uQ29udGV4dDogaGFuZGxlUmVxdWVzdE9wdGlvbnM/LnJlc29sdXRpb25Db250ZXh0XG4gICAgfSk7XG4gIH0pO1xuICBpZiAobG9va3VwUmVzdWx0LmVycm9yKSB7XG4gICAgZW1pdHRlci5lbWl0KFwidW5oYW5kbGVkRXhjZXB0aW9uXCIsIHtcbiAgICAgIGVycm9yOiBsb29rdXBSZXN1bHQuZXJyb3IsXG4gICAgICByZXF1ZXN0LFxuICAgICAgcmVxdWVzdElkXG4gICAgfSk7XG4gICAgdGhyb3cgbG9va3VwUmVzdWx0LmVycm9yO1xuICB9XG4gIGlmICghbG9va3VwUmVzdWx0LmRhdGEpIHtcbiAgICBhd2FpdCBvblVuaGFuZGxlZFJlcXVlc3QocmVxdWVzdCwgb3B0aW9ucy5vblVuaGFuZGxlZFJlcXVlc3QpO1xuICAgIGVtaXR0ZXIuZW1pdChcInJlcXVlc3Q6dW5oYW5kbGVkXCIsIHsgcmVxdWVzdCwgcmVxdWVzdElkIH0pO1xuICAgIGVtaXR0ZXIuZW1pdChcInJlcXVlc3Q6ZW5kXCIsIHsgcmVxdWVzdCwgcmVxdWVzdElkIH0pO1xuICAgIGhhbmRsZVJlcXVlc3RPcHRpb25zPy5vblBhc3N0aHJvdWdoUmVzcG9uc2U/LihyZXF1ZXN0KTtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgeyByZXNwb25zZSB9ID0gbG9va3VwUmVzdWx0LmRhdGE7XG4gIGlmICghcmVzcG9uc2UpIHtcbiAgICBlbWl0dGVyLmVtaXQoXCJyZXF1ZXN0OmVuZFwiLCB7IHJlcXVlc3QsIHJlcXVlc3RJZCB9KTtcbiAgICBoYW5kbGVSZXF1ZXN0T3B0aW9ucz8ub25QYXNzdGhyb3VnaFJlc3BvbnNlPy4ocmVxdWVzdCk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDMwMiAmJiByZXNwb25zZS5oZWFkZXJzLmdldChcIngtbXN3LWludGVudGlvblwiKSA9PT0gXCJwYXNzdGhyb3VnaFwiKSB7XG4gICAgZW1pdHRlci5lbWl0KFwicmVxdWVzdDplbmRcIiwgeyByZXF1ZXN0LCByZXF1ZXN0SWQgfSk7XG4gICAgaGFuZGxlUmVxdWVzdE9wdGlvbnM/Lm9uUGFzc3Rocm91Z2hSZXNwb25zZT8uKHJlcXVlc3QpO1xuICAgIHJldHVybjtcbiAgfVxuICByZWFkUmVzcG9uc2VDb29raWVzKHJlcXVlc3QsIHJlc3BvbnNlKTtcbiAgZW1pdHRlci5lbWl0KFwicmVxdWVzdDptYXRjaFwiLCB7IHJlcXVlc3QsIHJlcXVlc3RJZCB9KTtcbiAgY29uc3QgcmVxdWlyZWRMb29rdXBSZXN1bHQgPSBsb29rdXBSZXN1bHQuZGF0YTtcbiAgY29uc3QgdHJhbnNmb3JtZWRSZXNwb25zZSA9IGhhbmRsZVJlcXVlc3RPcHRpb25zPy50cmFuc2Zvcm1SZXNwb25zZT8uKHJlc3BvbnNlKSB8fCByZXNwb25zZTtcbiAgaGFuZGxlUmVxdWVzdE9wdGlvbnM/Lm9uTW9ja2VkUmVzcG9uc2U/LihcbiAgICB0cmFuc2Zvcm1lZFJlc3BvbnNlLFxuICAgIHJlcXVpcmVkTG9va3VwUmVzdWx0XG4gICk7XG4gIGVtaXR0ZXIuZW1pdChcInJlcXVlc3Q6ZW5kXCIsIHsgcmVxdWVzdCwgcmVxdWVzdElkIH0pO1xuICByZXR1cm4gdHJhbnNmb3JtZWRSZXNwb25zZTtcbn1cbmV4cG9ydCB7XG4gIGhhbmRsZVJlcXVlc3Rcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYW5kbGVSZXF1ZXN0Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/handleRequest.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/Disposable.mjs":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/Disposable.mjs ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Disposable: function() { return /* binding */ Disposable; }\n/* harmony export */ });\nclass Disposable {\n  subscriptions = [];\n  dispose() {\n    let subscription;\n    while (subscription = this.subscriptions.shift()) {\n      subscription();\n    }\n  }\n}\n\n//# sourceMappingURL=Disposable.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2ludGVybmFsL0Rpc3Bvc2FibGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2ludGVybmFsL0Rpc3Bvc2FibGUubWpzPzc2ZjUiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgRGlzcG9zYWJsZSB7XG4gIHN1YnNjcmlwdGlvbnMgPSBbXTtcbiAgZGlzcG9zZSgpIHtcbiAgICBsZXQgc3Vic2NyaXB0aW9uO1xuICAgIHdoaWxlIChzdWJzY3JpcHRpb24gPSB0aGlzLnN1YnNjcmlwdGlvbnMuc2hpZnQoKSkge1xuICAgICAgc3Vic2NyaXB0aW9uKCk7XG4gICAgfVxuICB9XG59XG5leHBvcnQge1xuICBEaXNwb3NhYmxlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RGlzcG9zYWJsZS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/Disposable.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/devUtils.mjs":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/devUtils.mjs ***!
  \*************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InternalError: function() { return /* binding */ InternalError; },\n/* harmony export */   devUtils: function() { return /* binding */ devUtils; }\n/* harmony export */ });\n/* harmony import */ var outvariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! outvariant */ \"(app-pages-browser)/./node_modules/.pnpm/outvariant@1.4.2/node_modules/outvariant/lib/index.mjs\");\n\nconst LIBRARY_PREFIX = \"[MSW]\";\nfunction formatMessage(message, ...positionals) {\n  const interpolatedMessage = (0,outvariant__WEBPACK_IMPORTED_MODULE_0__.format)(message, ...positionals);\n  return `${LIBRARY_PREFIX} ${interpolatedMessage}`;\n}\nfunction warn(message, ...positionals) {\n  console.warn(formatMessage(message, ...positionals));\n}\nfunction error(message, ...positionals) {\n  console.error(formatMessage(message, ...positionals));\n}\nconst devUtils = {\n  formatMessage,\n  warn,\n  error\n};\nclass InternalError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"InternalError\";\n  }\n}\n\n//# sourceMappingURL=devUtils.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2ludGVybmFsL2RldlV0aWxzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBb0M7QUFDcEM7QUFDQTtBQUNBLDhCQUE4QixrREFBTTtBQUNwQyxZQUFZLGdCQUFnQixFQUFFLG9CQUFvQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2ludGVybmFsL2RldlV0aWxzLm1qcz8wZDNkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZvcm1hdCB9IGZyb20gXCJvdXR2YXJpYW50XCI7XG5jb25zdCBMSUJSQVJZX1BSRUZJWCA9IFwiW01TV11cIjtcbmZ1bmN0aW9uIGZvcm1hdE1lc3NhZ2UobWVzc2FnZSwgLi4ucG9zaXRpb25hbHMpIHtcbiAgY29uc3QgaW50ZXJwb2xhdGVkTWVzc2FnZSA9IGZvcm1hdChtZXNzYWdlLCAuLi5wb3NpdGlvbmFscyk7XG4gIHJldHVybiBgJHtMSUJSQVJZX1BSRUZJWH0gJHtpbnRlcnBvbGF0ZWRNZXNzYWdlfWA7XG59XG5mdW5jdGlvbiB3YXJuKG1lc3NhZ2UsIC4uLnBvc2l0aW9uYWxzKSB7XG4gIGNvbnNvbGUud2Fybihmb3JtYXRNZXNzYWdlKG1lc3NhZ2UsIC4uLnBvc2l0aW9uYWxzKSk7XG59XG5mdW5jdGlvbiBlcnJvcihtZXNzYWdlLCAuLi5wb3NpdGlvbmFscykge1xuICBjb25zb2xlLmVycm9yKGZvcm1hdE1lc3NhZ2UobWVzc2FnZSwgLi4ucG9zaXRpb25hbHMpKTtcbn1cbmNvbnN0IGRldlV0aWxzID0ge1xuICBmb3JtYXRNZXNzYWdlLFxuICB3YXJuLFxuICBlcnJvclxufTtcbmNsYXNzIEludGVybmFsRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLm5hbWUgPSBcIkludGVybmFsRXJyb3JcIjtcbiAgfVxufVxuZXhwb3J0IHtcbiAgSW50ZXJuYWxFcnJvcixcbiAgZGV2VXRpbHNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZXZVdGlscy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/devUtils.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/getCallFrame.mjs":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/getCallFrame.mjs ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCallFrame: function() { return /* binding */ getCallFrame; }\n/* harmony export */ });\nconst SOURCE_FRAME = /[\\/\\\\]msw[\\/\\\\]src[\\/\\\\](.+)/;\nconst BUILD_FRAME = /(node_modules)?[\\/\\\\]lib[\\/\\\\](core|browser|node|native|iife)[\\/\\\\]|^[^\\/\\\\]*$/;\nfunction getCallFrame(error) {\n  const stack = error.stack;\n  if (!stack) {\n    return;\n  }\n  const frames = stack.split(\"\\n\").slice(1);\n  const declarationFrame = frames.find((frame) => {\n    return !(SOURCE_FRAME.test(frame) || BUILD_FRAME.test(frame));\n  });\n  if (!declarationFrame) {\n    return;\n  }\n  const declarationPath = declarationFrame.replace(/\\s*at [^()]*\\(([^)]+)\\)/, \"$1\").replace(/^@/, \"\");\n  return declarationPath;\n}\n\n//# sourceMappingURL=getCallFrame.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2ludGVybmFsL2dldENhbGxGcmFtZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL21zd0AyLjMuMV90eXBlc2NyaXB0QDUuNS4yL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvaW50ZXJuYWwvZ2V0Q2FsbEZyYW1lLm1qcz81N2E0Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNPVVJDRV9GUkFNRSA9IC9bXFwvXFxcXF1tc3dbXFwvXFxcXF1zcmNbXFwvXFxcXF0oLispLztcbmNvbnN0IEJVSUxEX0ZSQU1FID0gLyhub2RlX21vZHVsZXMpP1tcXC9cXFxcXWxpYltcXC9cXFxcXShjb3JlfGJyb3dzZXJ8bm9kZXxuYXRpdmV8aWlmZSlbXFwvXFxcXF18XlteXFwvXFxcXF0qJC87XG5mdW5jdGlvbiBnZXRDYWxsRnJhbWUoZXJyb3IpIHtcbiAgY29uc3Qgc3RhY2sgPSBlcnJvci5zdGFjaztcbiAgaWYgKCFzdGFjaykge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBmcmFtZXMgPSBzdGFjay5zcGxpdChcIlxcblwiKS5zbGljZSgxKTtcbiAgY29uc3QgZGVjbGFyYXRpb25GcmFtZSA9IGZyYW1lcy5maW5kKChmcmFtZSkgPT4ge1xuICAgIHJldHVybiAhKFNPVVJDRV9GUkFNRS50ZXN0KGZyYW1lKSB8fCBCVUlMRF9GUkFNRS50ZXN0KGZyYW1lKSk7XG4gIH0pO1xuICBpZiAoIWRlY2xhcmF0aW9uRnJhbWUpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgZGVjbGFyYXRpb25QYXRoID0gZGVjbGFyYXRpb25GcmFtZS5yZXBsYWNlKC9cXHMqYXQgW14oKV0qXFwoKFteKV0rKVxcKS8sIFwiJDFcIikucmVwbGFjZSgvXkAvLCBcIlwiKTtcbiAgcmV0dXJuIGRlY2xhcmF0aW9uUGF0aDtcbn1cbmV4cG9ydCB7XG4gIGdldENhbGxGcmFtZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldENhbGxGcmFtZS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/getCallFrame.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/isIterable.mjs":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/isIterable.mjs ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isIterable: function() { return /* binding */ isIterable; }\n/* harmony export */ });\nfunction isIterable(fn) {\n  if (!fn) {\n    return false;\n  }\n  return typeof fn[Symbol.iterator] == \"function\";\n}\n\n//# sourceMappingURL=isIterable.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2ludGVybmFsL2lzSXRlcmFibGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2ludGVybmFsL2lzSXRlcmFibGUubWpzP2NmMWIiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gaXNJdGVyYWJsZShmbikge1xuICBpZiAoIWZuKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0eXBlb2YgZm5bU3ltYm9sLml0ZXJhdG9yXSA9PSBcImZ1bmN0aW9uXCI7XG59XG5leHBvcnQge1xuICBpc0l0ZXJhYmxlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNJdGVyYWJsZS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/isIterable.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/isObject.mjs":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/isObject.mjs ***!
  \*************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isObject: function() { return /* binding */ isObject; }\n/* harmony export */ });\nfunction isObject(value) {\n  return value != null && typeof value === \"object\" && !Array.isArray(value);\n}\n\n//# sourceMappingURL=isObject.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2ludGVybmFsL2lzT2JqZWN0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvLnBucG0vbXN3QDIuMy4xX3R5cGVzY3JpcHRANS41LjIvbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS91dGlscy9pbnRlcm5hbC9pc09iamVjdC5tanM/MDAyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpO1xufVxuZXhwb3J0IHtcbiAgaXNPYmplY3Rcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc09iamVjdC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/isObject.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/isStringEqual.mjs":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/isStringEqual.mjs ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isStringEqual: function() { return /* binding */ isStringEqual; }\n/* harmony export */ });\nfunction isStringEqual(actual, expected) {\n  return actual.toLowerCase() === expected.toLowerCase();\n}\n\n//# sourceMappingURL=isStringEqual.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2ludGVybmFsL2lzU3RyaW5nRXF1YWwubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2ludGVybmFsL2lzU3RyaW5nRXF1YWwubWpzPzJhYjciXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gaXNTdHJpbmdFcXVhbChhY3R1YWwsIGV4cGVjdGVkKSB7XG4gIHJldHVybiBhY3R1YWwudG9Mb3dlckNhc2UoKSA9PT0gZXhwZWN0ZWQudG9Mb3dlckNhc2UoKTtcbn1cbmV4cG9ydCB7XG4gIGlzU3RyaW5nRXF1YWxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc1N0cmluZ0VxdWFsLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/isStringEqual.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/mergeRight.mjs":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/mergeRight.mjs ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeRight: function() { return /* binding */ mergeRight; }\n/* harmony export */ });\n/* harmony import */ var _isObject_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isObject.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/isObject.mjs\");\n\nfunction mergeRight(left, right) {\n  return Object.entries(right).reduce(\n    (result, [key, rightValue]) => {\n      const leftValue = result[key];\n      if (Array.isArray(leftValue) && Array.isArray(rightValue)) {\n        result[key] = leftValue.concat(rightValue);\n        return result;\n      }\n      if ((0,_isObject_mjs__WEBPACK_IMPORTED_MODULE_0__.isObject)(leftValue) && (0,_isObject_mjs__WEBPACK_IMPORTED_MODULE_0__.isObject)(rightValue)) {\n        result[key] = mergeRight(leftValue, rightValue);\n        return result;\n      }\n      result[key] = rightValue;\n      return result;\n    },\n    Object.assign({}, left)\n  );\n}\n\n//# sourceMappingURL=mergeRight.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2ludGVybmFsL21lcmdlUmlnaHQubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLHVEQUFRLGVBQWUsdURBQVE7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxvQkFBb0I7QUFDcEI7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL21zd0AyLjMuMV90eXBlc2NyaXB0QDUuNS4yL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvaW50ZXJuYWwvbWVyZ2VSaWdodC5tanM/MGEyYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc09iamVjdCB9IGZyb20gJy4vaXNPYmplY3QubWpzJztcbmZ1bmN0aW9uIG1lcmdlUmlnaHQobGVmdCwgcmlnaHQpIHtcbiAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKHJpZ2h0KS5yZWR1Y2UoXG4gICAgKHJlc3VsdCwgW2tleSwgcmlnaHRWYWx1ZV0pID0+IHtcbiAgICAgIGNvbnN0IGxlZnRWYWx1ZSA9IHJlc3VsdFtrZXldO1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkobGVmdFZhbHVlKSAmJiBBcnJheS5pc0FycmF5KHJpZ2h0VmFsdWUpKSB7XG4gICAgICAgIHJlc3VsdFtrZXldID0gbGVmdFZhbHVlLmNvbmNhdChyaWdodFZhbHVlKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIGlmIChpc09iamVjdChsZWZ0VmFsdWUpICYmIGlzT2JqZWN0KHJpZ2h0VmFsdWUpKSB7XG4gICAgICAgIHJlc3VsdFtrZXldID0gbWVyZ2VSaWdodChsZWZ0VmFsdWUsIHJpZ2h0VmFsdWUpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuICAgICAgcmVzdWx0W2tleV0gPSByaWdodFZhbHVlO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LFxuICAgIE9iamVjdC5hc3NpZ24oe30sIGxlZnQpXG4gICk7XG59XG5leHBvcnQge1xuICBtZXJnZVJpZ2h0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWVyZ2VSaWdodC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/mergeRight.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/pipeEvents.mjs":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/pipeEvents.mjs ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pipeEvents: function() { return /* binding */ pipeEvents; }\n/* harmony export */ });\nfunction pipeEvents(source, destination) {\n  const rawEmit = source.emit;\n  if (rawEmit._isPiped) {\n    return;\n  }\n  const sourceEmit = function sourceEmit2(event, ...data) {\n    destination.emit(event, ...data);\n    return rawEmit.call(this, event, ...data);\n  };\n  sourceEmit._isPiped = true;\n  source.emit = sourceEmit;\n}\n\n//# sourceMappingURL=pipeEvents.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2ludGVybmFsL3BpcGVFdmVudHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2ludGVybmFsL3BpcGVFdmVudHMubWpzPzQwNDIiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gcGlwZUV2ZW50cyhzb3VyY2UsIGRlc3RpbmF0aW9uKSB7XG4gIGNvbnN0IHJhd0VtaXQgPSBzb3VyY2UuZW1pdDtcbiAgaWYgKHJhd0VtaXQuX2lzUGlwZWQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3Qgc291cmNlRW1pdCA9IGZ1bmN0aW9uIHNvdXJjZUVtaXQyKGV2ZW50LCAuLi5kYXRhKSB7XG4gICAgZGVzdGluYXRpb24uZW1pdChldmVudCwgLi4uZGF0YSk7XG4gICAgcmV0dXJuIHJhd0VtaXQuY2FsbCh0aGlzLCBldmVudCwgLi4uZGF0YSk7XG4gIH07XG4gIHNvdXJjZUVtaXQuX2lzUGlwZWQgPSB0cnVlO1xuICBzb3VyY2UuZW1pdCA9IHNvdXJjZUVtaXQ7XG59XG5leHBvcnQge1xuICBwaXBlRXZlbnRzXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGlwZUV2ZW50cy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/pipeEvents.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/toReadonlyArray.mjs":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/toReadonlyArray.mjs ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toReadonlyArray: function() { return /* binding */ toReadonlyArray; }\n/* harmony export */ });\nfunction toReadonlyArray(source) {\n  const clone = [...source];\n  Object.freeze(clone);\n  return clone;\n}\n\n//# sourceMappingURL=toReadonlyArray.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2ludGVybmFsL3RvUmVhZG9ubHlBcnJheS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2ludGVybmFsL3RvUmVhZG9ubHlBcnJheS5tanM/YmFkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiB0b1JlYWRvbmx5QXJyYXkoc291cmNlKSB7XG4gIGNvbnN0IGNsb25lID0gWy4uLnNvdXJjZV07XG4gIE9iamVjdC5mcmVlemUoY2xvbmUpO1xuICByZXR1cm4gY2xvbmU7XG59XG5leHBvcnQge1xuICB0b1JlYWRvbmx5QXJyYXlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10b1JlYWRvbmx5QXJyYXkubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/toReadonlyArray.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/logging/getStatusCodeColor.mjs":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/logging/getStatusCodeColor.mjs ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StatusCodeColor: function() { return /* binding */ StatusCodeColor; },\n/* harmony export */   getStatusCodeColor: function() { return /* binding */ getStatusCodeColor; }\n/* harmony export */ });\nvar StatusCodeColor = /* @__PURE__ */ ((StatusCodeColor2) => {\n  StatusCodeColor2[\"Success\"] = \"#69AB32\";\n  StatusCodeColor2[\"Warning\"] = \"#F0BB4B\";\n  StatusCodeColor2[\"Danger\"] = \"#E95F5D\";\n  return StatusCodeColor2;\n})(StatusCodeColor || {});\nfunction getStatusCodeColor(status) {\n  if (status < 300) {\n    return \"#69AB32\" /* Success */;\n  }\n  if (status < 400) {\n    return \"#F0BB4B\" /* Warning */;\n  }\n  return \"#E95F5D\" /* Danger */;\n}\n\n//# sourceMappingURL=getStatusCodeColor.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2xvZ2dpbmcvZ2V0U3RhdHVzQ29kZUNvbG9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHVCQUF1QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2xvZ2dpbmcvZ2V0U3RhdHVzQ29kZUNvbG9yLm1qcz81ZDhiIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBTdGF0dXNDb2RlQ29sb3IgPSAvKiBAX19QVVJFX18gKi8gKChTdGF0dXNDb2RlQ29sb3IyKSA9PiB7XG4gIFN0YXR1c0NvZGVDb2xvcjJbXCJTdWNjZXNzXCJdID0gXCIjNjlBQjMyXCI7XG4gIFN0YXR1c0NvZGVDb2xvcjJbXCJXYXJuaW5nXCJdID0gXCIjRjBCQjRCXCI7XG4gIFN0YXR1c0NvZGVDb2xvcjJbXCJEYW5nZXJcIl0gPSBcIiNFOTVGNURcIjtcbiAgcmV0dXJuIFN0YXR1c0NvZGVDb2xvcjI7XG59KShTdGF0dXNDb2RlQ29sb3IgfHwge30pO1xuZnVuY3Rpb24gZ2V0U3RhdHVzQ29kZUNvbG9yKHN0YXR1cykge1xuICBpZiAoc3RhdHVzIDwgMzAwKSB7XG4gICAgcmV0dXJuIFwiIzY5QUIzMlwiIC8qIFN1Y2Nlc3MgKi87XG4gIH1cbiAgaWYgKHN0YXR1cyA8IDQwMCkge1xuICAgIHJldHVybiBcIiNGMEJCNEJcIiAvKiBXYXJuaW5nICovO1xuICB9XG4gIHJldHVybiBcIiNFOTVGNURcIiAvKiBEYW5nZXIgKi87XG59XG5leHBvcnQge1xuICBTdGF0dXNDb2RlQ29sb3IsXG4gIGdldFN0YXR1c0NvZGVDb2xvclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFN0YXR1c0NvZGVDb2xvci5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/logging/getStatusCodeColor.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/logging/getTimestamp.mjs":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/logging/getTimestamp.mjs ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTimestamp: function() { return /* binding */ getTimestamp; }\n/* harmony export */ });\nfunction getTimestamp() {\n  const now = /* @__PURE__ */ new Date();\n  return [now.getHours(), now.getMinutes(), now.getSeconds()].map(String).map((chunk) => chunk.slice(0, 2)).map((chunk) => chunk.padStart(2, \"0\")).join(\":\");\n}\n\n//# sourceMappingURL=getTimestamp.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2xvZ2dpbmcvZ2V0VGltZXN0YW1wLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2xvZ2dpbmcvZ2V0VGltZXN0YW1wLm1qcz81Zjk1Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGdldFRpbWVzdGFtcCgpIHtcbiAgY29uc3Qgbm93ID0gLyogQF9fUFVSRV9fICovIG5ldyBEYXRlKCk7XG4gIHJldHVybiBbbm93LmdldEhvdXJzKCksIG5vdy5nZXRNaW51dGVzKCksIG5vdy5nZXRTZWNvbmRzKCldLm1hcChTdHJpbmcpLm1hcCgoY2h1bmspID0+IGNodW5rLnNsaWNlKDAsIDIpKS5tYXAoKGNodW5rKSA9PiBjaHVuay5wYWRTdGFydCgyLCBcIjBcIikpLmpvaW4oXCI6XCIpO1xufVxuZXhwb3J0IHtcbiAgZ2V0VGltZXN0YW1wXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0VGltZXN0YW1wLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/logging/getTimestamp.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/logging/serializeRequest.mjs":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/logging/serializeRequest.mjs ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializeRequest: function() { return /* binding */ serializeRequest; }\n/* harmony export */ });\nasync function serializeRequest(request) {\n  const requestClone = request.clone();\n  const requestText = await requestClone.text();\n  return {\n    url: new URL(request.url),\n    method: request.method,\n    headers: Object.fromEntries(request.headers.entries()),\n    body: requestText\n  };\n}\n\n//# sourceMappingURL=serializeRequest.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2xvZ2dpbmcvc2VyaWFsaXplUmVxdWVzdC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvLnBucG0vbXN3QDIuMy4xX3R5cGVzY3JpcHRANS41LjIvbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS91dGlscy9sb2dnaW5nL3NlcmlhbGl6ZVJlcXVlc3QubWpzPzcyZTAiXSwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgZnVuY3Rpb24gc2VyaWFsaXplUmVxdWVzdChyZXF1ZXN0KSB7XG4gIGNvbnN0IHJlcXVlc3RDbG9uZSA9IHJlcXVlc3QuY2xvbmUoKTtcbiAgY29uc3QgcmVxdWVzdFRleHQgPSBhd2FpdCByZXF1ZXN0Q2xvbmUudGV4dCgpO1xuICByZXR1cm4ge1xuICAgIHVybDogbmV3IFVSTChyZXF1ZXN0LnVybCksXG4gICAgbWV0aG9kOiByZXF1ZXN0Lm1ldGhvZCxcbiAgICBoZWFkZXJzOiBPYmplY3QuZnJvbUVudHJpZXMocmVxdWVzdC5oZWFkZXJzLmVudHJpZXMoKSksXG4gICAgYm9keTogcmVxdWVzdFRleHRcbiAgfTtcbn1cbmV4cG9ydCB7XG4gIHNlcmlhbGl6ZVJlcXVlc3Rcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXJpYWxpemVSZXF1ZXN0Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/logging/serializeRequest.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/logging/serializeResponse.mjs":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/logging/serializeResponse.mjs ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializeResponse: function() { return /* binding */ serializeResponse; }\n/* harmony export */ });\n/* harmony import */ var _bundled_es_modules_statuses__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bundled-es-modules/statuses */ \"(app-pages-browser)/./node_modules/.pnpm/@bundled-es-modules+statuses@1.0.1/node_modules/@bundled-es-modules/statuses/index-esm.js\");\n\nconst { message } = _bundled_es_modules_statuses__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\nasync function serializeResponse(response) {\n  const responseClone = response.clone();\n  const responseText = await responseClone.text();\n  const responseStatus = responseClone.status || 200;\n  const responseStatusText = responseClone.statusText || message[responseStatus] || \"OK\";\n  return {\n    status: responseStatus,\n    statusText: responseStatusText,\n    headers: Object.fromEntries(responseClone.headers.entries()),\n    body: responseText\n  };\n}\n\n//# sourceMappingURL=serializeResponse.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2xvZ2dpbmcvc2VyaWFsaXplUmVzcG9uc2UubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9EO0FBQ3BELFFBQVEsVUFBVSxFQUFFLG9FQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL21zd0AyLjMuMV90eXBlc2NyaXB0QDUuNS4yL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvbG9nZ2luZy9zZXJpYWxpemVSZXNwb25zZS5tanM/MjIzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3RhdHVzZXMgZnJvbSBcIkBidW5kbGVkLWVzLW1vZHVsZXMvc3RhdHVzZXNcIjtcbmNvbnN0IHsgbWVzc2FnZSB9ID0gc3RhdHVzZXM7XG5hc3luYyBmdW5jdGlvbiBzZXJpYWxpemVSZXNwb25zZShyZXNwb25zZSkge1xuICBjb25zdCByZXNwb25zZUNsb25lID0gcmVzcG9uc2UuY2xvbmUoKTtcbiAgY29uc3QgcmVzcG9uc2VUZXh0ID0gYXdhaXQgcmVzcG9uc2VDbG9uZS50ZXh0KCk7XG4gIGNvbnN0IHJlc3BvbnNlU3RhdHVzID0gcmVzcG9uc2VDbG9uZS5zdGF0dXMgfHwgMjAwO1xuICBjb25zdCByZXNwb25zZVN0YXR1c1RleHQgPSByZXNwb25zZUNsb25lLnN0YXR1c1RleHQgfHwgbWVzc2FnZVtyZXNwb25zZVN0YXR1c10gfHwgXCJPS1wiO1xuICByZXR1cm4ge1xuICAgIHN0YXR1czogcmVzcG9uc2VTdGF0dXMsXG4gICAgc3RhdHVzVGV4dDogcmVzcG9uc2VTdGF0dXNUZXh0LFxuICAgIGhlYWRlcnM6IE9iamVjdC5mcm9tRW50cmllcyhyZXNwb25zZUNsb25lLmhlYWRlcnMuZW50cmllcygpKSxcbiAgICBib2R5OiByZXNwb25zZVRleHRcbiAgfTtcbn1cbmV4cG9ydCB7XG4gIHNlcmlhbGl6ZVJlc3BvbnNlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VyaWFsaXplUmVzcG9uc2UubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/logging/serializeResponse.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/matching/matchRequestUrl.mjs":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/matching/matchRequestUrl.mjs ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coercePath: function() { return /* binding */ coercePath; },\n/* harmony export */   matchRequestUrl: function() { return /* binding */ matchRequestUrl; }\n/* harmony export */ });\n/* harmony import */ var path_to_regexp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path-to-regexp */ \"(app-pages-browser)/./node_modules/.pnpm/path-to-regexp@6.2.2/node_modules/path-to-regexp/dist.es2015/index.js\");\n/* harmony import */ var _mswjs_interceptors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mswjs/interceptors */ \"(app-pages-browser)/./node_modules/.pnpm/@mswjs+interceptors@0.29.1/node_modules/@mswjs/interceptors/lib/browser/index.mjs\");\n/* harmony import */ var _normalizePath_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normalizePath.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/matching/normalizePath.mjs\");\n\n\n\nfunction coercePath(path) {\n  return path.replace(\n    /([:a-zA-Z_-]*)(\\*{1,2})+/g,\n    (_, parameterName, wildcard) => {\n      const expression = \"(.*)\";\n      if (!parameterName) {\n        return expression;\n      }\n      return parameterName.startsWith(\":\") ? `${parameterName}${wildcard}` : `${parameterName}${expression}`;\n    }\n  ).replace(/([^\\/])(:)(?=\\d+)/, \"$1\\\\$2\").replace(/^([^\\/]+)(:)(?=\\/\\/)/, \"$1\\\\$2\");\n}\nfunction matchRequestUrl(url, path, baseUrl) {\n  const normalizedPath = (0,_normalizePath_mjs__WEBPACK_IMPORTED_MODULE_1__.normalizePath)(path, baseUrl);\n  const cleanPath = typeof normalizedPath === \"string\" ? coercePath(normalizedPath) : normalizedPath;\n  const cleanUrl = (0,_mswjs_interceptors__WEBPACK_IMPORTED_MODULE_0__.getCleanUrl)(url);\n  const result = (0,path_to_regexp__WEBPACK_IMPORTED_MODULE_2__.match)(cleanPath, { decode: decodeURIComponent })(cleanUrl);\n  const params = result && result.params || {};\n  return {\n    matches: result !== false,\n    params\n  };\n}\n\n//# sourceMappingURL=matchRequestUrl.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL21hdGNoaW5nL21hdGNoUmVxdWVzdFVybC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBdUM7QUFDVztBQUNFO0FBQ3BEO0FBQ0E7QUFDQSx1QkFBdUIsSUFBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELGNBQWMsRUFBRSxTQUFTLE9BQU8sY0FBYyxFQUFFLFdBQVc7QUFDM0c7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsaUVBQWE7QUFDdEM7QUFDQSxtQkFBbUIsZ0VBQVc7QUFDOUIsaUJBQWlCLHFEQUFLLGNBQWMsNEJBQTRCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL21zd0AyLjMuMV90eXBlc2NyaXB0QDUuNS4yL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvbWF0Y2hpbmcvbWF0Y2hSZXF1ZXN0VXJsLm1qcz9hY2MzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1hdGNoIH0gZnJvbSBcInBhdGgtdG8tcmVnZXhwXCI7XG5pbXBvcnQgeyBnZXRDbGVhblVybCB9IGZyb20gXCJAbXN3anMvaW50ZXJjZXB0b3JzXCI7XG5pbXBvcnQgeyBub3JtYWxpemVQYXRoIH0gZnJvbSAnLi9ub3JtYWxpemVQYXRoLm1qcyc7XG5mdW5jdGlvbiBjb2VyY2VQYXRoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGgucmVwbGFjZShcbiAgICAvKFs6YS16QS1aXy1dKikoXFwqezEsMn0pKy9nLFxuICAgIChfLCBwYXJhbWV0ZXJOYW1lLCB3aWxkY2FyZCkgPT4ge1xuICAgICAgY29uc3QgZXhwcmVzc2lvbiA9IFwiKC4qKVwiO1xuICAgICAgaWYgKCFwYXJhbWV0ZXJOYW1lKSB7XG4gICAgICAgIHJldHVybiBleHByZXNzaW9uO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHBhcmFtZXRlck5hbWUuc3RhcnRzV2l0aChcIjpcIikgPyBgJHtwYXJhbWV0ZXJOYW1lfSR7d2lsZGNhcmR9YCA6IGAke3BhcmFtZXRlck5hbWV9JHtleHByZXNzaW9ufWA7XG4gICAgfVxuICApLnJlcGxhY2UoLyhbXlxcL10pKDopKD89XFxkKykvLCBcIiQxXFxcXCQyXCIpLnJlcGxhY2UoL14oW15cXC9dKykoOikoPz1cXC9cXC8pLywgXCIkMVxcXFwkMlwiKTtcbn1cbmZ1bmN0aW9uIG1hdGNoUmVxdWVzdFVybCh1cmwsIHBhdGgsIGJhc2VVcmwpIHtcbiAgY29uc3Qgbm9ybWFsaXplZFBhdGggPSBub3JtYWxpemVQYXRoKHBhdGgsIGJhc2VVcmwpO1xuICBjb25zdCBjbGVhblBhdGggPSB0eXBlb2Ygbm9ybWFsaXplZFBhdGggPT09IFwic3RyaW5nXCIgPyBjb2VyY2VQYXRoKG5vcm1hbGl6ZWRQYXRoKSA6IG5vcm1hbGl6ZWRQYXRoO1xuICBjb25zdCBjbGVhblVybCA9IGdldENsZWFuVXJsKHVybCk7XG4gIGNvbnN0IHJlc3VsdCA9IG1hdGNoKGNsZWFuUGF0aCwgeyBkZWNvZGU6IGRlY29kZVVSSUNvbXBvbmVudCB9KShjbGVhblVybCk7XG4gIGNvbnN0IHBhcmFtcyA9IHJlc3VsdCAmJiByZXN1bHQucGFyYW1zIHx8IHt9O1xuICByZXR1cm4ge1xuICAgIG1hdGNoZXM6IHJlc3VsdCAhPT0gZmFsc2UsXG4gICAgcGFyYW1zXG4gIH07XG59XG5leHBvcnQge1xuICBjb2VyY2VQYXRoLFxuICBtYXRjaFJlcXVlc3RVcmxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYXRjaFJlcXVlc3RVcmwubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/matching/matchRequestUrl.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/matching/normalizePath.mjs":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/matching/normalizePath.mjs ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizePath: function() { return /* binding */ normalizePath; }\n/* harmony export */ });\n/* harmony import */ var _url_cleanUrl_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../url/cleanUrl.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/url/cleanUrl.mjs\");\n/* harmony import */ var _url_getAbsoluteUrl_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../url/getAbsoluteUrl.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/url/getAbsoluteUrl.mjs\");\n\n\nfunction normalizePath(path, baseUrl) {\n  if (path instanceof RegExp) {\n    return path;\n  }\n  const maybeAbsoluteUrl = (0,_url_getAbsoluteUrl_mjs__WEBPACK_IMPORTED_MODULE_0__.getAbsoluteUrl)(path, baseUrl);\n  return (0,_url_cleanUrl_mjs__WEBPACK_IMPORTED_MODULE_1__.cleanUrl)(maybeAbsoluteUrl);\n}\n\n//# sourceMappingURL=normalizePath.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL21hdGNoaW5nL25vcm1hbGl6ZVBhdGgubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQztBQUNZO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHVFQUFjO0FBQ3pDLFNBQVMsMkRBQVE7QUFDakI7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL21hdGNoaW5nL25vcm1hbGl6ZVBhdGgubWpzP2EwZjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2xlYW5VcmwgfSBmcm9tICcuLi91cmwvY2xlYW5VcmwubWpzJztcbmltcG9ydCB7IGdldEFic29sdXRlVXJsIH0gZnJvbSAnLi4vdXJsL2dldEFic29sdXRlVXJsLm1qcyc7XG5mdW5jdGlvbiBub3JtYWxpemVQYXRoKHBhdGgsIGJhc2VVcmwpIHtcbiAgaWYgKHBhdGggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gcGF0aDtcbiAgfVxuICBjb25zdCBtYXliZUFic29sdXRlVXJsID0gZ2V0QWJzb2x1dGVVcmwocGF0aCwgYmFzZVVybCk7XG4gIHJldHVybiBjbGVhblVybChtYXliZUFic29sdXRlVXJsKTtcbn1cbmV4cG9ydCB7XG4gIG5vcm1hbGl6ZVBhdGhcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub3JtYWxpemVQYXRoLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/matching/normalizePath.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/request/getRequestCookies.mjs":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/request/getRequestCookies.mjs ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAllRequestCookies: function() { return /* binding */ getAllRequestCookies; },\n/* harmony export */   getRequestCookies: function() { return /* binding */ getRequestCookies; }\n/* harmony export */ });\n/* harmony import */ var _bundled_es_modules_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bundled-es-modules/cookie */ \"(app-pages-browser)/./node_modules/.pnpm/@bundled-es-modules+cookie@2.0.0/node_modules/@bundled-es-modules/cookie/index-esm.js\");\n/* harmony import */ var _mswjs_cookies__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mswjs/cookies */ \"(app-pages-browser)/./node_modules/.pnpm/@mswjs+cookies@1.1.1/node_modules/@mswjs/cookies/lib/index.mjs\");\n\n\nfunction getAllDocumentCookies() {\n  return _bundled_es_modules_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].parse(document.cookie);\n}\nfunction getRequestCookies(request) {\n  if (typeof document === \"undefined\" || typeof location === \"undefined\") {\n    return {};\n  }\n  switch (request.credentials) {\n    case \"same-origin\": {\n      const url = new URL(request.url);\n      return location.origin === url.origin ? getAllDocumentCookies() : {};\n    }\n    case \"include\": {\n      return getAllDocumentCookies();\n    }\n    default: {\n      return {};\n    }\n  }\n}\nfunction getAllRequestCookies(request) {\n  const requestCookiesString = request.headers.get(\"cookie\");\n  const cookiesFromHeaders = requestCookiesString ? _bundled_es_modules_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].parse(requestCookiesString) : {};\n  _mswjs_cookies__WEBPACK_IMPORTED_MODULE_1__.store.hydrate();\n  const cookiesFromStore = Array.from(_mswjs_cookies__WEBPACK_IMPORTED_MODULE_1__.store.get(request)?.entries()).reduce((cookies, [name, { value }]) => {\n    return Object.assign(cookies, { [name.trim()]: value });\n  }, {});\n  const cookiesFromDocument = getRequestCookies(request);\n  const forwardedCookies = {\n    ...cookiesFromDocument,\n    ...cookiesFromStore\n  };\n  for (const [name, value] of Object.entries(forwardedCookies)) {\n    request.headers.append(\"cookie\", _bundled_es_modules_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].serialize(name, value));\n  }\n  return {\n    ...forwardedCookies,\n    ...cookiesFromHeaders\n  };\n}\n\n//# sourceMappingURL=getRequestCookies.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL3JlcXVlc3QvZ2V0UmVxdWVzdENvb2tpZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcUQ7QUFDZDtBQUN2QztBQUNBLFNBQVMsa0VBQVc7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxrRUFBVztBQUMvRCxFQUFFLGlEQUFLO0FBQ1Asc0NBQXNDLGlEQUFLLG9EQUFvRCxPQUFPO0FBQ3RHLG9DQUFvQyxzQkFBc0I7QUFDMUQsR0FBRyxJQUFJO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLGtFQUFXO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL21zd0AyLjMuMV90eXBlc2NyaXB0QDUuNS4yL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvcmVxdWVzdC9nZXRSZXF1ZXN0Q29va2llcy5tanM/OTJiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29va2llVXRpbHMgZnJvbSBcIkBidW5kbGVkLWVzLW1vZHVsZXMvY29va2llXCI7XG5pbXBvcnQgeyBzdG9yZSB9IGZyb20gXCJAbXN3anMvY29va2llc1wiO1xuZnVuY3Rpb24gZ2V0QWxsRG9jdW1lbnRDb29raWVzKCkge1xuICByZXR1cm4gY29va2llVXRpbHMucGFyc2UoZG9jdW1lbnQuY29va2llKTtcbn1cbmZ1bmN0aW9uIGdldFJlcXVlc3RDb29raWVzKHJlcXVlc3QpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIiB8fCB0eXBlb2YgbG9jYXRpb24gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge307XG4gIH1cbiAgc3dpdGNoIChyZXF1ZXN0LmNyZWRlbnRpYWxzKSB7XG4gICAgY2FzZSBcInNhbWUtb3JpZ2luXCI6IHtcbiAgICAgIGNvbnN0IHVybCA9IG5ldyBVUkwocmVxdWVzdC51cmwpO1xuICAgICAgcmV0dXJuIGxvY2F0aW9uLm9yaWdpbiA9PT0gdXJsLm9yaWdpbiA/IGdldEFsbERvY3VtZW50Q29va2llcygpIDoge307XG4gICAgfVxuICAgIGNhc2UgXCJpbmNsdWRlXCI6IHtcbiAgICAgIHJldHVybiBnZXRBbGxEb2N1bWVudENvb2tpZXMoKTtcbiAgICB9XG4gICAgZGVmYXVsdDoge1xuICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gZ2V0QWxsUmVxdWVzdENvb2tpZXMocmVxdWVzdCkge1xuICBjb25zdCByZXF1ZXN0Q29va2llc1N0cmluZyA9IHJlcXVlc3QuaGVhZGVycy5nZXQoXCJjb29raWVcIik7XG4gIGNvbnN0IGNvb2tpZXNGcm9tSGVhZGVycyA9IHJlcXVlc3RDb29raWVzU3RyaW5nID8gY29va2llVXRpbHMucGFyc2UocmVxdWVzdENvb2tpZXNTdHJpbmcpIDoge307XG4gIHN0b3JlLmh5ZHJhdGUoKTtcbiAgY29uc3QgY29va2llc0Zyb21TdG9yZSA9IEFycmF5LmZyb20oc3RvcmUuZ2V0KHJlcXVlc3QpPy5lbnRyaWVzKCkpLnJlZHVjZSgoY29va2llcywgW25hbWUsIHsgdmFsdWUgfV0pID0+IHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihjb29raWVzLCB7IFtuYW1lLnRyaW0oKV06IHZhbHVlIH0pO1xuICB9LCB7fSk7XG4gIGNvbnN0IGNvb2tpZXNGcm9tRG9jdW1lbnQgPSBnZXRSZXF1ZXN0Q29va2llcyhyZXF1ZXN0KTtcbiAgY29uc3QgZm9yd2FyZGVkQ29va2llcyA9IHtcbiAgICAuLi5jb29raWVzRnJvbURvY3VtZW50LFxuICAgIC4uLmNvb2tpZXNGcm9tU3RvcmVcbiAgfTtcbiAgZm9yIChjb25zdCBbbmFtZSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGZvcndhcmRlZENvb2tpZXMpKSB7XG4gICAgcmVxdWVzdC5oZWFkZXJzLmFwcGVuZChcImNvb2tpZVwiLCBjb29raWVVdGlscy5zZXJpYWxpemUobmFtZSwgdmFsdWUpKTtcbiAgfVxuICByZXR1cm4ge1xuICAgIC4uLmZvcndhcmRlZENvb2tpZXMsXG4gICAgLi4uY29va2llc0Zyb21IZWFkZXJzXG4gIH07XG59XG5leHBvcnQge1xuICBnZXRBbGxSZXF1ZXN0Q29va2llcyxcbiAgZ2V0UmVxdWVzdENvb2tpZXNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRSZXF1ZXN0Q29va2llcy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/request/getRequestCookies.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/request/onUnhandledRequest.mjs":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/request/onUnhandledRequest.mjs ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onUnhandledRequest: function() { return /* binding */ onUnhandledRequest; }\n/* harmony export */ });\n/* harmony import */ var _toPublicUrl_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toPublicUrl.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/request/toPublicUrl.mjs\");\n/* harmony import */ var _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/devUtils.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/internal/devUtils.mjs\");\n\n\nasync function onUnhandledRequest(request, strategy = \"warn\") {\n  const url = new URL(request.url);\n  const publicUrl = (0,_toPublicUrl_mjs__WEBPACK_IMPORTED_MODULE_0__.toPublicUrl)(url) + url.search;\n  const unhandledRequestMessage = `intercepted a request without a matching request handler:\n\n  \\u2022 ${request.method} ${publicUrl}\n\nIf you still wish to intercept this unhandled request, please create a request handler for it.\nRead more: https://mswjs.io/docs/getting-started/mocks`;\n  function applyStrategy(strategy2) {\n    switch (strategy2) {\n      case \"error\": {\n        _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.error(\"Error: %s\", unhandledRequestMessage);\n        throw new _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.InternalError(\n          _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.formatMessage(\n            'Cannot bypass a request when using the \"error\" strategy for the \"onUnhandledRequest\" option.'\n          )\n        );\n      }\n      case \"warn\": {\n        _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.warn(\"Warning: %s\", unhandledRequestMessage);\n        break;\n      }\n      case \"bypass\":\n        break;\n      default:\n        throw new _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.InternalError(\n          _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.formatMessage(\n            'Failed to react to an unhandled request: unknown strategy \"%s\". Please provide one of the supported strategies (\"bypass\", \"warn\", \"error\") or a custom callback function as the value of the \"onUnhandledRequest\" option.',\n            strategy2\n          )\n        );\n    }\n  }\n  if (typeof strategy === \"function\") {\n    strategy(request, {\n      warning: applyStrategy.bind(null, \"warn\"),\n      error: applyStrategy.bind(null, \"error\")\n    });\n    return;\n  }\n  if (url.protocol === \"file:\") {\n    return;\n  }\n  applyStrategy(strategy);\n}\n\n//# sourceMappingURL=onUnhandledRequest.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL3JlcXVlc3Qvb25VbmhhbmRsZWRSZXF1ZXN0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZ0Q7QUFDbUI7QUFDbkU7QUFDQTtBQUNBLG9CQUFvQiw2REFBVztBQUMvQjs7QUFFQSxXQUFXLGdCQUFnQixFQUFFOztBQUU3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw0REFBUTtBQUNoQixrQkFBa0IsaUVBQWE7QUFDL0IsVUFBVSw0REFBUTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw0REFBUTtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlFQUFhO0FBQy9CLFVBQVUsNERBQVE7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL3JlcXVlc3Qvb25VbmhhbmRsZWRSZXF1ZXN0Lm1qcz81NDg5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHRvUHVibGljVXJsIH0gZnJvbSAnLi90b1B1YmxpY1VybC5tanMnO1xuaW1wb3J0IHsgSW50ZXJuYWxFcnJvciwgZGV2VXRpbHMgfSBmcm9tICcuLi9pbnRlcm5hbC9kZXZVdGlscy5tanMnO1xuYXN5bmMgZnVuY3Rpb24gb25VbmhhbmRsZWRSZXF1ZXN0KHJlcXVlc3QsIHN0cmF0ZWd5ID0gXCJ3YXJuXCIpIHtcbiAgY29uc3QgdXJsID0gbmV3IFVSTChyZXF1ZXN0LnVybCk7XG4gIGNvbnN0IHB1YmxpY1VybCA9IHRvUHVibGljVXJsKHVybCkgKyB1cmwuc2VhcmNoO1xuICBjb25zdCB1bmhhbmRsZWRSZXF1ZXN0TWVzc2FnZSA9IGBpbnRlcmNlcHRlZCBhIHJlcXVlc3Qgd2l0aG91dCBhIG1hdGNoaW5nIHJlcXVlc3QgaGFuZGxlcjpcblxuICBcXHUyMDIyICR7cmVxdWVzdC5tZXRob2R9ICR7cHVibGljVXJsfVxuXG5JZiB5b3Ugc3RpbGwgd2lzaCB0byBpbnRlcmNlcHQgdGhpcyB1bmhhbmRsZWQgcmVxdWVzdCwgcGxlYXNlIGNyZWF0ZSBhIHJlcXVlc3QgaGFuZGxlciBmb3IgaXQuXG5SZWFkIG1vcmU6IGh0dHBzOi8vbXN3anMuaW8vZG9jcy9nZXR0aW5nLXN0YXJ0ZWQvbW9ja3NgO1xuICBmdW5jdGlvbiBhcHBseVN0cmF0ZWd5KHN0cmF0ZWd5Mikge1xuICAgIHN3aXRjaCAoc3RyYXRlZ3kyKSB7XG4gICAgICBjYXNlIFwiZXJyb3JcIjoge1xuICAgICAgICBkZXZVdGlscy5lcnJvcihcIkVycm9yOiAlc1wiLCB1bmhhbmRsZWRSZXF1ZXN0TWVzc2FnZSk7XG4gICAgICAgIHRocm93IG5ldyBJbnRlcm5hbEVycm9yKFxuICAgICAgICAgIGRldlV0aWxzLmZvcm1hdE1lc3NhZ2UoXG4gICAgICAgICAgICAnQ2Fubm90IGJ5cGFzcyBhIHJlcXVlc3Qgd2hlbiB1c2luZyB0aGUgXCJlcnJvclwiIHN0cmF0ZWd5IGZvciB0aGUgXCJvblVuaGFuZGxlZFJlcXVlc3RcIiBvcHRpb24uJ1xuICAgICAgICAgIClcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGNhc2UgXCJ3YXJuXCI6IHtcbiAgICAgICAgZGV2VXRpbHMud2FybihcIldhcm5pbmc6ICVzXCIsIHVuaGFuZGxlZFJlcXVlc3RNZXNzYWdlKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIFwiYnlwYXNzXCI6XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEludGVybmFsRXJyb3IoXG4gICAgICAgICAgZGV2VXRpbHMuZm9ybWF0TWVzc2FnZShcbiAgICAgICAgICAgICdGYWlsZWQgdG8gcmVhY3QgdG8gYW4gdW5oYW5kbGVkIHJlcXVlc3Q6IHVua25vd24gc3RyYXRlZ3kgXCIlc1wiLiBQbGVhc2UgcHJvdmlkZSBvbmUgb2YgdGhlIHN1cHBvcnRlZCBzdHJhdGVnaWVzIChcImJ5cGFzc1wiLCBcIndhcm5cIiwgXCJlcnJvclwiKSBvciBhIGN1c3RvbSBjYWxsYmFjayBmdW5jdGlvbiBhcyB0aGUgdmFsdWUgb2YgdGhlIFwib25VbmhhbmRsZWRSZXF1ZXN0XCIgb3B0aW9uLicsXG4gICAgICAgICAgICBzdHJhdGVneTJcbiAgICAgICAgICApXG4gICAgICAgICk7XG4gICAgfVxuICB9XG4gIGlmICh0eXBlb2Ygc3RyYXRlZ3kgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHN0cmF0ZWd5KHJlcXVlc3QsIHtcbiAgICAgIHdhcm5pbmc6IGFwcGx5U3RyYXRlZ3kuYmluZChudWxsLCBcIndhcm5cIiksXG4gICAgICBlcnJvcjogYXBwbHlTdHJhdGVneS5iaW5kKG51bGwsIFwiZXJyb3JcIilcbiAgICB9KTtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHVybC5wcm90b2NvbCA9PT0gXCJmaWxlOlwiKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGFwcGx5U3RyYXRlZ3koc3RyYXRlZ3kpO1xufVxuZXhwb3J0IHtcbiAgb25VbmhhbmRsZWRSZXF1ZXN0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b25VbmhhbmRsZWRSZXF1ZXN0Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/request/onUnhandledRequest.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/request/readResponseCookies.mjs":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/request/readResponseCookies.mjs ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readResponseCookies: function() { return /* binding */ readResponseCookies; }\n/* harmony export */ });\n/* harmony import */ var _mswjs_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mswjs/cookies */ \"(app-pages-browser)/./node_modules/.pnpm/@mswjs+cookies@1.1.1/node_modules/@mswjs/cookies/lib/index.mjs\");\n\nfunction readResponseCookies(request, response) {\n  _mswjs_cookies__WEBPACK_IMPORTED_MODULE_0__.store.add({ ...request, url: request.url.toString() }, response);\n  _mswjs_cookies__WEBPACK_IMPORTED_MODULE_0__.store.persist();\n}\n\n//# sourceMappingURL=readResponseCookies.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL3JlcXVlc3QvcmVhZFJlc3BvbnNlQ29va2llcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUM7QUFDdkM7QUFDQSxFQUFFLGlEQUFLLE9BQU8seUNBQXlDO0FBQ3ZELEVBQUUsaURBQUs7QUFDUDtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL21zd0AyLjMuMV90eXBlc2NyaXB0QDUuNS4yL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvcmVxdWVzdC9yZWFkUmVzcG9uc2VDb29raWVzLm1qcz9iNzgxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0b3JlIH0gZnJvbSBcIkBtc3dqcy9jb29raWVzXCI7XG5mdW5jdGlvbiByZWFkUmVzcG9uc2VDb29raWVzKHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gIHN0b3JlLmFkZCh7IC4uLnJlcXVlc3QsIHVybDogcmVxdWVzdC51cmwudG9TdHJpbmcoKSB9LCByZXNwb25zZSk7XG4gIHN0b3JlLnBlcnNpc3QoKTtcbn1cbmV4cG9ydCB7XG4gIHJlYWRSZXNwb25zZUNvb2tpZXNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFkUmVzcG9uc2VDb29raWVzLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/request/readResponseCookies.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/request/toPublicUrl.mjs":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/request/toPublicUrl.mjs ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toPublicUrl: function() { return /* binding */ toPublicUrl; }\n/* harmony export */ });\nfunction toPublicUrl(url) {\n  if (typeof location === \"undefined\") {\n    return url.toString();\n  }\n  const urlInstance = url instanceof URL ? url : new URL(url);\n  return urlInstance.origin === location.origin ? urlInstance.pathname : urlInstance.origin + urlInstance.pathname;\n}\n\n//# sourceMappingURL=toPublicUrl.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL3JlcXVlc3QvdG9QdWJsaWNVcmwubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL21zd0AyLjMuMV90eXBlc2NyaXB0QDUuNS4yL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvcmVxdWVzdC90b1B1YmxpY1VybC5tanM/ZjcwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiB0b1B1YmxpY1VybCh1cmwpIHtcbiAgaWYgKHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB1cmwudG9TdHJpbmcoKTtcbiAgfVxuICBjb25zdCB1cmxJbnN0YW5jZSA9IHVybCBpbnN0YW5jZW9mIFVSTCA/IHVybCA6IG5ldyBVUkwodXJsKTtcbiAgcmV0dXJuIHVybEluc3RhbmNlLm9yaWdpbiA9PT0gbG9jYXRpb24ub3JpZ2luID8gdXJsSW5zdGFuY2UucGF0aG5hbWUgOiB1cmxJbnN0YW5jZS5vcmlnaW4gKyB1cmxJbnN0YW5jZS5wYXRobmFtZTtcbn1cbmV4cG9ydCB7XG4gIHRvUHVibGljVXJsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dG9QdWJsaWNVcmwubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/request/toPublicUrl.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/toResponseInit.mjs":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/toResponseInit.mjs ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toResponseInit: function() { return /* binding */ toResponseInit; }\n/* harmony export */ });\nfunction toResponseInit(response) {\n  return {\n    status: response.status,\n    statusText: response.statusText,\n    headers: Object.fromEntries(response.headers.entries())\n  };\n}\n\n//# sourceMappingURL=toResponseInit.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL3RvUmVzcG9uc2VJbml0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL3RvUmVzcG9uc2VJbml0Lm1qcz8xNjY2Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHRvUmVzcG9uc2VJbml0KHJlc3BvbnNlKSB7XG4gIHJldHVybiB7XG4gICAgc3RhdHVzOiByZXNwb25zZS5zdGF0dXMsXG4gICAgc3RhdHVzVGV4dDogcmVzcG9uc2Uuc3RhdHVzVGV4dCxcbiAgICBoZWFkZXJzOiBPYmplY3QuZnJvbUVudHJpZXMocmVzcG9uc2UuaGVhZGVycy5lbnRyaWVzKCkpXG4gIH07XG59XG5leHBvcnQge1xuICB0b1Jlc3BvbnNlSW5pdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRvUmVzcG9uc2VJbml0Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/toResponseInit.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/url/cleanUrl.mjs":
/*!********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/url/cleanUrl.mjs ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanUrl: function() { return /* binding */ cleanUrl; },\n/* harmony export */   getSearchParams: function() { return /* binding */ getSearchParams; }\n/* harmony export */ });\nconst REDUNDANT_CHARACTERS_EXP = /[\\?|#].*$/g;\nfunction getSearchParams(path) {\n  return new URL(`/${path}`, \"http://localhost\").searchParams;\n}\nfunction cleanUrl(path) {\n  if (path.endsWith(\"?\")) {\n    return path;\n  }\n  return path.replace(REDUNDANT_CHARACTERS_EXP, \"\");\n}\n\n//# sourceMappingURL=cleanUrl.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL3VybC9jbGVhblVybC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0EscUJBQXFCLEtBQUs7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL3VybC9jbGVhblVybC5tanM/ZjJiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSRURVTkRBTlRfQ0hBUkFDVEVSU19FWFAgPSAvW1xcP3wjXS4qJC9nO1xuZnVuY3Rpb24gZ2V0U2VhcmNoUGFyYW1zKHBhdGgpIHtcbiAgcmV0dXJuIG5ldyBVUkwoYC8ke3BhdGh9YCwgXCJodHRwOi8vbG9jYWxob3N0XCIpLnNlYXJjaFBhcmFtcztcbn1cbmZ1bmN0aW9uIGNsZWFuVXJsKHBhdGgpIHtcbiAgaWYgKHBhdGguZW5kc1dpdGgoXCI/XCIpKSB7XG4gICAgcmV0dXJuIHBhdGg7XG4gIH1cbiAgcmV0dXJuIHBhdGgucmVwbGFjZShSRURVTkRBTlRfQ0hBUkFDVEVSU19FWFAsIFwiXCIpO1xufVxuZXhwb3J0IHtcbiAgY2xlYW5VcmwsXG4gIGdldFNlYXJjaFBhcmFtc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNsZWFuVXJsLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/url/cleanUrl.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/url/getAbsoluteUrl.mjs":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/url/getAbsoluteUrl.mjs ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAbsoluteUrl: function() { return /* binding */ getAbsoluteUrl; }\n/* harmony export */ });\n/* harmony import */ var _isAbsoluteUrl_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isAbsoluteUrl.mjs */ \"(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/url/isAbsoluteUrl.mjs\");\n\nfunction getAbsoluteUrl(path, baseUrl) {\n  if ((0,_isAbsoluteUrl_mjs__WEBPACK_IMPORTED_MODULE_0__.isAbsoluteUrl)(path)) {\n    return path;\n  }\n  if (path.startsWith(\"*\")) {\n    return path;\n  }\n  const origin = baseUrl || typeof document !== \"undefined\" && document.baseURI;\n  return origin ? (\n    // Encode and decode the path to preserve escaped characters.\n    decodeURI(new URL(encodeURI(path), origin).href)\n  ) : path;\n}\n\n//# sourceMappingURL=getAbsoluteUrl.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL3VybC9nZXRBYnNvbHV0ZVVybC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0Q7QUFDcEQ7QUFDQSxNQUFNLGlFQUFhO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL3VybC9nZXRBYnNvbHV0ZVVybC5tanM/NzdhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0Fic29sdXRlVXJsIH0gZnJvbSAnLi9pc0Fic29sdXRlVXJsLm1qcyc7XG5mdW5jdGlvbiBnZXRBYnNvbHV0ZVVybChwYXRoLCBiYXNlVXJsKSB7XG4gIGlmIChpc0Fic29sdXRlVXJsKHBhdGgpKSB7XG4gICAgcmV0dXJuIHBhdGg7XG4gIH1cbiAgaWYgKHBhdGguc3RhcnRzV2l0aChcIipcIikpIHtcbiAgICByZXR1cm4gcGF0aDtcbiAgfVxuICBjb25zdCBvcmlnaW4gPSBiYXNlVXJsIHx8IHR5cGVvZiBkb2N1bWVudCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudC5iYXNlVVJJO1xuICByZXR1cm4gb3JpZ2luID8gKFxuICAgIC8vIEVuY29kZSBhbmQgZGVjb2RlIHRoZSBwYXRoIHRvIHByZXNlcnZlIGVzY2FwZWQgY2hhcmFjdGVycy5cbiAgICBkZWNvZGVVUkkobmV3IFVSTChlbmNvZGVVUkkocGF0aCksIG9yaWdpbikuaHJlZilcbiAgKSA6IHBhdGg7XG59XG5leHBvcnQge1xuICBnZXRBYnNvbHV0ZVVybFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEFic29sdXRlVXJsLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/url/getAbsoluteUrl.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/url/isAbsoluteUrl.mjs":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/url/isAbsoluteUrl.mjs ***!
  \*************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAbsoluteUrl: function() { return /* binding */ isAbsoluteUrl; }\n/* harmony export */ });\nfunction isAbsoluteUrl(url) {\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n}\n\n//# sourceMappingURL=isAbsoluteUrl.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tc3dAMi4zLjFfdHlwZXNjcmlwdEA1LjUuMi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL3VybC9pc0Fic29sdXRlVXJsLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvLnBucG0vbXN3QDIuMy4xX3R5cGVzY3JpcHRANS41LjIvbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS91dGlscy91cmwvaXNBYnNvbHV0ZVVybC5tanM/YjAxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBpc0Fic29sdXRlVXJsKHVybCkge1xuICByZXR1cm4gL14oW2Etel1bYS16XFxkXFwrXFwtXFwuXSo6KT9cXC9cXC8vaS50ZXN0KHVybCk7XG59XG5leHBvcnQge1xuICBpc0Fic29sdXRlVXJsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNBYnNvbHV0ZVVybC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/msw@2.3.1_typescript@5.5.2/node_modules/msw/lib/core/utils/url/isAbsoluteUrl.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/outvariant@1.4.2/node_modules/outvariant/lib/index.mjs":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/outvariant@1.4.2/node_modules/outvariant/lib/index.mjs ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InvariantError: function() { return /* binding */ InvariantError; },\n/* harmony export */   format: function() { return /* binding */ format; },\n/* harmony export */   invariant: function() { return /* binding */ invariant; }\n/* harmony export */ });\n// src/format.ts\nvar POSITIONALS_EXP = /(%?)(%([sdijo]))/g;\nfunction serializePositional(positional, flag) {\n  switch (flag) {\n    case \"s\":\n      return positional;\n    case \"d\":\n    case \"i\":\n      return Number(positional);\n    case \"j\":\n      return JSON.stringify(positional);\n    case \"o\": {\n      if (typeof positional === \"string\") {\n        return positional;\n      }\n      const json = JSON.stringify(positional);\n      if (json === \"{}\" || json === \"[]\" || /^\\[object .+?\\]$/.test(json)) {\n        return positional;\n      }\n      return json;\n    }\n  }\n}\nfunction format(message, ...positionals) {\n  if (positionals.length === 0) {\n    return message;\n  }\n  let positionalIndex = 0;\n  let formattedMessage = message.replace(\n    POSITIONALS_EXP,\n    (match, isEscaped, _, flag) => {\n      const positional = positionals[positionalIndex];\n      const value = serializePositional(positional, flag);\n      if (!isEscaped) {\n        positionalIndex++;\n        return value;\n      }\n      return match;\n    }\n  );\n  if (positionalIndex < positionals.length) {\n    formattedMessage += ` ${positionals.slice(positionalIndex).join(\" \")}`;\n  }\n  formattedMessage = formattedMessage.replace(/%{2,2}/g, \"%\");\n  return formattedMessage;\n}\n\n// src/invariant.ts\nvar STACK_FRAMES_TO_IGNORE = 2;\nfunction cleanErrorStack(error) {\n  if (!error.stack) {\n    return;\n  }\n  const nextStack = error.stack.split(\"\\n\");\n  nextStack.splice(1, STACK_FRAMES_TO_IGNORE);\n  error.stack = nextStack.join(\"\\n\");\n}\nvar InvariantError = class extends Error {\n  constructor(message, ...positionals) {\n    super(message);\n    this.message = message;\n    this.name = \"Invariant Violation\";\n    this.message = format(message, ...positionals);\n    cleanErrorStack(this);\n  }\n};\nvar invariant = (predicate, message, ...positionals) => {\n  if (!predicate) {\n    throw new InvariantError(message, ...positionals);\n  }\n};\ninvariant.as = (ErrorConstructor, predicate, message, ...positionals) => {\n  if (!predicate) {\n    const formatMessage = positionals.length === 0 ? message : format(message, positionals);\n    let error;\n    try {\n      error = Reflect.construct(ErrorConstructor, [formatMessage]);\n    } catch (err) {\n      error = ErrorConstructor(formatMessage);\n    }\n    throw error;\n  }\n};\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9vdXR2YXJpYW50QDEuNC4yL25vZGVfbW9kdWxlcy9vdXR2YXJpYW50L2xpYi9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDZDQUE2QztBQUN6RTtBQUNBLGlEQUFpRCxJQUFJO0FBQ3JEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9vdXR2YXJpYW50QDEuNC4yL25vZGVfbW9kdWxlcy9vdXR2YXJpYW50L2xpYi9pbmRleC5tanM/MmIxNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvZm9ybWF0LnRzXG52YXIgUE9TSVRJT05BTFNfRVhQID0gLyglPykoJShbc2Rpam9dKSkvZztcbmZ1bmN0aW9uIHNlcmlhbGl6ZVBvc2l0aW9uYWwocG9zaXRpb25hbCwgZmxhZykge1xuICBzd2l0Y2ggKGZsYWcpIHtcbiAgICBjYXNlIFwic1wiOlxuICAgICAgcmV0dXJuIHBvc2l0aW9uYWw7XG4gICAgY2FzZSBcImRcIjpcbiAgICBjYXNlIFwiaVwiOlxuICAgICAgcmV0dXJuIE51bWJlcihwb3NpdGlvbmFsKTtcbiAgICBjYXNlIFwialwiOlxuICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHBvc2l0aW9uYWwpO1xuICAgIGNhc2UgXCJvXCI6IHtcbiAgICAgIGlmICh0eXBlb2YgcG9zaXRpb25hbCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gcG9zaXRpb25hbDtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGpzb24gPSBKU09OLnN0cmluZ2lmeShwb3NpdGlvbmFsKTtcbiAgICAgIGlmIChqc29uID09PSBcInt9XCIgfHwganNvbiA9PT0gXCJbXVwiIHx8IC9eXFxbb2JqZWN0IC4rP1xcXSQvLnRlc3QoanNvbikpIHtcbiAgICAgICAgcmV0dXJuIHBvc2l0aW9uYWw7XG4gICAgICB9XG4gICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIGZvcm1hdChtZXNzYWdlLCAuLi5wb3NpdGlvbmFscykge1xuICBpZiAocG9zaXRpb25hbHMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIG1lc3NhZ2U7XG4gIH1cbiAgbGV0IHBvc2l0aW9uYWxJbmRleCA9IDA7XG4gIGxldCBmb3JtYXR0ZWRNZXNzYWdlID0gbWVzc2FnZS5yZXBsYWNlKFxuICAgIFBPU0lUSU9OQUxTX0VYUCxcbiAgICAobWF0Y2gsIGlzRXNjYXBlZCwgXywgZmxhZykgPT4ge1xuICAgICAgY29uc3QgcG9zaXRpb25hbCA9IHBvc2l0aW9uYWxzW3Bvc2l0aW9uYWxJbmRleF07XG4gICAgICBjb25zdCB2YWx1ZSA9IHNlcmlhbGl6ZVBvc2l0aW9uYWwocG9zaXRpb25hbCwgZmxhZyk7XG4gICAgICBpZiAoIWlzRXNjYXBlZCkge1xuICAgICAgICBwb3NpdGlvbmFsSW5kZXgrKztcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG1hdGNoO1xuICAgIH1cbiAgKTtcbiAgaWYgKHBvc2l0aW9uYWxJbmRleCA8IHBvc2l0aW9uYWxzLmxlbmd0aCkge1xuICAgIGZvcm1hdHRlZE1lc3NhZ2UgKz0gYCAke3Bvc2l0aW9uYWxzLnNsaWNlKHBvc2l0aW9uYWxJbmRleCkuam9pbihcIiBcIil9YDtcbiAgfVxuICBmb3JtYXR0ZWRNZXNzYWdlID0gZm9ybWF0dGVkTWVzc2FnZS5yZXBsYWNlKC8lezIsMn0vZywgXCIlXCIpO1xuICByZXR1cm4gZm9ybWF0dGVkTWVzc2FnZTtcbn1cblxuLy8gc3JjL2ludmFyaWFudC50c1xudmFyIFNUQUNLX0ZSQU1FU19UT19JR05PUkUgPSAyO1xuZnVuY3Rpb24gY2xlYW5FcnJvclN0YWNrKGVycm9yKSB7XG4gIGlmICghZXJyb3Iuc3RhY2spIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgbmV4dFN0YWNrID0gZXJyb3Iuc3RhY2suc3BsaXQoXCJcXG5cIik7XG4gIG5leHRTdGFjay5zcGxpY2UoMSwgU1RBQ0tfRlJBTUVTX1RPX0lHTk9SRSk7XG4gIGVycm9yLnN0YWNrID0gbmV4dFN0YWNrLmpvaW4oXCJcXG5cIik7XG59XG52YXIgSW52YXJpYW50RXJyb3IgPSBjbGFzcyBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IobWVzc2FnZSwgLi4ucG9zaXRpb25hbHMpIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIHRoaXMubmFtZSA9IFwiSW52YXJpYW50IFZpb2xhdGlvblwiO1xuICAgIHRoaXMubWVzc2FnZSA9IGZvcm1hdChtZXNzYWdlLCAuLi5wb3NpdGlvbmFscyk7XG4gICAgY2xlYW5FcnJvclN0YWNrKHRoaXMpO1xuICB9XG59O1xudmFyIGludmFyaWFudCA9IChwcmVkaWNhdGUsIG1lc3NhZ2UsIC4uLnBvc2l0aW9uYWxzKSA9PiB7XG4gIGlmICghcHJlZGljYXRlKSB7XG4gICAgdGhyb3cgbmV3IEludmFyaWFudEVycm9yKG1lc3NhZ2UsIC4uLnBvc2l0aW9uYWxzKTtcbiAgfVxufTtcbmludmFyaWFudC5hcyA9IChFcnJvckNvbnN0cnVjdG9yLCBwcmVkaWNhdGUsIG1lc3NhZ2UsIC4uLnBvc2l0aW9uYWxzKSA9PiB7XG4gIGlmICghcHJlZGljYXRlKSB7XG4gICAgY29uc3QgZm9ybWF0TWVzc2FnZSA9IHBvc2l0aW9uYWxzLmxlbmd0aCA9PT0gMCA/IG1lc3NhZ2UgOiBmb3JtYXQobWVzc2FnZSwgcG9zaXRpb25hbHMpO1xuICAgIGxldCBlcnJvcjtcbiAgICB0cnkge1xuICAgICAgZXJyb3IgPSBSZWZsZWN0LmNvbnN0cnVjdChFcnJvckNvbnN0cnVjdG9yLCBbZm9ybWF0TWVzc2FnZV0pO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgZXJyb3IgPSBFcnJvckNvbnN0cnVjdG9yKGZvcm1hdE1lc3NhZ2UpO1xuICAgIH1cbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcbmV4cG9ydCB7XG4gIEludmFyaWFudEVycm9yLFxuICBmb3JtYXQsXG4gIGludmFyaWFudFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/outvariant@1.4.2/node_modules/outvariant/lib/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/strict-event-emitter@0.5.1/node_modules/strict-event-emitter/lib/index.mjs":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/strict-event-emitter@0.5.1/node_modules/strict-event-emitter/lib/index.mjs ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Emitter: function() { return /* binding */ Emitter; },\n/* harmony export */   MemoryLeakError: function() { return /* binding */ MemoryLeakError; }\n/* harmony export */ });\n// src/MemoryLeakError.ts\nvar MemoryLeakError = class extends Error {\n  constructor(emitter, type, count) {\n    super(\n      `Possible EventEmitter memory leak detected. ${count} ${type.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`\n    );\n    this.emitter = emitter;\n    this.type = type;\n    this.count = count;\n    this.name = \"MaxListenersExceededWarning\";\n  }\n};\n\n// src/Emitter.ts\nvar _Emitter = class {\n  static listenerCount(emitter, eventName) {\n    return emitter.listenerCount(eventName);\n  }\n  constructor() {\n    this.events = /* @__PURE__ */ new Map();\n    this.maxListeners = _Emitter.defaultMaxListeners;\n    this.hasWarnedAboutPotentialMemoryLeak = false;\n  }\n  _emitInternalEvent(internalEventName, eventName, listener) {\n    this.emit(\n      internalEventName,\n      ...[eventName, listener]\n    );\n  }\n  _getListeners(eventName) {\n    return Array.prototype.concat.apply([], this.events.get(eventName)) || [];\n  }\n  _removeListener(listeners, listener) {\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n    return [];\n  }\n  _wrapOnceListener(eventName, listener) {\n    const onceListener = (...data) => {\n      this.removeListener(eventName, onceListener);\n      return listener.apply(this, data);\n    };\n    Object.defineProperty(onceListener, \"name\", { value: listener.name });\n    return onceListener;\n  }\n  setMaxListeners(maxListeners) {\n    this.maxListeners = maxListeners;\n    return this;\n  }\n  /**\n   * Returns the current max listener value for the `Emitter` which is\n   * either set by `emitter.setMaxListeners(n)` or defaults to\n   * `Emitter.defaultMaxListeners`.\n   */\n  getMaxListeners() {\n    return this.maxListeners;\n  }\n  /**\n   * Returns an array listing the events for which the emitter has registered listeners.\n   * The values in the array will be strings or Symbols.\n   */\n  eventNames() {\n    return Array.from(this.events.keys());\n  }\n  /**\n   * Synchronously calls each of the listeners registered for the event named `eventName`,\n   * in the order they were registered, passing the supplied arguments to each.\n   * Returns `true` if the event has listeners, `false` otherwise.\n   *\n   * @example\n   * const emitter = new Emitter<{ hello: [string] }>()\n   * emitter.emit('hello', 'John')\n   */\n  emit(eventName, ...data) {\n    const listeners = this._getListeners(eventName);\n    listeners.forEach((listener) => {\n      listener.apply(this, data);\n    });\n    return listeners.length > 0;\n  }\n  addListener(eventName, listener) {\n    this._emitInternalEvent(\"newListener\", eventName, listener);\n    const nextListeners = this._getListeners(eventName).concat(listener);\n    this.events.set(eventName, nextListeners);\n    if (this.maxListeners > 0 && this.listenerCount(eventName) > this.maxListeners && !this.hasWarnedAboutPotentialMemoryLeak) {\n      this.hasWarnedAboutPotentialMemoryLeak = true;\n      const memoryLeakWarning = new MemoryLeakError(\n        this,\n        eventName,\n        this.listenerCount(eventName)\n      );\n      console.warn(memoryLeakWarning);\n    }\n    return this;\n  }\n  on(eventName, listener) {\n    return this.addListener(eventName, listener);\n  }\n  once(eventName, listener) {\n    return this.addListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  prependListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      const nextListeners = [listener].concat(listeners);\n      this.events.set(eventName, nextListeners);\n    } else {\n      this.events.set(eventName, listeners.concat(listener));\n    }\n    return this;\n  }\n  prependOnceListener(eventName, listener) {\n    return this.prependListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  removeListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      this._removeListener(listeners, listener);\n      this.events.set(eventName, listeners);\n      this._emitInternalEvent(\"removeListener\", eventName, listener);\n    }\n    return this;\n  }\n  /**\n   * Alias for `emitter.removeListener()`.\n   *\n   * @example\n   * emitter.off('hello', listener)\n   */\n  off(eventName, listener) {\n    return this.removeListener(eventName, listener);\n  }\n  removeAllListeners(eventName) {\n    if (eventName) {\n      this.events.delete(eventName);\n    } else {\n      this.events.clear();\n    }\n    return this;\n  }\n  /**\n   * Returns a copy of the array of listeners for the event named `eventName`.\n   */\n  listeners(eventName) {\n    return Array.from(this._getListeners(eventName));\n  }\n  /**\n   * Returns the number of listeners listening to the event named `eventName`.\n   */\n  listenerCount(eventName) {\n    return this._getListeners(eventName).length;\n  }\n  rawListeners(eventName) {\n    return this.listeners(eventName);\n  }\n};\nvar Emitter = _Emitter;\nEmitter.defaultMaxListeners = 10;\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/strict-event-emitter@0.5.1/node_modules/strict-event-emitter/lib/index.mjs\n"));

/***/ })

}]);